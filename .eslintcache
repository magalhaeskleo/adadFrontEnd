[{"C:\\VsCode\\adad\\frontend\\src\\App.js":"1","C:\\VsCode\\adad\\frontend\\src\\index.js":"2","C:\\VsCode\\adad\\frontend\\src\\routes\\index.routes.js":"3","C:\\VsCode\\adad\\frontend\\src\\pages\\auth\\reset\\index.js":"4","C:\\VsCode\\adad\\frontend\\src\\routes\\app.routes.js":"5","C:\\VsCode\\adad\\frontend\\src\\context\\auth\\index.js":"6","C:\\VsCode\\adad\\frontend\\src\\pages\\auth\\login\\index.js":"7","C:\\VsCode\\adad\\frontend\\src\\service\\api.js":"8","C:\\VsCode\\adad\\frontend\\src\\routes\\auth.routes.js":"9","C:\\VsCode\\adad\\frontend\\src\\pages\\auth\\forgot\\index.js":"10","C:\\VsCode\\adad\\frontend\\src\\pages\\app\\menu\\index.js":"11","C:\\VsCode\\adad\\frontend\\src\\pages\\app\\nucleo\\index.js":"12","C:\\VsCode\\adad\\frontend\\src\\pages\\app\\people\\index.js":"13","C:\\VsCode\\adad\\frontend\\src\\pages\\app\\people\\table.js":"14","C:\\VsCode\\adad\\frontend\\src\\pages\\app\\nucleo\\table.js":"15","C:\\VsCode\\adad\\frontend\\src\\pages\\app\\nucleo\\addNucleo.js":"16","C:\\VsCode\\adad\\frontend\\src\\pages\\app\\people\\addPeople.js":"17","C:\\VsCode\\adad\\frontend\\src\\components\\DailogConfirmation.js":"18","C:\\VsCode\\adad\\frontend\\src\\components\\LoadingPage.js":"19","C:\\VsCode\\adad\\frontend\\src\\context\\app\\nucleo\\index.js":"20","C:\\VsCode\\adad\\frontend\\src\\context\\app\\people\\index.js":"21","C:\\VsCode\\adad\\frontend\\src\\components\\NucleoSelect.js":"22","C:\\VsCode\\adad\\frontend\\src\\pages\\app\\people\\bigPhoto.js":"23","C:\\VsCode\\adad\\frontend\\src\\components\\Webcam.js":"24","C:\\VsCode\\adad\\frontend\\src\\components\\constants.js":"25","C:\\VsCode\\adad\\frontend\\src\\pages\\app\\uniformes\\index.js":"26","C:\\VsCode\\adad\\frontend\\src\\pages\\app\\uniformes\\table.js":"27","C:\\VsCode\\adad\\frontend\\src\\components\\StatusPedido.js":"28","C:\\VsCode\\adad\\frontend\\src\\pages\\app\\pedidos\\table.js":"29","C:\\VsCode\\adad\\frontend\\src\\pages\\app\\pedidos\\index.js":"30","C:\\VsCode\\adad\\frontend\\src\\pages\\app\\uniformes\\addUniforme.js":"31","C:\\VsCode\\adad\\frontend\\src\\pages\\app\\pedidos\\addPedido.js":"32","C:\\VsCode\\adad\\frontend\\src\\components\\ItemSelect.js":"33","C:\\VsCode\\adad\\frontend\\src\\components\\IdentificacaoSelect.js":"34","C:\\VsCode\\adad\\frontend\\src\\components\\SelectNumeracao.js":"35","C:\\VsCode\\adad\\frontend\\src\\components\\StatusIdentificador.js":"36","C:\\VsCode\\adad\\frontend\\src\\pages\\app\\pedidos\\tableItensPedidos.js":"37","C:\\VsCode\\adad\\frontend\\src\\components\\TimelineComp.js":"38","C:\\VsCode\\adad\\frontend\\src\\pages\\app\\dashboard\\index.js":"39","C:\\VsCode\\adad\\frontend\\src\\components\\SkeletonCard.js":"40","C:\\VsCode\\adad\\frontend\\src\\pages\\app\\pedagogia\\index.js":"41","C:\\VsCode\\adad\\frontend\\src\\pages\\app\\pedagogia\\modalVisualizar.js":"42","C:\\VsCode\\adad\\frontend\\src\\components\\CardItem.js":"43","C:\\VsCode\\adad\\frontend\\src\\pages\\app\\pedagogia\\planodeaula\\index.js":"44","C:\\VsCode\\adad\\frontend\\src\\pages\\app\\pedagogia\\planodeaula\\addPlano.js":"45","C:\\VsCode\\adad\\frontend\\src\\components\\LideresForNucleo.js":"46","C:\\VsCode\\adad\\frontend\\src\\pages\\app\\pedagogia\\planodeaula\\table.js":"47","C:\\VsCode\\adad\\frontend\\src\\components\\IconButtonDelete.js":"48","C:\\VsCode\\adad\\frontend\\src\\context\\app\\pedido\\index.js":"49","C:\\VsCode\\adad\\frontend\\src\\context\\app\\plano\\index.js":"50","C:\\VsCode\\adad\\frontend\\src\\components\\AdadsForNucleo.js":"51","C:\\VsCode\\adad\\frontend\\src\\pages\\app\\pedidos\\editPedido.js":"52","C:\\VsCode\\adad\\frontend\\src\\components\\ButtonAnexo.js":"53","C:\\VsCode\\adad\\frontend\\src\\components\\DialogInsertLink.js":"54","C:\\VsCode\\adad\\frontend\\src\\pages\\app\\pedagogia\\docs\\addDoc.js":"55","C:\\VsCode\\adad\\frontend\\src\\pages\\app\\pedagogia\\turmas\\table.js":"56","C:\\VsCode\\adad\\frontend\\src\\pages\\app\\pedagogia\\turmas\\index.js":"57","C:\\VsCode\\adad\\frontend\\src\\pages\\app\\pedagogia\\turmas\\executePlano.js":"58","C:\\VsCode\\adad\\frontend\\src\\pages\\app\\pedagogia\\docs\\docauxiliar.js":"59","C:\\VsCode\\adad\\frontend\\src\\pages\\app\\secretaria\\addDoc.js":"60","C:\\VsCode\\adad\\frontend\\src\\pages\\app\\secretaria\\index.js":"61","C:\\VsCode\\adad\\frontend\\src\\pages\\app\\financeiro\\index.js":"62","C:\\VsCode\\adad\\frontend\\src\\pages\\app\\financeiro\\addFinanceiro.js":"63","C:\\VsCode\\adad\\frontend\\src\\pages\\app\\financeiro\\table.js":"64","C:\\VsCode\\adad\\frontend\\src\\pages\\app\\profile\\index.js":"65","C:\\VsCode\\adad\\frontend\\src\\pages\\app\\profile\\email.js":"66","C:\\VsCode\\adad\\frontend\\src\\pages\\app\\profile\\senha.js":"67","C:\\VsCode\\adad\\frontend\\src\\pages\\app\\profile\\avatar.js":"68","C:\\VsCode\\adad\\frontend\\src\\pages\\app\\usuarios\\addPeople.js":"69","C:\\VsCode\\adad\\frontend\\src\\pages\\app\\usuarios\\table.js":"70","C:\\VsCode\\adad\\frontend\\src\\pages\\app\\usuarios\\index.js":"71","C:\\VsCode\\adad\\frontend\\src\\pages\\app\\usuarios\\bigPhoto.js":"72","C:\\VsCode\\adad\\frontend\\src\\pages\\app\\pedidos\\viewPedido.js":"73","C:\\VsCode\\adad\\frontend\\src\\pages\\app\\pedidos\\tableItensPedidosStatico.js":"74"},{"size":258,"mtime":1606327344391,"results":"75","hashOfConfig":"76"},{"size":219,"mtime":1606326848978,"results":"77","hashOfConfig":"76"},{"size":253,"mtime":1606321410658,"results":"78","hashOfConfig":"76"},{"size":3762,"mtime":1606761302034,"results":"79","hashOfConfig":"76"},{"size":319,"mtime":1610125984318,"results":"80","hashOfConfig":"76"},{"size":3356,"mtime":1609178963161,"results":"81","hashOfConfig":"76"},{"size":8311,"mtime":1608181299935,"results":"82","hashOfConfig":"76"},{"size":230,"mtime":1610135353754,"results":"83","hashOfConfig":"76"},{"size":525,"mtime":1606321468928,"results":"84","hashOfConfig":"76"},{"size":1323,"mtime":1606350126199,"results":"85","hashOfConfig":"76"},{"size":9462,"mtime":1610127341448,"results":"86","hashOfConfig":"76"},{"size":3883,"mtime":1607697055395,"results":"87","hashOfConfig":"76"},{"size":5211,"mtime":1609871792760,"results":"88","hashOfConfig":"76"},{"size":9325,"mtime":1609265486786,"results":"89","hashOfConfig":"76"},{"size":7265,"mtime":1608297101053,"results":"90","hashOfConfig":"76"},{"size":5900,"mtime":1609932769883,"results":"91","hashOfConfig":"76"},{"size":27228,"mtime":1610038387651,"results":"92","hashOfConfig":"76"},{"size":1087,"mtime":1607956680451,"results":"93","hashOfConfig":"76"},{"size":548,"mtime":1606670195907,"results":"94","hashOfConfig":"76"},{"size":1699,"mtime":1607619876013,"results":"95","hashOfConfig":"76"},{"size":4153,"mtime":1609266311864,"results":"96","hashOfConfig":"76"},{"size":2372,"mtime":1609974318337,"results":"97","hashOfConfig":"76"},{"size":713,"mtime":1607379389118,"results":"98","hashOfConfig":"76"},{"size":2304,"mtime":1609183435192,"results":"99","hashOfConfig":"76"},{"size":1664,"mtime":1610126792722,"results":"100","hashOfConfig":"76"},{"size":3093,"mtime":1609187587750,"results":"101","hashOfConfig":"76"},{"size":6266,"mtime":1609248761155,"results":"102","hashOfConfig":"76"},{"size":367,"mtime":1607952070097,"results":"103","hashOfConfig":"76"},{"size":9909,"mtime":1610047010696,"results":"104","hashOfConfig":"76"},{"size":2501,"mtime":1609900132265,"results":"105","hashOfConfig":"76"},{"size":4395,"mtime":1609266650648,"results":"106","hashOfConfig":"76"},{"size":10838,"mtime":1610046196061,"results":"107","hashOfConfig":"76"},{"size":2348,"mtime":1607977134953,"results":"108","hashOfConfig":"76"},{"size":3220,"mtime":1608662571097,"results":"109","hashOfConfig":"76"},{"size":1980,"mtime":1607977164039,"results":"110","hashOfConfig":"76"},{"size":437,"mtime":1608156210599,"results":"111","hashOfConfig":"76"},{"size":4250,"mtime":1607769232179,"results":"112","hashOfConfig":"76"},{"size":2424,"mtime":1610044919522,"results":"113","hashOfConfig":"76"},{"size":5307,"mtime":1610118431079,"results":"114","hashOfConfig":"76"},{"size":628,"mtime":1607978953915,"results":"115","hashOfConfig":"76"},{"size":3829,"mtime":1608647557537,"results":"116","hashOfConfig":"76"},{"size":1294,"mtime":1608055789954,"results":"117","hashOfConfig":"76"},{"size":4839,"mtime":1608820171631,"results":"118","hashOfConfig":"76"},{"size":4392,"mtime":1608648675063,"results":"119","hashOfConfig":"76"},{"size":19433,"mtime":1610131549826,"results":"120","hashOfConfig":"76"},{"size":6081,"mtime":1609876401745,"results":"121","hashOfConfig":"76"},{"size":12531,"mtime":1610130735749,"results":"122","hashOfConfig":"76"},{"size":1122,"mtime":1608304496021,"results":"123","hashOfConfig":"76"},{"size":2276,"mtime":1609954704615,"results":"124","hashOfConfig":"76"},{"size":1882,"mtime":1608832991243,"results":"125","hashOfConfig":"76"},{"size":4032,"mtime":1609933529843,"results":"126","hashOfConfig":"76"},{"size":13094,"mtime":1609930919294,"results":"127","hashOfConfig":"76"},{"size":2423,"mtime":1608645453423,"results":"128","hashOfConfig":"76"},{"size":1741,"mtime":1608645543662,"results":"129","hashOfConfig":"76"},{"size":6156,"mtime":1609266755716,"results":"130","hashOfConfig":"76"},{"size":10538,"mtime":1608753452568,"results":"131","hashOfConfig":"76"},{"size":2749,"mtime":1608657290434,"results":"132","hashOfConfig":"76"},{"size":18878,"mtime":1609441891896,"results":"133","hashOfConfig":"76"},{"size":4993,"mtime":1610373471958,"results":"134","hashOfConfig":"76"},{"size":6177,"mtime":1609266824783,"results":"135","hashOfConfig":"76"},{"size":4491,"mtime":1609183701740,"results":"136","hashOfConfig":"76"},{"size":3598,"mtime":1609253399182,"results":"137","hashOfConfig":"76"},{"size":6159,"mtime":1609932087711,"results":"138","hashOfConfig":"76"},{"size":8189,"mtime":1610116927420,"results":"139","hashOfConfig":"76"},{"size":26121,"mtime":1610034143892,"results":"140","hashOfConfig":"76"},{"size":5698,"mtime":1609266941102,"results":"141","hashOfConfig":"76"},{"size":5526,"mtime":1609266959605,"results":"142","hashOfConfig":"76"},{"size":5319,"mtime":1609267043081,"results":"143","hashOfConfig":"76"},{"size":27224,"mtime":1610038377883,"results":"144","hashOfConfig":"76"},{"size":9247,"mtime":1609266340635,"results":"145","hashOfConfig":"76"},{"size":5174,"mtime":1609931958954,"results":"146","hashOfConfig":"76"},{"size":713,"mtime":1609261724172,"results":"147","hashOfConfig":"76"},{"size":2351,"mtime":1609946144168,"results":"148","hashOfConfig":"76"},{"size":3847,"mtime":1609931385227,"results":"149","hashOfConfig":"76"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},"hexwix",{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"175"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"175"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"187"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"191"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"197"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"205"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"209"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"187"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"218"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"226"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"218"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"197"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"161"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"251"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"187"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"158"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"271","messages":"272","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"226"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"187"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"295"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"191"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"302"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"306"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"309","messages":"310","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"218"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"158"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"161"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"320","messages":"321","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"158"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"197"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"197"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"158"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"175"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"209"},"C:\\VsCode\\adad\\frontend\\src\\App.js",[],["347","348"],"C:\\VsCode\\adad\\frontend\\src\\index.js",[],["349","350"],"C:\\VsCode\\adad\\frontend\\src\\routes\\index.routes.js",[],["351","352"],"C:\\VsCode\\adad\\frontend\\src\\pages\\auth\\reset\\index.js",[],["353","354"],"C:\\VsCode\\adad\\frontend\\src\\routes\\app.routes.js",[],"C:\\VsCode\\adad\\frontend\\src\\context\\auth\\index.js",[],"C:\\VsCode\\adad\\frontend\\src\\pages\\auth\\login\\index.js",[],"C:\\VsCode\\adad\\frontend\\src\\service\\api.js",[],"C:\\VsCode\\adad\\frontend\\src\\routes\\auth.routes.js",[],["355","356"],"C:\\VsCode\\adad\\frontend\\src\\pages\\auth\\forgot\\index.js",[],["357","358"],"C:\\VsCode\\adad\\frontend\\src\\pages\\app\\menu\\index.js",[],"C:\\VsCode\\adad\\frontend\\src\\pages\\app\\nucleo\\index.js",["359"],"import { Container, makeStyles, Snackbar } from '@material-ui/core';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { Add } from '@material-ui/icons';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport React, { useState } from 'react';\r\nimport { NucleoProvider } from '../../../context/app/nucleo';\r\nimport api from '../../../service/api';\r\nimport AddNucleos from './addNucleo';\r\nimport TableNucleos from './table';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    // maxWidth: 360,\r\n    marginTop: 5,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  searchDiv: {\r\n    maxWidth: '100vh',\r\n    marginLeft: 10,\r\n    [theme.breakpoints.down('sm')]: {\r\n      marginTop: 20,\r\n    },\r\n  },\r\n  headerTable: {\r\n    flex: 1,\r\n    textAlign: 'start',\r\n    justifyItems: 'flex-start',\r\n    [theme.breakpoints.down('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  listItemTitle1: {\r\n    flex: 1,\r\n    maxWidth: '33%',\r\n    [theme.breakpoints.down('sm')]: {\r\n      justifyContent: 'center',\r\n      width: '100%',\r\n    },\r\n  },\r\n  small: {\r\n    width: theme.spacing(6),\r\n    height: theme.spacing(6),\r\n  },\r\n\r\n  rootHeader: {\r\n    width: '100%',\r\n    // maxWidth: 360,\r\n    marginTop: 10,\r\n    paddingLeft: 5,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function Nucleo() {\r\n  const width = { tudo: 'xl', lateral: 'md', pequeno: 'sm' };\r\n  const classes = useStyles();\r\n  const [openModal, setOpenModal] = useState(false);\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n  const [severity, setSeverity] = useState('success');\r\n\r\n  const [initialValues, setInitialValues] = useState('');\r\n  const vertical = 'bottom';\r\n  const horizontal = 'left';\r\n\r\n  function callbackAdd(status, message) {\r\n    if (status === 'ok') {\r\n      setSeverity('success');\r\n      setMessage('Cadasrto realizado com sucesso');\r\n      setOpen(true);\r\n    }\r\n    if (status === 'error') {\r\n      setSeverity('warning');\r\n      setMessage(message);\r\n      setOpen(true);\r\n    }\r\n\r\n    if (status === 'cancel') {\r\n      setInitialValues('');\r\n    }\r\n  }\r\n\r\n  function callbackEdit(item) {\r\n    setInitialValues(item);\r\n    setOpenModal(true);\r\n  }\r\n\r\n  async function callbackDelete(item) {\r\n    if (item) {\r\n      const response = await api.put(`/nucleo/deactivate/${item.id}`);\r\n\r\n      if (response.error) {\r\n        setSeverity('warning');\r\n        setMessage(response.error);\r\n      } else {\r\n        setSeverity('success');\r\n        setMessage('Ação realizda com sucesso');\r\n      }\r\n      setOpen(true);\r\n    }\r\n  }\r\n\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant='filled' {...props} />;\r\n  }\r\n\r\n  const section = (\r\n    <NucleoProvider>\r\n      <Container\r\n        maxWidth={width.tudo}\r\n        style={{\r\n          minHeight: '80vh',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n        }}\r\n      >\r\n        <div style={{ textAlign: 'end' }}>\r\n          <Fab\r\n            color='primary'\r\n            aria-label='add'\r\n            onClick={() => setOpenModal(true)}\r\n          >\r\n            <Add />\r\n          </Fab>\r\n        </div>\r\n\r\n        <TableNucleos\r\n          callbackEdit={callbackEdit}\r\n          callbackDelete={callbackDelete}\r\n        />\r\n        <AddNucleos\r\n          openModal={openModal}\r\n          setOpenModal={setOpenModal}\r\n          callback={callbackAdd}\r\n          initialValues={initialValues}\r\n        />\r\n        <Snackbar\r\n          open={open}\r\n          anchorOrigin={{ vertical, horizontal }}\r\n          autoHideDuration={5000}\r\n          onClose={() => setOpen(false)}\r\n        >\r\n          <Alert onClose={() => setOpen(false)} severity={severity}>\r\n            {message}\r\n          </Alert>\r\n        </Snackbar>\r\n      </Container>\r\n    </NucleoProvider>\r\n  );\r\n  return section;\r\n}\r\n","C:\\VsCode\\adad\\frontend\\src\\pages\\app\\people\\index.js",["360"],"import { Container, makeStyles, Snackbar } from '@material-ui/core';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { Add } from '@material-ui/icons';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport React, { useState } from 'react';\r\nimport { PeopleProvider } from '../../../context/app/people';\r\nimport api from '../../../service/api';\r\nimport AddPepople from './addPeople';\r\nimport TablePeople from './table';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    // maxWidth: 360,\r\n    marginTop: 5,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  searchDiv: {\r\n    maxWidth: '100vh',\r\n    marginLeft: 10,\r\n    [theme.breakpoints.down('sm')]: {\r\n      marginTop: 20,\r\n    },\r\n  },\r\n  nameAvatar: {\r\n    maxWidth: '27%',\r\n    [theme.breakpoints.down('sm')]: {\r\n      width: '90%',\r\n    },\r\n  },\r\n  avatarData: {\r\n    flex: 1,\r\n    [theme.breakpoints.down('sm')]: {\r\n      justifyContent: 'space-between',\r\n    },\r\n  },\r\n\r\n  headerTable: {\r\n    flex: 1,\r\n    textAlign: 'start',\r\n    justifyItems: 'flex-start',\r\n    [theme.breakpoints.down('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n\r\n  small: {\r\n    width: theme.spacing(6),\r\n    height: theme.spacing(6),\r\n  },\r\n\r\n  rootHeader: {\r\n    width: '100%',\r\n    // maxWidth: 360,\r\n    marginTop: 10,\r\n    paddingLeft: 5,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\nconst now = new Date();\r\nconst nowFormat = `${now.getFullYear() - 6}-${\r\n  now.getMonth() < 10 ? '' + now.getMonth() + 1 : now.getMonth() + 1\r\n}-${now.getDate() < 10 ? '0' + now.getDate() : now.getDate()}`;\r\n\r\nconsole.log('o data', nowFormat);\r\n\r\nconst init = {\r\n  fullName: '',\r\n  cpf: '',\r\n  maritalStatus: 'solteiro',\r\n  personalDocument: '',\r\n  sexo: 'f',\r\n  phone: '',\r\n  street: '',\r\n  email: '',\r\n  number: '',\r\n  city: '',\r\n  state: '',\r\n  neighborhood: '',\r\n  complement: '',\r\n  denomination: '',\r\n  mothersName: '',\r\n  fathersName: '',\r\n  atividadenaigreja: '',\r\n  birthDate: nowFormat,\r\n  cep: '',\r\n  batizadoemaguas: 'n',\r\n};\r\n\r\nexport default function Nucleo() {\r\n  const width = { tudo: 'xl', lateral: 'md', pequeno: 'sm' };\r\n  const classes = useStyles();\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n  const [edition, setEdition] = useState(false);\r\n\r\n  const [initialValues, setInitialValues] = useState(init);\r\n\r\n  const [message, setMessage] = useState('');\r\n  const [severity, setSeverity] = useState('success');\r\n\r\n  const vertical = 'bottom';\r\n  const horizontal = 'left';\r\n\r\n  function handleClose() {\r\n    setOpenModal(false);\r\n    setInitialValues(init);\r\n    setEdition(false);\r\n  }\r\n\r\n  function callbackEdit(item) {\r\n    const { denomination, batizadoemaguas, atividadenaigreja } = item.church;\r\n    const {\r\n      street,\r\n      number,\r\n      cep,\r\n      city,\r\n      state,\r\n      complement,\r\n      neighborhood,\r\n    } = item.address;\r\n\r\n    const personal = item.personal;\r\n\r\n    setInitialValues({\r\n      ...personal,\r\n      street,\r\n      number,\r\n      cep,\r\n      city,\r\n      state,\r\n      complement,\r\n      neighborhood,\r\n      denomination,\r\n      batizadoemaguas,\r\n      atividadenaigreja,\r\n    });\r\n    setEdition(true);\r\n    setOpenModal(true);\r\n  }\r\n\r\n  function callbackPersonal(status, message) {\r\n    if (!status) {\r\n      setSeverity('warning');\r\n      setMessage(message);\r\n    } else {\r\n      setSeverity('success');\r\n      setMessage('Ação realizada com sucesso');\r\n    }\r\n    setOpen(true);\r\n  }\r\n\r\n  async function callbackDelete(item) {\r\n    if (item) {\r\n      const response = await api.put(\r\n        `/personaldata/deactivate/${item.personal.id}`\r\n      );\r\n\r\n      if (response.error) {\r\n        setSeverity('warning');\r\n        setMessage(response.error);\r\n      } else {\r\n        setSeverity('success');\r\n        setMessage('Ação realizada com sucesso');\r\n      }\r\n      setOpen(true);\r\n    }\r\n  }\r\n\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant='filled' {...props} />;\r\n  }\r\n\r\n  const section = (\r\n    <PeopleProvider>\r\n      <Container\r\n        maxWidth={width.tudo}\r\n        style={{\r\n          minHeight: '80vh',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n        }}\r\n      >\r\n        <div style={{ textAlign: 'end' }}>\r\n          <Fab\r\n            color='primary'\r\n            aria-label='add'\r\n            onClick={() => setOpenModal(true)}\r\n          >\r\n            <Add />\r\n          </Fab>\r\n        </div>\r\n\r\n        <TablePeople\r\n          callbackEdit={callbackEdit}\r\n          callbackDelete={callbackDelete}\r\n        />\r\n        <AddPepople\r\n          openModal={openModal}\r\n          handleClose={handleClose}\r\n          callbackPersonal={callbackPersonal}\r\n          initialValues={initialValues}\r\n          edition={edition}\r\n        />\r\n\r\n        <Snackbar\r\n          open={open}\r\n          anchorOrigin={{ vertical, horizontal }}\r\n          autoHideDuration={5000}\r\n          onClose={() => setOpen(false)}\r\n        >\r\n          <Alert onClose={() => setOpen(false)} severity={severity}>\r\n            {message}\r\n          </Alert>\r\n        </Snackbar>\r\n      </Container>\r\n    </PeopleProvider>\r\n  );\r\n\r\n  return section;\r\n}\r\n","C:\\VsCode\\adad\\frontend\\src\\pages\\app\\people\\table.js",["361","362","363"],"import {\r\n  IconButton,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Menu,\r\n  MenuItem,\r\n  Table,\r\n  TextField,\r\n} from '@material-ui/core/';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { Search } from '@material-ui/icons';\r\nimport { DeleteOutlined, EditOutlined } from '@material-ui/icons/';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport React, { useEffect, useState } from 'react';\r\nimport DailogConfirmation from '../../../components/DailogConfirmation';\r\nimport LoadingPage from '../../../components/LoadingPage';\r\nimport { usePeople } from '../../../context/app/people';\r\nimport api from '../../../service/api';\r\nimport BigPhoto from './bigPhoto';\r\n\r\nconst columns = [\r\n  { id: 'avatar', label: 'Nome', maxWidth: 100, align: 'center' },\r\n  { id: 'phone', label: 'Telefone', maxWidth: 80, align: 'center' },\r\n  { id: 'nucleo', label: 'Núcleo', maxWidth: 100, align: 'center' },\r\n  { id: 'action', label: '', maxWidth: 50, align: 'right' },\r\n];\r\n\r\nfunction createData(id, avatar, phone, nucleo, action) {\r\n  return { id, avatar, phone, nucleo, action };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    maxHeight: '60vh',\r\n  },\r\n  search: {\r\n    backgroundColor: 'white',\r\n    marginTop: 20,\r\n    padding: 20,\r\n    borderRadius: 10,\r\n  },\r\n\r\n  searchDiv: {\r\n    maxWidth: '100vh',\r\n    marginLeft: 10,\r\n    [theme.breakpoints.down('sm')]: {\r\n      marginTop: 20,\r\n    },\r\n  },\r\n  headerTableHide: {\r\n    [theme.breakpoints.down('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function StickyHeadTable({ callbackEdit, callbackDelete }) {\r\n  const classes = useStyles();\r\n  const [page, setPage] = useState(1);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [dataList, setDataList] = useState([]);\r\n  const [openBig, setOpenBig] = useState(false);\r\n  const [urlBig, setUrlBig] = useState('');\r\n  const [itemSelected, setItemSelected] = useState(null);\r\n  const [openConfirmation, setOpenConfirmation] = useState(false);\r\n  const [filterValue, setFilterValue] = useState('');\r\n\r\n  const {\r\n    getDataServer,\r\n    setLoadingData,\r\n    total,\r\n    loadingData,\r\n    getAdadsFilter,\r\n    carregar,\r\n  } = usePeople();\r\n\r\n  function handleUrlBig(url) {\r\n    setUrlBig(url);\r\n    setOpenBig(true);\r\n  }\r\n\r\n  async function getData(newPage) {\r\n    const list = await getDataServer(newPage);\r\n\r\n    if (list) {\r\n      const listFormat = list.map((item) =>\r\n        createData(\r\n          item.personal.id,\r\n          <ListItem\r\n            button\r\n            alignItems='flex-start'\r\n            onClick={() =>\r\n              handleUrlBig(\r\n                `${api.defaults.baseURL}/uploads/${item.personal.avatar}`\r\n              )\r\n            }\r\n          >\r\n            <ListItemAvatar>\r\n              <Avatar\r\n                src={`${api.defaults.baseURL}/uploads/${item.personal.avatar}`}\r\n                alt='request'\r\n              />\r\n            </ListItemAvatar>\r\n            <ListItemText\r\n              primary={item.personal.fullName}\r\n              secondary={dateFormat(item.personal.birthDate)}\r\n            />\r\n          </ListItem>,\r\n          item.personal.phone,\r\n          item.nucleo.name,\r\n          action(item)\r\n        )\r\n      );\r\n      setDataList(listFormat);\r\n    }\r\n  }\r\n\r\n  async function handleFilter() {\r\n    if (filterValue === '') return;\r\n    setLoadingData(true);\r\n    const list = await getAdadsFilter(filterValue);\r\n\r\n    if (list) {\r\n      const listFormat = list.map((item) =>\r\n        createData(\r\n          item.personal.id,\r\n          <ListItem alignItems='flex-start'>\r\n            <ListItemAvatar>\r\n              <Avatar\r\n                src={`${api.defaults.baseURL}/uploads/${item.personal.avatar}`}\r\n                alt='request'\r\n              />\r\n            </ListItemAvatar>\r\n            <ListItemText\r\n              primary={item.personal.fullName}\r\n              secondary={dateFormat(item.personal.birthDate)}\r\n            />\r\n          </ListItem>,\r\n          item.personal.phone,\r\n          item.nucleo.name,\r\n          action(item)\r\n        )\r\n      );\r\n      setDataList(listFormat);\r\n    }\r\n  }\r\n\r\n  const handleClick = (event, item) => {\r\n    setItemSelected(item);\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  async function callbackConfirm(status) {\r\n    if (status === 'ok') {\r\n      await callbackDelete(itemSelected);\r\n      handleClose();\r\n    }\r\n    if (status === 'cancel') {\r\n      callbackDelete();\r\n      handleClose();\r\n    }\r\n    getData();\r\n  }\r\n\r\n  function handleDelete() {\r\n    setOpenConfirmation(true);\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  async function handleChangePage(event, newPage) {\r\n    setLoadingData(true);\r\n    setPage(Number(newPage + 1));\r\n    await getData(newPage + 1);\r\n  }\r\n\r\n  function handleEdit() {\r\n    callbackEdit(itemSelected);\r\n    handleClose();\r\n  }\r\n\r\n  function dateFormat(date) {\r\n    const year = date.split('-')[0];\r\n    const month = date.split('-')[1];\r\n    const day = date.split('-')[2];\r\n    return `${day}/${month}/${year}`;\r\n  }\r\n\r\n  const action = (item) => (\r\n    <IconButton\r\n      color='primary'\r\n      aria-label='upload picture'\r\n      component='span'\r\n      onClick={(e) => handleClick(e, item)}\r\n    >\r\n      <MenuIcon />\r\n    </IconButton>\r\n  );\r\n\r\n  const search = (\r\n    <div className={classes.search}>\r\n      <Fab color='primary' aria-label='add' onClick={handleFilter}>\r\n        <Search />\r\n      </Fab>\r\n      <TextField\r\n        className={classes.searchDiv}\r\n        fullWidth\r\n        label='Pesquisar'\r\n        placeholder='Digite um nome para a pesquisa'\r\n        variant='outlined'\r\n        value={filterValue}\r\n        onChange={(e) => setFilterValue(e.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (filterValue === '') {\r\n      console.log('filter useefect');\r\n      setLoadingData(true);\r\n      getData(1);\r\n    }\r\n  }, [filterValue]);\r\n\r\n  useEffect(() => {\r\n    console.log('ativando o carregar');\r\n    getData(1);\r\n  }, [carregar]);\r\n\r\n  const menuButton = (\r\n    <Menu\r\n      id='menu-nucleo'\r\n      anchorEl={anchorEl}\r\n      keepMounted\r\n      open={Boolean(anchorEl)}\r\n      onClose={handleClose}\r\n    >\r\n      <MenuItem onClick={() => handleEdit()}>\r\n        <EditOutlined style={{ marginRight: 10 }} />\r\n        Editar\r\n      </MenuItem>\r\n      <MenuItem onClick={() => handleDelete()}>\r\n        <DeleteOutlined style={{ marginRight: 10 }} />\r\n        Excluir\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const tableList = (\r\n    <TableContainer className={classes.container}>\r\n      <Table>\r\n        <TableHead style={{ backgroundColor: '#F3F0F0' }}>\r\n          <TableRow>\r\n            {columns.map((column, index) => (\r\n              <TableCell\r\n                key={column.id}\r\n                align={column.align}\r\n                variant='head'\r\n                className={\r\n                  index > 1 && index < 3 ? classes.headerTableHide : ''\r\n                }\r\n                style={{\r\n                  maxWidth: column.maxWidth,\r\n                }}\r\n              >\r\n                {column.label}\r\n              </TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {dataList.map((row, index) => {\r\n            return (\r\n              <TableRow key={index}>\r\n                {columns.map((column, i) => {\r\n                  const value = row[column.id];\r\n                  return (\r\n                    <TableCell\r\n                      className={i > 1 && i < 3 ? classes.headerTableHide : ''}\r\n                      key={column.id}\r\n                      align={column.align}\r\n                      style={{\r\n                        maxWidth: column.maxWidth,\r\n                      }}\r\n                    >\r\n                      {value}\r\n                    </TableCell>\r\n                  );\r\n                })}\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n  const section = (\r\n    <Paper className={classes.root}>\r\n      {search}\r\n      {loadingData ? <LoadingPage /> : tableList}\r\n      <TablePagination\r\n        rowsPerPageOptions={[10]}\r\n        component='div'\r\n        count={total}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page - 1}\r\n        onChangePage={handleChangePage}\r\n        labelDisplayedRows={({ from, to, count }) =>\r\n          `${from}-${to} de ${count}`\r\n        }\r\n      />\r\n      {menuButton}\r\n      <DailogConfirmation\r\n        callback={callbackConfirm}\r\n        open={openConfirmation}\r\n        setOpen={setOpenConfirmation}\r\n      />\r\n      <BigPhoto open={openBig} setOpen={setOpenBig} url={urlBig} />\r\n    </Paper>\r\n  );\r\n  return section;\r\n}\r\n",["364","365"],"C:\\VsCode\\adad\\frontend\\src\\pages\\app\\nucleo\\table.js",["366","367"],"import { IconButton, Menu, MenuItem, TextField } from '@material-ui/core/';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { DeleteOutlined, EditOutlined, Search } from '@material-ui/icons/';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport React, { useEffect, useState } from 'react';\r\nimport DailogConfirmation from '../../../components/DailogConfirmation';\r\nimport LoadingPage from '../../../components/LoadingPage';\r\nimport { useNucleo } from '../../../context/app/nucleo';\r\n\r\nconst columns = [\r\n  { id: 'name', label: 'Nome', maxWidth: 100, align: 'center' },\r\n  { id: 'city', label: 'Cidade', maxWidth: 80, align: 'center' },\r\n  { id: 'neighborhood', label: 'Bairro', maxWidth: 80, align: 'center' },\r\n  { id: 'action', label: '', maxWidth: 50, align: 'right' },\r\n];\r\n\r\nfunction createData(id, name, city, neighborhood, action) {\r\n  return { id, name, city, neighborhood, action };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  searchDiv: {\r\n    maxWidth: '100vh',\r\n    marginLeft: 10,\r\n    [theme.breakpoints.down('sm')]: {\r\n      marginTop: 20,\r\n    },\r\n  },\r\n  container: {\r\n    maxHeight: '60vh',\r\n  },\r\n  search: {\r\n    backgroundColor: 'white',\r\n    marginTop: 20,\r\n    padding: 20,\r\n    borderRadius: 10,\r\n  },\r\n  headerTableHide: {\r\n    [theme.breakpoints.down('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  small: {\r\n    width: theme.spacing(6),\r\n    height: theme.spacing(6),\r\n  },\r\n}));\r\n\r\nexport default function StickyHeadTable({ callbackEdit, callbackDelete }) {\r\n  const classes = useStyles();\r\n  const [page, setPage] = useState(1);\r\n\r\n  const [anchorEl, setAnchorEl] = useState(false);\r\n  const [dataList, setDataList] = useState([]);\r\n  const [itemSelected, setItemSelected] = useState(null);\r\n  const [openConfirmation, setOpenConfirmation] = useState(false);\r\n\r\n  const {\r\n    loadingNucleos,\r\n    getNucleos,\r\n    total,\r\n    setLoadingNucleos,\r\n    nucleosList,\r\n  } = useNucleo();\r\n\r\n  const [filterValue, setFilterValue] = useState('');\r\n\r\n  const handleClick = (event, item) => {\r\n    setItemSelected(item);\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  async function callbackConfirm(status) {\r\n    if (status === 'ok') {\r\n      await callbackDelete(itemSelected);\r\n      handleClose();\r\n    }\r\n    if (status === 'cancel') {\r\n      callbackDelete();\r\n      handleClose();\r\n    }\r\n    getData();\r\n  }\r\n\r\n  function handleDelete() {\r\n    setOpenConfirmation(true);\r\n  }\r\n\r\n  function handleEdit() {\r\n    callbackEdit(itemSelected);\r\n    handleClose();\r\n  }\r\n\r\n  function handleFilter() {\r\n    const list = nucleosList.filter((valor) =>\r\n      valor.name.includes(filterValue)\r\n    );\r\n    setDataList(list);\r\n  }\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  async function handleChangePage(event, newPage) {\r\n    setLoadingNucleos(true);\r\n    setPage(Number(newPage + 1));\r\n    await getData(newPage + 1);\r\n  }\r\n\r\n  const action = (item) => (\r\n    <IconButton\r\n      color='primary'\r\n      aria-label='upload picture'\r\n      component='span'\r\n      onClick={(e) => handleClick(e, item)}\r\n    >\r\n      <MenuIcon />\r\n    </IconButton>\r\n  );\r\n\r\n  async function getData(newPage) {\r\n    const list = await getNucleos(newPage);\r\n\r\n    if (list) {\r\n      const listFormat = list.map((item) =>\r\n        createData(\r\n          item.id,\r\n          item.name,\r\n          item.city,\r\n          item.neighborhood,\r\n          action(item)\r\n        )\r\n      );\r\n      setDataList(listFormat);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (filterValue === '') {\r\n      setLoadingNucleos(true);\r\n      getData(1);\r\n    }\r\n  }, [filterValue]);\r\n\r\n  useEffect(() => {\r\n    getData(page);\r\n  }, [loadingNucleos]);\r\n\r\n  const menuButton = (\r\n    <Menu\r\n      id='menu-nucleo'\r\n      anchorEl={anchorEl}\r\n      keepMounted\r\n      open={Boolean(anchorEl)}\r\n      onClose={handleClose}\r\n    >\r\n      <MenuItem onClick={() => handleEdit()}>\r\n        <EditOutlined style={{ marginRight: 10 }} />\r\n        Editar\r\n      </MenuItem>\r\n      <MenuItem onClick={() => handleDelete()}>\r\n        <DeleteOutlined style={{ marginRight: 10 }} />\r\n        Excluir\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n  const search = (\r\n    <div className={classes.search}>\r\n      <Fab color='primary' aria-label='add' onClick={handleFilter}>\r\n        <Search />\r\n      </Fab>\r\n      <TextField\r\n        className={classes.searchDiv}\r\n        fullWidth\r\n        label='Pesquisar'\r\n        placeholder='Digite um nome para a pesquisa'\r\n        variant='outlined'\r\n        value={filterValue}\r\n        onChange={(e) => setFilterValue(e.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n  const tableList = (\r\n    <TableContainer className={classes.container}>\r\n      <Table>\r\n        <TableHead style={{ backgroundColor: '#F3F0F0' }}>\r\n          <TableRow>\r\n            {columns.map((column, index) => (\r\n              <TableCell\r\n                key={column.id}\r\n                align={column.align}\r\n                className={\r\n                  index > 0 && index < 3 ? classes.headerTableHide : ''\r\n                }\r\n                style={{\r\n                  maxWidth: column.maxWidth,\r\n                }}\r\n              >\r\n                {column.label}\r\n              </TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {dataList.map((row, index) => {\r\n            return (\r\n              <TableRow key={index}>\r\n                {columns.map((column, i) => {\r\n                  const value = row[column.id];\r\n                  return (\r\n                    <TableCell\r\n                      className={i > 0 && i < 3 ? classes.headerTableHide : ''}\r\n                      key={column.id}\r\n                      align={column.align}\r\n                      style={{\r\n                        maxWidth: column.maxWidth,\r\n                      }}\r\n                    >\r\n                      {value}\r\n                    </TableCell>\r\n                  );\r\n                })}\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n  const section = (\r\n    <Paper className={classes.root}>\r\n      {search}\r\n      {loadingNucleos ? <LoadingPage /> : tableList}\r\n      <TablePagination\r\n        rowsPerPageOptions={[10]}\r\n        component='div'\r\n        count={total}\r\n        rowsPerPage={10}\r\n        page={page - 1}\r\n        onChangePage={handleChangePage}\r\n        labelDisplayedRows={({ from, to, count }) =>\r\n          `${from}-${to} de ${count}`\r\n        }\r\n      />\r\n\r\n      {menuButton}\r\n\r\n      <DailogConfirmation\r\n        callback={callbackConfirm}\r\n        open={openConfirmation}\r\n        setOpen={setOpenConfirmation}\r\n      />\r\n    </Paper>\r\n  );\r\n\r\n  return section;\r\n}\r\n",["368","369"],"C:\\VsCode\\adad\\frontend\\src\\pages\\app\\nucleo\\addNucleo.js",[],"C:\\VsCode\\adad\\frontend\\src\\pages\\app\\people\\addPeople.js",["370"],"import {\r\n  Avatar,\r\n  Button,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormLabel,\r\n  InputLabel,\r\n  makeStyles,\r\n  MenuItem,\r\n  Radio,\r\n  RadioGroup,\r\n  Select,\r\n  Snackbar,\r\n  TextField,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { CameraAlt, Computer, Search } from '@material-ui/icons';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { Form, Formik } from 'formik';\r\nimport MuiPhoneNumber from 'material-ui-phone-number';\r\nimport React, { useEffect, useState } from 'react';\r\nimport * as yup from 'yup';\r\nimport { PERFIL_LIST } from '../../../components/constants';\r\nimport NucleoSelect from '../../../components/NucleoSelect';\r\nimport Webcam from '../../../components/Webcam';\r\nimport { usePeople } from '../../../context/app/people';\r\nimport { useAuth } from '../../../context/auth';\r\nimport api from '../../../service/api';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    textAlign: 'end',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  fullSm47: {\r\n    width: '47%',\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: '96%',\r\n    },\r\n  },\r\n  fullSm46: {\r\n    width: '46%',\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: '96%',\r\n    },\r\n  },\r\n  fullSm37: {\r\n    width: '37%',\r\n    marginTop: 12,\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: '96%',\r\n    },\r\n  },\r\n  fullSm55: {\r\n    width: '55%',\r\n    marginTop: 12,\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: '96%',\r\n    },\r\n  },\r\n\r\n  fullSm: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: '96%',\r\n    },\r\n  },\r\n\r\n  formControl: {\r\n    width: '46%',\r\n    marginTop: 4,\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: '96%',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function AddPeople({\r\n  openModal,\r\n  handleClose,\r\n  callbackPersonal,\r\n  initialValues,\r\n  edition,\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  const [urlPhoto, setUrlPhoto] = useState('');\r\n  const { setLoadingData, setCarregar } = usePeople();\r\n  const [openWeb, setOpenWeb] = useState(false);\r\n  const [fileSelect, setFileSelect] = useState('');\r\n  const [nucleoid, setNucleoid] = useState(0);\r\n  const [perfilid, setPerfilid] = useState(7);\r\n  const [errorFile, setErrorFile] = useState('');\r\n  const { user } = useAuth();\r\n  const horizontal = 'center';\r\n  const vertical = 'top';\r\n\r\n  useEffect(() => {\r\n    if (edition) {\r\n      setUrlPhoto(`${api.defaults.baseURL}/uploads/${initialValues.avatar}`);\r\n      setFileSelect('avatar');\r\n      setPerfilid(initialValues.perfilid);\r\n      setNucleoid(initialValues.nucleoid);\r\n    } else {\r\n      setUrlPhoto('');\r\n    }\r\n  }, [edition]);\r\n\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant='filled' {...props} />;\r\n  }\r\n\r\n  function closeModal() {\r\n    setFileSelect('');\r\n    setUrlPhoto('');\r\n    handleClose();\r\n  }\r\n  function callbackWeb(file) {\r\n    const url = URL.createObjectURL(file);\r\n    setUrlPhoto(url);\r\n    setFileSelect(file);\r\n    setErrorFile('');\r\n  }\r\n\r\n  const handleUploadFile = (e) => {\r\n    if (e.target.files[0]) {\r\n      const url = URL.createObjectURL(e.target.files[0]);\r\n      setFileSelect(e.target.files[0]);\r\n      setUrlPhoto(url);\r\n    }\r\n\r\n    setErrorFile('');\r\n  };\r\n\r\n  function callbackNucleo(id) {\r\n    setNucleoid(id);\r\n  }\r\n  const handlePerfil = (event) => {\r\n    setPerfilid(event.target.value);\r\n  };\r\n\r\n  async function createAvatar() {\r\n    const fileData = new FormData();\r\n    fileData.append('file', fileSelect);\r\n\r\n    const { data } = await api.post('/file/add', fileData, {\r\n      headers: {\r\n        'Content-type': 'multipart/form-data',\r\n      },\r\n    });\r\n    return data;\r\n  }\r\n\r\n  function validandoCPF(cpf) {\r\n    // Elimina CPFs invalidos conhecidos\r\n    if (\r\n      cpf === '00000000000' ||\r\n      cpf === '11111111111' ||\r\n      cpf === '22222222222' ||\r\n      cpf === '33333333333' ||\r\n      cpf === '44444444444' ||\r\n      cpf === '55555555555' ||\r\n      cpf === '66666666666' ||\r\n      cpf === '77777777777' ||\r\n      cpf === '88888888888' ||\r\n      cpf === '99999999999'\r\n    )\r\n      return false;\r\n    // Valida 1o digito\r\n    let add = 0;\r\n    for (let i = 0; i < 9; i++) add += parseInt(cpf.charAt(i)) * (10 - i);\r\n    let rev = 11 - (add % 11);\r\n    if (rev === 10 || rev === 11) rev = 0;\r\n    if (rev !== parseInt(cpf.charAt(9))) return false;\r\n    // Valida 2o digito\r\n    add = 0;\r\n    for (let i = 0; i < 10; i++) add += parseInt(cpf.charAt(i)) * (11 - i);\r\n    rev = 11 - (add % 11);\r\n    if (rev === 10 || rev === 11) rev = 0;\r\n    if (rev !== parseInt(cpf.charAt(10))) return false;\r\n    return true;\r\n  }\r\n\r\n  const [message, setMessage] = useState('');\r\n  const [severity, setSeverity] = useState('success');\r\n  const [openaAlert, setOpenAlert] = useState(false);\r\n\r\n  async function sendMatricula(form) {\r\n    if (!validandoCPF(form.cpf)) {\r\n      setMessage('O cpf esta inválido');\r\n      setSeverity('warning');\r\n      setOpenAlert(true);\r\n\r\n      return;\r\n    }\r\n\r\n    let avatar = '';\r\n\r\n    if (!fileSelect) {\r\n      setErrorFile('Escolha uma foto');\r\n      return;\r\n    }\r\n\r\n    if (edition) {\r\n      if (fileSelect !== 'avatar') {\r\n        await api.post('/file/delete', { file: initialValues.avatar });\r\n        avatar = await createAvatar();\r\n      } else {\r\n        avatar = initialValues.avatar;\r\n      }\r\n    } else {\r\n      avatar = await createAvatar();\r\n    }\r\n\r\n    let data = [];\r\n    const formEnv = {\r\n      ...form,\r\n      cep: Number(form.cep),\r\n      nucleoid,\r\n      perfilid,\r\n      avatar,\r\n    };\r\n\r\n    if (edition) {\r\n      const resp = await api.put('/personaldata/update', formEnv);\r\n      data = resp.data;\r\n    }\r\n\r\n    if (!edition) {\r\n      const resp = await api.post('/personaldata/add', formEnv);\r\n      data = resp.data;\r\n    }\r\n\r\n    if (data.error) {\r\n      callbackPersonal(false, data.error);\r\n    } else {\r\n      callbackPersonal(true);\r\n      setLoadingData(true);\r\n      setCarregar(true);\r\n      closeModal();\r\n    }\r\n  }\r\n\r\n  const validation = yup.object().shape({\r\n    fullName: yup.string().required('Campo obrigatório'),\r\n    cpf: yup.string().min(11, 'Número inválido').required('Campo obrigatório'),\r\n    email: yup.string().email('E-mail inválido').required('Campo obrigatório'),\r\n    phone: yup\r\n      .string()\r\n      .min(18, 'Número inválido')\r\n      .required('Campo obrigatório'),\r\n    street: yup.string().required('Campo obrigatório'),\r\n    number: yup.string().required('Campo obrigatório'),\r\n    city: yup.string().required('Campo obrigatório'),\r\n    state: yup.string().required('Campo obrigatório'),\r\n    personalDocument: yup.string().required('Campo obrigatório'),\r\n    neighborhood: yup.string().required('Campo obrigatório'),\r\n  });\r\n\r\n  async function buscarCep(cep) {\r\n    const response = await fetch(\r\n      'https://viacep.com.br/ws/' + cep + '/json/?callback'\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        return data;\r\n      });\r\n    return response;\r\n  }\r\n\r\n  const formikForm = (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      enableReinitialize\r\n      onSubmit={sendMatricula}\r\n      validationSchema={validation}\r\n    >\r\n      {({\r\n        errors,\r\n        touched,\r\n        values,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        setFieldValue,\r\n        setValues,\r\n        setFieldError,\r\n        setFieldTouched,\r\n      }) => {\r\n        return (\r\n          <Form onChange={() => console.log(values)}>\r\n            <div>\r\n              <Typography variant='subtitle1'>Dados Pessoais</Typography>\r\n              <div\r\n                style={{\r\n                  flexDirection: 'row',\r\n                  textAlign: '-webkit-center',\r\n                }}\r\n              >\r\n                <Avatar\r\n                  src={urlPhoto}\r\n                  alt='request'\r\n                  style={{\r\n                    width: 100,\r\n                    height: 100,\r\n                  }}\r\n                />\r\n                <label htmlFor='upload-photo'>\r\n                  <input\r\n                    style={{ display: 'none' }}\r\n                    id='upload-photo'\r\n                    name='upload-photo'\r\n                    type='file'\r\n                    onChange={(e) => handleUploadFile(e)}\r\n                  />\r\n                  {errorFile && (\r\n                    <div style={{ color: 'red', marginTop: 10 }}>\r\n                      {errorFile}\r\n                    </div>\r\n                  )}\r\n                  <Fab component='span' size='small'>\r\n                    <Computer />\r\n                  </Fab>\r\n                </label>\r\n                <Fab\r\n                  component='span'\r\n                  size='small'\r\n                  onClick={() => setOpenWeb(true)}\r\n                >\r\n                  <CameraAlt />\r\n                </Fab>\r\n              </div>\r\n\r\n              <Webcam\r\n                open={openWeb}\r\n                setOpen={setOpenWeb}\r\n                callbackWeb={callbackWeb}\r\n              />\r\n\r\n              <div\r\n                id='dadosPessoais'\r\n                className={classes.root}\r\n                style={{\r\n                  flexDirection: 'row',\r\n                  marginTop: 30,\r\n                  textAlign: 'left',\r\n                  width: '100%',\r\n                }}\r\n              >\r\n                <TextField\r\n                  style={{ width: '96%' }}\r\n                  label='Nome completo'\r\n                  name='fullName'\r\n                  size='small'\r\n                  value={values.fullName}\r\n                  fullWidth\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  error={!!touched.fullName && !!errors.fullName}\r\n                  helperText={\r\n                    touched.fullName && errors.fullName && errors.fullName\r\n                  }\r\n                />\r\n\r\n                <TextField\r\n                  style={{ width: '96%' }}\r\n                  label='E-mail'\r\n                  name='email'\r\n                  size='small'\r\n                  value={values.email}\r\n                  fullWidth\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  error={!!touched.email && !!errors.email}\r\n                  helperText={touched.email && errors.email && errors.email}\r\n                />\r\n\r\n                <MuiPhoneNumber\r\n                  style={{ width: '96%', marginTop: 30 }}\r\n                  defaultCountry={'br'}\r\n                  onlyCountries={['br', 'es', 'ar']}\r\n                  label='Telefone'\r\n                  name='phone'\r\n                  size='small'\r\n                  value={values.phone}\r\n                  fullWidth\r\n                  onChange={(resp) => {\r\n                    setFieldValue('phone', resp);\r\n                  }}\r\n                  onBlur={handleBlur}\r\n                  error={!!touched.phone && !!errors.phone}\r\n                  helperText={touched.phone && errors.phone && errors.phone}\r\n                />\r\n              </div>\r\n              <div\r\n                className={classes.root}\r\n                style={{\r\n                  flexDirection: 'row',\r\n                  marginTop: 30,\r\n                  textAlign: 'left',\r\n                  width: '100%',\r\n                }}\r\n              >\r\n                <FormControl className={classes.formControl}>\r\n                  <FormLabel component='legend'>Sexo</FormLabel>\r\n                  <RadioGroup\r\n                    row\r\n                    value={values.sexo}\r\n                    onChange={(e) => {\r\n                      setFieldValue('sexo', e.target.value);\r\n                    }}\r\n                    onBlur={handleBlur}\r\n                  >\r\n                    <FormControlLabel value='m' control={<Radio />} label='M' />\r\n                    <FormControlLabel value='f' control={<Radio />} label='F' />\r\n                  </RadioGroup>\r\n                </FormControl>\r\n\r\n                <FormControl className={classes.formControl}>\r\n                  <FormLabel component='legend'>Estado civil</FormLabel>\r\n                  <RadioGroup\r\n                    row\r\n                    value={values.maritalStatus}\r\n                    onChange={(e) => {\r\n                      setFieldValue('maritalStatus', e.target.value);\r\n                    }}\r\n                  >\r\n                    <FormControlLabel\r\n                      value='casado'\r\n                      control={<Radio />}\r\n                      label='Casado'\r\n                    />\r\n                    <FormControlLabel\r\n                      value='solteiro'\r\n                      control={<Radio />}\r\n                      label='Solteiro'\r\n                    />\r\n                    <FormControlLabel\r\n                      value='outros'\r\n                      control={<Radio />}\r\n                      label='Outros'\r\n                    />\r\n                  </RadioGroup>\r\n                </FormControl>\r\n              </div>\r\n              <div\r\n                className={classes.root}\r\n                style={{\r\n                  flexDirection: 'row',\r\n                  marginTop: 10,\r\n                  textAlign: 'left',\r\n                  width: '100%',\r\n                }}\r\n              >\r\n                <TextField\r\n                  className={classes.fullSm47}\r\n                  label='Nascimento'\r\n                  name='birthDate'\r\n                  size='small'\r\n                  type='date'\r\n                  defaultValue={initialValues.birthDate}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  value={values.birthDate}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  error={!!touched.birthDate && !!errors.birthDate}\r\n                />\r\n\r\n                <FormControl className={classes.formControl}>\r\n                  <InputLabel id='select-perfil-label-input'>Perfil</InputLabel>\r\n                  <Select\r\n                    labelId='select-perfil-label-id'\r\n                    id='select-perfil-id'\r\n                    value={perfilid}\r\n                    onChange={handlePerfil}\r\n                    disabled={!user.admin}\r\n                  >\r\n                    {PERFIL_LIST.map((item) => (\r\n                      <MenuItem key={item.id} value={item.id}>\r\n                        {item.name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </div>\r\n\r\n              <div\r\n                className={classes.root}\r\n                style={{\r\n                  flexDirection: 'row',\r\n                  marginTop: 10,\r\n                  textAlign: 'left',\r\n                  width: '100%',\r\n                }}\r\n              >\r\n                <TextField\r\n                  className={classes.fullSm47}\r\n                  label='Rg ou Certidão'\r\n                  name='personalDocument'\r\n                  size='small'\r\n                  type='number'\r\n                  value={values.personalDocument}\r\n                  onChange={(event) => {\r\n                    setFieldValue('personalDocument', event.target.value);\r\n                  }}\r\n                  onBlur={handleBlur}\r\n                  error={!!touched.personalDocument && errors.personalDocument}\r\n                  helperText={\r\n                    touched.personalDocument &&\r\n                    errors.personalDocument &&\r\n                    errors.personalDocument\r\n                  }\r\n                />\r\n\r\n                <TextField\r\n                  className={classes.fullSm46}\r\n                  label='CPF'\r\n                  name='cpf'\r\n                  size='small'\r\n                  type='number'\r\n                  value={values.cpf}\r\n                  onChange={(event) => {\r\n                    setFieldValue('cpf', event.target.value);\r\n                  }}\r\n                  onBlur={handleBlur}\r\n                  error={!!touched.cpf && !!errors.cpf}\r\n                  helperText={touched.cpf && errors.cpf && errors.cpf}\r\n                />\r\n              </div>\r\n\r\n              {perfilid === 7 && (\r\n                <TextField\r\n                  style={{ width: '96%', marginTop: 10 }}\r\n                  label='Nome do pai'\r\n                  name='fathersName'\r\n                  size='small'\r\n                  value={values.fathersName}\r\n                  fullWidth\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  error={!!touched.fathersName && !!errors.fathersName}\r\n                  helperText={\r\n                    touched.fathersName &&\r\n                    errors.fathersName &&\r\n                    errors.fathersName\r\n                  }\r\n                />\r\n              )}\r\n              {perfilid === 7 && (\r\n                <TextField\r\n                  style={{ width: '96%', marginTop: 20 }}\r\n                  label='Nome da mãe'\r\n                  name='mothersName'\r\n                  size='small'\r\n                  value={values.mothersName}\r\n                  fullWidth\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  error={!!touched.mothersName && !!errors.mothersName}\r\n                  helperText={\r\n                    touched.mothersName &&\r\n                    errors.mothersName &&\r\n                    errors.mothersName\r\n                  }\r\n                />\r\n              )}\r\n\r\n              <Typography variant='subtitle1' style={{ marginTop: 20 }}>\r\n                Endereço\r\n              </Typography>\r\n              <div\r\n                className={classes.root}\r\n                style={{\r\n                  flexDirection: 'row',\r\n                  marginTop: 10,\r\n                  textAlign: 'left',\r\n                  width: '100%',\r\n                }}\r\n              >\r\n                <TextField\r\n                  style={{ marginTop: 12, width: '55%' }}\r\n                  label='CEP'\r\n                  name='cep'\r\n                  size='small'\r\n                  value={values.cep}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  error={!!touched.cep && !!errors.cep}\r\n                  helperText={touched.cep && errors.cep && errors.cep}\r\n                />\r\n\r\n                <Fab\r\n                  color='primary'\r\n                  aria-label='add'\r\n                  size='small'\r\n                  onClick={async () => {\r\n                    const {\r\n                      bairro,\r\n                      localidade,\r\n                      logradouro,\r\n                      uf,\r\n                    } = await buscarCep(values.cep);\r\n\r\n                    if (logradouro === '' || logradouro === undefined) {\r\n                      setFieldTouched('cep', true);\r\n                      setFieldError('cep', 'Localização não encontrada');\r\n                    } else {\r\n                      setValues({\r\n                        ...values,\r\n                        neighborhood: bairro,\r\n                        street: logradouro,\r\n                        city: localidade,\r\n                        state: uf,\r\n                      });\r\n                    }\r\n                  }}\r\n                >\r\n                  <Search />\r\n                </Fab>\r\n              </div>\r\n              <div\r\n                className={classes.root}\r\n                style={{\r\n                  flexDirection: 'row',\r\n                  marginTop: 10,\r\n                  textAlign: 'left',\r\n                  width: '100%',\r\n                }}\r\n              >\r\n                <TextField\r\n                  className={classes.fullSm55}\r\n                  label='Rua'\r\n                  name='street'\r\n                  size='small'\r\n                  value={values.street}\r\n                  fullWidth\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  error={!!touched.street && !!errors.street}\r\n                  helperText={touched.street && errors.street && errors.street}\r\n                />\r\n                <TextField\r\n                  className={classes.fullSm37}\r\n                  label='Número'\r\n                  name='number'\r\n                  size='small'\r\n                  value={values.number}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  error={!!touched.number && !!errors.number}\r\n                  helperText={touched.number && errors.number && errors.number}\r\n                />\r\n              </div>\r\n              <div\r\n                className={classes.root}\r\n                style={{\r\n                  flexDirection: 'row',\r\n                  marginTop: 10,\r\n                  textAlign: 'left',\r\n                  width: '100%',\r\n                }}\r\n              >\r\n                <TextField\r\n                  className={classes.fullSm55}\r\n                  label='Cidade'\r\n                  name='city'\r\n                  size='small'\r\n                  value={values.city}\r\n                  fullWidth\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  error={!!touched.city && !!errors.city}\r\n                  helperText={touched.city && errors.city && errors.city}\r\n                />\r\n                <TextField\r\n                  className={classes.fullSm37}\r\n                  label='Estado'\r\n                  name='state'\r\n                  size='small'\r\n                  value={values.state}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  error={!!touched.state && !!errors.state}\r\n                  helperText={touched.state && errors.state && errors.state}\r\n                />\r\n              </div>\r\n\r\n              <div\r\n                className={classes.root}\r\n                style={{\r\n                  flexDirection: 'row',\r\n                  marginTop: 10,\r\n                  textAlign: 'left',\r\n                  width: '100%',\r\n                }}\r\n              >\r\n                <TextField\r\n                  className={classes.fullSm55}\r\n                  label='Bairro'\r\n                  name='neighborhood'\r\n                  size='small'\r\n                  value={values.neighborhood}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  error={!!touched.neighborhood && !!errors.neighborhood}\r\n                  helperText={\r\n                    touched.neighborhood &&\r\n                    errors.neighborhood &&\r\n                    errors.neighborhood\r\n                  }\r\n                />\r\n                <TextField\r\n                  className={classes.fullSm37}\r\n                  label='Complemento'\r\n                  name='complement'\r\n                  size='small'\r\n                  value={values.complement}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                />\r\n              </div>\r\n              <Typography variant='subtitle1' style={{ marginTop: 20 }}>\r\n                Igreja\r\n              </Typography>\r\n              <div\r\n                className={classes.root}\r\n                style={{\r\n                  flexDirection: 'row',\r\n                  marginTop: 10,\r\n                  textAlign: 'left',\r\n                  width: '100%',\r\n                }}\r\n              >\r\n                <TextField\r\n                  className={classes.fullSm46}\r\n                  label='Denominação'\r\n                  name='denomination'\r\n                  size='small'\r\n                  value={values.denomination}\r\n                  fullWidth\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  error={!!touched.denomination && !!errors.denomination}\r\n                  helperText={\r\n                    touched.denomination &&\r\n                    errors.denomination &&\r\n                    errors.denomination\r\n                  }\r\n                />\r\n\r\n                <FormControl\r\n                  className={classes.fullSm37}\r\n                  component='fieldset'\r\n                  style={{ marginLeft: 20 }}\r\n                >\r\n                  <FormLabel component='legend'>Batizado em aguas?</FormLabel>\r\n                  <RadioGroup\r\n                    name='batizadoemaguas'\r\n                    row\r\n                    value={values.batizadoemaguas}\r\n                    onChange={(event) => {\r\n                      setFieldValue('batizadoemaguas', event.target.value);\r\n                    }}\r\n                  >\r\n                    <FormControlLabel value='s' control={<Radio />} label='S' />\r\n                    <FormControlLabel value='n' control={<Radio />} label='N' />\r\n                  </RadioGroup>\r\n                </FormControl>\r\n              </div>\r\n              <div\r\n                className={classes.root}\r\n                style={{\r\n                  flexDirection: 'row',\r\n                  marginTop: 10,\r\n                  textAlign: 'left',\r\n                  width: '100%',\r\n                }}\r\n              >\r\n                <TextField\r\n                  className={classes.fullSm46}\r\n                  label='Atividade na igreja?'\r\n                  name='atividadenaigreja'\r\n                  size='small'\r\n                  value={values.atividadenaigreja}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                />\r\n                <NucleoSelect\r\n                  callbackNucleo={callbackNucleo}\r\n                  initialValues={initialValues}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className={classes.root}>\r\n              <Button\r\n                color='primary'\r\n                aria-label='add'\r\n                variant='outlined'\r\n                style={{ marginTop: 15 }}\r\n                onClick={handleSubmit}\r\n              >\r\n                Confirmar\r\n              </Button>\r\n\r\n              <Button\r\n                color='primary'\r\n                aria-label='add'\r\n                variant='outlined'\r\n                style={{ marginTop: 15 }}\r\n                onClick={closeModal}\r\n              >\r\n                Retornar\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n  return (\r\n    <div>\r\n      <Dialog open={openModal}>\r\n        <DialogTitle id='criaradad'>Nova Matrícula</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id='alert-dialog-description'>\r\n            {formikForm}\r\n            <Snackbar\r\n              open={openaAlert}\r\n              anchorOrigin={{ vertical, horizontal }}\r\n              autoHideDuration={5000}\r\n              onClose={() => setOpenAlert(false)}\r\n            >\r\n              <Alert onClose={() => setOpenAlert(false)} severity={severity}>\r\n                {message}\r\n              </Alert>\r\n            </Snackbar>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n",["371","372"],"C:\\VsCode\\adad\\frontend\\src\\components\\DailogConfirmation.js",[],"C:\\VsCode\\adad\\frontend\\src\\components\\LoadingPage.js",[],"C:\\VsCode\\adad\\frontend\\src\\context\\app\\nucleo\\index.js",["373"],"import React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport api from '../../../service/api';\r\nimport { useAuth } from '../../auth/';\r\n\r\nconst NucleoContextData = {\r\n  setNucleosList: false,\r\n  setLoadingNucleos: () => {},\r\n  getNucleos: () => {},\r\n  nucleoSelected: {},\r\n  setNucleoSelected: () => {},\r\n  nucleosList: [],\r\n  total: 0,\r\n};\r\n\r\nconst NucleoContext = createContext(NucleoContextData);\r\n\r\nexport const NucleoProvider = ({ children }) => {\r\n  const [loadingNucleos, setLoadingNucleos] = useState(true);\r\n  const [nucleoSelected, setNucleoSelected] = useState(true);\r\n  const [nucleosList, setNucleosList] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const { user } = useAuth();\r\n\r\n  useEffect(() => {\r\n    async function buscar() {\r\n      await getNucleos(1);\r\n    }\r\n    buscar();\r\n  }, []);\r\n\r\n  async function getNucleos(page) {\r\n    const response = await api.get('/allactivated', {\r\n      headers: {\r\n        page: page,\r\n      },\r\n    });\r\n\r\n    setTotal(response.data.total);\r\n\r\n    if (!response.data.error) {\r\n      setNucleosList(response.data.list);\r\n      await new Promise((resolve) => setTimeout(resolve, 1000));\r\n      setLoadingNucleos(false);\r\n      return response.data.list;\r\n    }\r\n    setLoadingNucleos(false);\r\n    return [];\r\n  }\r\n\r\n  return (\r\n    <NucleoContext.Provider\r\n      value={{\r\n        loadingNucleos,\r\n        getNucleos,\r\n        setLoadingNucleos,\r\n        nucleoSelected,\r\n        setNucleoSelected,\r\n        nucleosList,\r\n        total,\r\n        //reset,\r\n      }}\r\n    >\r\n      {children}\r\n    </NucleoContext.Provider>\r\n  );\r\n};\r\n\r\nexport function useNucleo() {\r\n  return useContext(NucleoContext);\r\n}\r\n",["374","375"],"C:\\VsCode\\adad\\frontend\\src\\context\\app\\people\\index.js",["376","377","378"],"import React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport api from '../../../service/api';\r\nimport { useAuth } from '../../auth';\r\n\r\nconst PeopleContextData = {\r\n  setDataList: [],\r\n  setLoadingData: false,\r\n  getDataServer: () => {},\r\n  getDataUser: () => {},\r\n  getAdadsFilter: () => {},\r\n  itemSelected: {},\r\n  setItemSelected: () => {},\r\n  dataListServer: [],\r\n  loadingData: false,\r\n  total: 0,\r\n  getDataUser: () => {},\r\n  getUserFilter: () => {},\r\n  totalUser: 0,\r\n  setCarregar: () => {},\r\n  carregar: false,\r\n};\r\n\r\nconst PeopleContext = createContext(PeopleContextData);\r\n\r\nexport const PeopleProvider = ({ children }) => {\r\n  const [loadingData, setLoadingData] = useState(true);\r\n  const [itemSelected, setItemSelected] = useState(true);\r\n  const [dataListServer, setDataListServer] = useState([]);\r\n  const [dataListUser, setDataListUser] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const [totalUser, setTotalUser] = useState(0);\r\n  const [carregar, setCarregar] = useState(false);\r\n  const { user } = useAuth();\r\n\r\n  useEffect(() => {\r\n    async function buscar() {\r\n      await getDataServer(1);\r\n    }\r\n    buscar();\r\n  }, []);\r\n\r\n  async function getDataServer(page) {\r\n    let response = [];\r\n\r\n    if (user.admin) {\r\n      response = await api.get('/allAdads', {\r\n        headers: {\r\n          page: Number(page),\r\n          userid: user.id,\r\n        },\r\n      });\r\n    } else {\r\n      response = await api.get('/personalData/allAdadsForNucleo', {\r\n        headers: {\r\n          page: Number(page),\r\n          userid: user.id,\r\n          nucleoid: user.nucleoid,\r\n        },\r\n      });\r\n    }\r\n\r\n    setTotal(response.data.total);\r\n\r\n    if (!response.data.error) {\r\n      setDataListServer(response.data.list);\r\n      await new Promise((resolve) => setTimeout(resolve, 1000));\r\n      setLoadingData(false);\r\n      setCarregar(false);\r\n      return response.data.list;\r\n    }\r\n\r\n    setLoadingData(false);\r\n    setCarregar(false);\r\n    return [];\r\n  }\r\n  async function getDataUser(page) {\r\n    let response = [];\r\n\r\n    response = await api.get('/allUsers', {\r\n      headers: {\r\n        page: Number(page),\r\n      },\r\n    });\r\n\r\n    setTotalUser(response.data.total);\r\n\r\n    if (!response.data.error) {\r\n      setDataListUser(response.data.list);\r\n      await new Promise((resolve) => setTimeout(resolve, 1000));\r\n      setLoadingData(false);\r\n      setCarregar(false);\r\n      return response.data.list;\r\n    }\r\n\r\n    setLoadingData(false);\r\n    setCarregar(false);\r\n    return [];\r\n  }\r\n\r\n  async function getUserFilter(filter) {\r\n    const response = await api.get('/filterUsers', {\r\n      headers: {\r\n        filter,\r\n      },\r\n    });\r\n\r\n    setTotal(response.data.total);\r\n\r\n    if (!response.data.error) {\r\n      setDataListServer(response.data.list);\r\n      await new Promise((resolve) => setTimeout(resolve, 1000));\r\n      setCarregar(false);\r\n      setLoadingData(false);\r\n      return response.data.list;\r\n    }\r\n    setCarregar(false);\r\n    setLoadingData(false);\r\n    return [];\r\n  }\r\n\r\n  async function getAdadsFilter(filter) {\r\n    const response = await api.get('/filterAdads', {\r\n      headers: {\r\n        admin: user.admin,\r\n        nucleoid: user.nucleoid,\r\n        filter,\r\n      },\r\n    });\r\n\r\n    setTotal(response.data.total);\r\n\r\n    if (!response.data.error) {\r\n      setDataListServer(response.data.list);\r\n      await new Promise((resolve) => setTimeout(resolve, 1000));\r\n      setCarregar(false);\r\n      setLoadingData(false);\r\n      return response.data.list;\r\n    }\r\n    setCarregar(false);\r\n    setLoadingData(false);\r\n    return [];\r\n  }\r\n\r\n  return (\r\n    <PeopleContext.Provider\r\n      value={{\r\n        loadingData,\r\n        getDataServer,\r\n        setLoadingData,\r\n        itemSelected,\r\n        getDataUser,\r\n        getAdadsFilter,\r\n        setItemSelected,\r\n        getUserFilter,\r\n        dataListServer,\r\n        total,\r\n        totalUser,\r\n        carregar,\r\n        setCarregar,\r\n        //reset,\r\n      }}\r\n    >\r\n      {children}\r\n    </PeopleContext.Provider>\r\n  );\r\n};\r\n\r\nexport function usePeople() {\r\n  return useContext(PeopleContext);\r\n}\r\n",["379","380"],"C:\\VsCode\\adad\\frontend\\src\\components\\NucleoSelect.js",["381"],"import { Input, MenuItem } from '@material-ui/core/';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useAuth } from '../context/auth';\r\nimport api from '../service/api';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    marginTop: 4,\r\n    width: '45%',\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: '96%',\r\n    },\r\n  },\r\n\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function SimpleSelectNucleo({ callbackNucleo, initialValues }) {\r\n  const classes = useStyles();\r\n  const [nucleos, setNucleos] = useState([]);\r\n  const [disabled, setDisabled] = useState(true);\r\n  const { user } = useAuth();\r\n  const [nucleo, setNucleo] = useState(user.nucleoid);\r\n\r\n  async function getData() {\r\n    const response = await api.get('/allsimpleactivate');\r\n    setNucleos(response.data);\r\n    console.log('O init value', initialValues);\r\n    if (initialValues && initialValues.nucleoid) {\r\n      setNucleo(initialValues.nucleoid);\r\n      callbackNucleo(initialValues.nucleoid);\r\n    } else {\r\n      setNucleo(user.nucleoid);\r\n      callbackNucleo(user.nucleoid);\r\n    }\r\n\r\n    if (user.admin) {\r\n      setDisabled(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const handleChange = (event) => {\r\n    setNucleo(event.target.value);\r\n    callbackNucleo(event.target.value);\r\n  };\r\n  const ITEM_HEIGHT = 48;\r\n  const ITEM_PADDING_TOP = 8;\r\n  const MenuProps = {\r\n    PaperProps: {\r\n      style: {\r\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n        width: 250,\r\n      },\r\n    },\r\n  };\r\n  return (\r\n    <FormControl className={classes.formControl}>\r\n      <InputLabel id='select-nucleo'>Núcleo</InputLabel>\r\n      <Select\r\n        disabled={disabled}\r\n        id='demo-mutiple-chip'\r\n        value={nucleo}\r\n        onChange={handleChange}\r\n        input={<Input id='select-nucleo' />}\r\n        MenuProps={MenuProps}\r\n      >\r\n        {nucleos.map((item) => (\r\n          <MenuItem key={item.id} value={item.id}>\r\n            {item.name}\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n}\r\n","C:\\VsCode\\adad\\frontend\\src\\pages\\app\\people\\bigPhoto.js",[],"C:\\VsCode\\adad\\frontend\\src\\components\\Webcam.js",["382","383"],"import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n} from '@material-ui/core';\r\nimport React from 'react';\r\nimport Webcam from 'react-webcam';\r\n\r\nexport default function WebComponent({ setOpen, open, callbackWeb }) {\r\n  const handleClose = () => setOpen(false);\r\n  const webcamRef = React.useRef(null);\r\n  const [imgSrc, setImgSrc] = React.useState(null);\r\n\r\n  const capt = (e) => {\r\n    const imageSrc = webcamRef.current.getScreenshot();\r\n\r\n    setImgSrc(imageSrc);\r\n  };\r\n\r\n  function callB() {\r\n    const now = new Date();\r\n\r\n    const BASE64_MARKER = ';base64,';\r\n    const parts = imgSrc.split(BASE64_MARKER);\r\n    const contentType = parts[0].split(':')[1];\r\n    const raw = window.atob(parts[1]);\r\n    const rawLength = raw.length;\r\n    const uInt8Array = new Uint8Array(rawLength);\r\n\r\n    for (let i = 0; i < rawLength; ++i) {\r\n      uInt8Array[i] = raw.charCodeAt(i);\r\n    }\r\n    const blob = new Blob([uInt8Array], { type: contentType });\r\n\r\n    var file = new File(\r\n      [blob],\r\n      `${now.getDay()}_${\r\n        now.getMonth() + 1\r\n      }_${now.getFullYear()}_${now.getHours()}_${now.getMinutes()}_${now.getSeconds()}_image.png`\r\n    );\r\n    console.log(file);\r\n\r\n    callbackWeb(file);\r\n    handleClose();\r\n  }\r\n  return (\r\n    <div>\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle id='criaradad'>Perfil</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id='alert-dialog-perfil'>\r\n            <Webcam\r\n              audio={false}\r\n              ref={webcamRef}\r\n              width={500}\r\n              height={500}\r\n              screenshotFormat='image/jpeg'\r\n            />\r\n            {imgSrc && (\r\n              <img src={imgSrc} style={{ maxWidth: 300, maxWidth: 300 }} />\r\n            )}\r\n            <DialogActions>\r\n              <Button color='primary' onClick={handleClose}>\r\n                Sair\r\n              </Button>\r\n              <Button color='primary' onClick={(e) => capt(e)}>\r\n                Capturar Foto\r\n              </Button>\r\n              <Button color='primary' onClick={callB}>\r\n                Salvar\r\n              </Button>\r\n            </DialogActions>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n",["384","385"],"C:\\VsCode\\adad\\frontend\\src\\components\\constants.js",[],"C:\\VsCode\\adad\\frontend\\src\\pages\\app\\uniformes\\index.js",[],"C:\\VsCode\\adad\\frontend\\src\\pages\\app\\uniformes\\table.js",["386","387"],"import {\r\n  IconButton,\r\n  Menu,\r\n  MenuItem,\r\n  Paper,\r\n  Table,\r\n  TextField,\r\n} from '@material-ui/core/';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { Search } from '@material-ui/icons';\r\nimport { DeleteOutlined, EditOutlined } from '@material-ui/icons/';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport React, { useEffect, useState } from 'react';\r\nimport DailogConfirmation from '../../../components/DailogConfirmation';\r\nimport LoadingPage from '../../../components/LoadingPage';\r\nimport api from '../../../service/api';\r\n\r\nconst columns = [\r\n  { id: 'item', label: 'Item', maxWidth: 52, align: 'center' },\r\n  {\r\n    id: 'name',\r\n    label: 'Nome',\r\n    maxWidth: 150,\r\n    align: 'center',\r\n  },\r\n  { id: 'valor', label: 'Valor', maxWidth: 95, align: 'center' },\r\n  { id: 'action', label: '', maxWidth: 55, align: 'right' },\r\n];\r\n\r\nfunction createData(item, name, valor, action) {\r\n  return {\r\n    item,\r\n    name,\r\n    valor,\r\n    action,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    maxHeight: '60vh',\r\n  },\r\n  search: {\r\n    backgroundColor: 'white',\r\n    marginTop: 20,\r\n    padding: 20,\r\n    borderRadius: 10,\r\n  },\r\n\r\n  searchDiv: {\r\n    maxWidth: '100vh',\r\n    marginLeft: 10,\r\n    [theme.breakpoints.down('sm')]: {\r\n      marginTop: 20,\r\n    },\r\n  },\r\n  headerTableHide: {\r\n    [theme.breakpoints.down('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  small: {\r\n    width: theme.spacing(6),\r\n    height: theme.spacing(6),\r\n  },\r\n}));\r\n\r\nexport default function TableUniformes({\r\n  callbackEdit,\r\n  callbackDelete,\r\n  carregar,\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [dataList, setDataList] = useState([]);\r\n\r\n  const [itemSelected, setItemSelected] = useState(null);\r\n  const [openConfirmation, setOpenConfirmation] = useState(false);\r\n  const [filterValue, setFilterValue] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  async function getData() {\r\n    const response = await api.get('/uniforme/all');\r\n    if (response.data) {\r\n      const listFormat = response.data.map((item) =>\r\n        createData(\r\n          item.id,\r\n          item.name,\r\n          item.valor,\r\n\r\n          action(item)\r\n        )\r\n      );\r\n      await new Promise((resolve) => setTimeout(resolve, 1000));\r\n      setLoading(false);\r\n      setDataList(listFormat);\r\n    }\r\n  }\r\n\r\n  const handleClick = (event, item) => {\r\n    setItemSelected(item);\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  async function callbackConfirm(status) {\r\n    if (status === 'ok') {\r\n      await callbackDelete(itemSelected);\r\n      handleClose();\r\n    }\r\n    if (status === 'cancel') {\r\n      callbackDelete();\r\n      handleClose();\r\n    }\r\n    getData();\r\n  }\r\n\r\n  function handleDelete() {\r\n    setOpenConfirmation(true);\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  function handleEdit() {\r\n    callbackEdit(itemSelected);\r\n    handleClose();\r\n  }\r\n\r\n  const action = (item) => (\r\n    <IconButton\r\n      color='primary'\r\n      aria-label='upload picture'\r\n      component='span'\r\n      onClick={(e) => handleClick(e, item)}\r\n    >\r\n      <MenuIcon />\r\n    </IconButton>\r\n  );\r\n\r\n  const search = (\r\n    <div className={classes.search}>\r\n      <Fab color='primary' aria-label='add'>\r\n        <Search />\r\n      </Fab>\r\n      <TextField\r\n        className={classes.searchDiv}\r\n        fullWidth\r\n        label='Pesquisar'\r\n        placeholder='Digite um nome para a pesquisa'\r\n        variant='outlined'\r\n        value={filterValue}\r\n        onChange={(e) => setFilterValue(e.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [carregar]);\r\n\r\n  const menuButton = (\r\n    <Menu\r\n      id='menu'\r\n      anchorEl={anchorEl}\r\n      keepMounted\r\n      open={Boolean(anchorEl)}\r\n      onClose={handleClose}\r\n    >\r\n      <MenuItem onClick={() => handleEdit()}>\r\n        <EditOutlined style={{ marginRight: 10 }} />\r\n        Editar\r\n      </MenuItem>\r\n      <MenuItem onClick={() => handleDelete()}>\r\n        <DeleteOutlined style={{ marginRight: 10 }} />\r\n        Excluir\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const tableList = (\r\n    <TableContainer className={classes.container}>\r\n      <Table>\r\n        <TableHead style={{ backgroundColor: '#F3F0F0' }}>\r\n          <TableRow>\r\n            {columns.map((column, index) => (\r\n              <TableCell\r\n                key={column.id}\r\n                align={column.align}\r\n                variant='head'\r\n                style={{\r\n                  maxWidth: column.maxWidth,\r\n                }}\r\n              >\r\n                {column.label}\r\n              </TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {dataList.map((row, index) => {\r\n            return (\r\n              <TableRow key={index}>\r\n                {columns.map((column, i) => {\r\n                  const value = row[column.id];\r\n\r\n                  return (\r\n                    <TableCell\r\n                      key={column.id}\r\n                      align={column.align}\r\n                      style={{\r\n                        maxWidth: column.maxWidth,\r\n                      }}\r\n                    >\r\n                      {value}\r\n                    </TableCell>\r\n                  );\r\n                })}\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n  const section = (\r\n    <Paper className={classes.root}>\r\n      {search}\r\n      {loading ? <LoadingPage /> : tableList}\r\n\r\n      {menuButton}\r\n      <DailogConfirmation\r\n        callback={callbackConfirm}\r\n        open={openConfirmation}\r\n        setOpen={setOpenConfirmation}\r\n      />\r\n    </Paper>\r\n  );\r\n  return section;\r\n}\r\n",["388","389"],"C:\\VsCode\\adad\\frontend\\src\\components\\StatusPedido.js",[],"C:\\VsCode\\adad\\frontend\\src\\pages\\app\\pedidos\\table.js",["390"],"C:\\VsCode\\adad\\frontend\\src\\pages\\app\\pedidos\\index.js",[],"C:\\VsCode\\adad\\frontend\\src\\pages\\app\\uniformes\\addUniforme.js",[],"C:\\VsCode\\adad\\frontend\\src\\pages\\app\\pedidos\\addPedido.js",[],"C:\\VsCode\\adad\\frontend\\src\\components\\ItemSelect.js",["391","392"],"import { Input, MenuItem } from '@material-ui/core/';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useAuth } from '../context/auth';\r\nimport api from '../service/api';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    marginTop: 4,\r\n    width: 150,\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: '96%',\r\n    },\r\n  },\r\n\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function SimpleSelectItem({ onChange }) {\r\n  const classes = useStyles();\r\n  const [itens, setItems] = useState([]);\r\n\r\n  const { user } = useAuth();\r\n  const [Item, setItem] = useState('');\r\n\r\n  async function getData() {\r\n    const response = await api.get('/uniforme/all');\r\n    setItems(response.data);\r\n    setItem(response.data[0].id);\r\n    onChange({\r\n      uniformeid: response.data[0].id,\r\n      name: response.data[0].name,\r\n      valor: response.data[0].valor,\r\n    });\r\n    // callbackItem(user.Itemid);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const handleChange = (event) => {\r\n    const item = itens.find((item) => item.id === event.target.value);\r\n    const name = item.name;\r\n    const valor = item.valor;\r\n    setItem(event.target.value);\r\n    onChange({\r\n      uniformeid: event.target.value,\r\n      name,\r\n      valor,\r\n    });\r\n\r\n    // callbackItem(event.target.value);\r\n  };\r\n  const ITEM_HEIGHT = 48;\r\n  const ITEM_PADDING_TOP = 8;\r\n  const MenuProps = {\r\n    PaperProps: {\r\n      style: {\r\n        maxHeight: ITEM_HEIGHT * 8.5 + ITEM_PADDING_TOP,\r\n        width: 300,\r\n        minWidth: 300,\r\n      },\r\n    },\r\n  };\r\n  return (\r\n    <FormControl className={classes.formControl}>\r\n      <InputLabel id='select-Item'>Item</InputLabel>\r\n      <Select\r\n        id='demo-mutiple-chip'\r\n        value={Item}\r\n        onChange={handleChange}\r\n        input={<Input id='select-Item' />}\r\n        MenuProps={MenuProps}\r\n      >\r\n        {itens.map((item) => (\r\n          <MenuItem key={item.id} value={item.id}>\r\n            {item.name}\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n}\r\n","C:\\VsCode\\adad\\frontend\\src\\components\\IdentificacaoSelect.js",["393","394"],"import { Input, MenuItem } from '@material-ui/core/';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { usePlano } from '../context/app/plano';\r\nimport { IDENTIFICACAO } from './constants';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    marginTop: 8,\r\n    width: 150,\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: '96%',\r\n    },\r\n  },\r\n\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function SelectIdentificador({ infantil, onChange }) {\r\n  const classes = useStyles();\r\n  const { itemSelected, edit } = usePlano();\r\n\r\n  const [itens, setItens] = useState(IDENTIFICACAO);\r\n  const [item, setItem] = useState(1);\r\n\r\n  const [infantilIdentificacao] = useState(\r\n    IDENTIFICACAO.filter((i) => i.id < 4)\r\n  );\r\n\r\n  const [adultoIdentificacao] = useState(IDENTIFICACAO.filter((i) => i.id > 3));\r\n\r\n  const handleChange = (event) => {\r\n    console.log('item selecionado', event.target.value);\r\n    setItem(event.target.value);\r\n    onChange(event.target.value);\r\n  };\r\n  const ITEM_HEIGHT = 48;\r\n  const ITEM_PADDING_TOP = 8;\r\n  const MenuProps = {\r\n    PaperProps: {\r\n      style: {\r\n        maxHeight: ITEM_HEIGHT * 8.5 + ITEM_PADDING_TOP,\r\n        width: 300,\r\n        minWidth: 300,\r\n      },\r\n    },\r\n  };\r\n  console.log('itdentificadores', IDENTIFICACAO);\r\n  useEffect(() => {\r\n    if (infantil === null) {\r\n      setItens(IDENTIFICACAO);\r\n      setItem(IDENTIFICACAO[0].id);\r\n    } else {\r\n      setItens(infantil ? infantilIdentificacao : adultoIdentificacao);\r\n      setItem(\r\n        infantil ? infantilIdentificacao[0].id : adultoIdentificacao[0].id\r\n      );\r\n      onChange(\r\n        infantil ? infantilIdentificacao[0].id : adultoIdentificacao[0].id\r\n      );\r\n    }\r\n  }, [infantil]);\r\n\r\n  console.log('edit', edit, itemSelected);\r\n\r\n  useEffect(() => {\r\n    if (edit) {\r\n      setItem(itemSelected.identificador);\r\n    } else {\r\n      setItem(1);\r\n    }\r\n  }, [edit]);\r\n\r\n  return (\r\n    <FormControl className={classes.formControl}>\r\n      <InputLabel id='select-Item'>Identificador</InputLabel>\r\n      <Select\r\n        id='demo-mutiple-chip'\r\n        value={item}\r\n        onChange={handleChange}\r\n        input={<Input id='select_identification' />}\r\n        MenuProps={MenuProps}\r\n      >\r\n        {itens.map((item, index) => (\r\n          <MenuItem\r\n            title={item.descricao}\r\n            key={index}\r\n            value={item.id}\r\n            style={{\r\n              background: item.color,\r\n              color: 'white',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                background: item.color,\r\n                textAlign: 'center',\r\n                width: '100%',\r\n                height: '100%',\r\n                color: 'white',\r\n                borderRadius: 20,\r\n              }}\r\n            >\r\n              {item.type}\r\n            </div>\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n}\r\n","C:\\VsCode\\adad\\frontend\\src\\components\\SelectNumeracao.js",["395"],"import { Input, MenuItem } from '@material-ui/core/';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { TAMANHO_ADULTO, TAMANHO_INFANTIL } from './constants';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    marginTop: 8,\r\n    width: 80,\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: '50%',\r\n    },\r\n  },\r\n\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function SelectNumeracao({ onChange, onBlur, infantil }) {\r\n  const classes = useStyles();\r\n  const [Itens, setItens] = useState(TAMANHO_INFANTIL);\r\n\r\n  const [item, setItem] = useState(TAMANHO_INFANTIL[0]);\r\n\r\n  useEffect(() => {\r\n    setItens(infantil ? TAMANHO_INFANTIL : TAMANHO_ADULTO);\r\n    setItem(infantil ? TAMANHO_INFANTIL[0] : TAMANHO_ADULTO[0]);\r\n    onChange(infantil ? TAMANHO_INFANTIL[0] : TAMANHO_ADULTO[0]);\r\n  }, [infantil]);\r\n\r\n  const handleChange = (event) => {\r\n    setItem(event.target.value);\r\n    onChange(event.target.value);\r\n  };\r\n  const ITEM_HEIGHT = 48;\r\n  const ITEM_PADDING_TOP = 8;\r\n  const MenuProps = {\r\n    PaperProps: {\r\n      style: {\r\n        maxHeight: ITEM_HEIGHT * 8.5 + ITEM_PADDING_TOP,\r\n        width: 300,\r\n        minWidth: 300,\r\n      },\r\n    },\r\n  };\r\n  return (\r\n    <FormControl className={classes.formControl}>\r\n      <InputLabel id='select-numeracao'>Numeração</InputLabel>\r\n      <Select\r\n        id='demo-mutiple-chip'\r\n        value={item}\r\n        onChange={handleChange}\r\n        input={<Input id='select_numeracao' />}\r\n        MenuProps={MenuProps}\r\n      >\r\n        {Itens.map((item) => (\r\n          <MenuItem key={item} value={item}>\r\n            {item}\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n}\r\n","C:\\VsCode\\adad\\frontend\\src\\components\\StatusIdentificador.js",[],"C:\\VsCode\\adad\\frontend\\src\\pages\\app\\pedidos\\tableItensPedidos.js",["396"],"import { IconButton, Paper, Table, Typography } from '@material-ui/core/';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Delete from '@material-ui/icons/Delete';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { IDENTIFICACAO } from '../../../components/constants';\r\nimport StatusIdentificador from '../../../components/StatusIdentificador';\r\n\r\nconst columns = [\r\n  {\r\n    id: 'item',\r\n    label: 'Item',\r\n    maxWidth: 50,\r\n    align: 'left',\r\n  },\r\n  { id: 'tamanho', label: 'Tamanho', maxWidth: 70, align: 'center' },\r\n  { id: 'quantidade', label: 'Quantidade', maxWidth: 40, align: 'center' },\r\n  {\r\n    id: 'identificador',\r\n    label: 'Identificador',\r\n    maxWidth: 100,\r\n    align: 'center',\r\n  },\r\n  { id: 'action', label: '', maxWidth: 50, align: 'center' },\r\n];\r\n\r\nfunction createData(ordem, item, tamanho, quantidade, identificador, action) {\r\n  return {\r\n    ordem,\r\n    item,\r\n    tamanho,\r\n    quantidade,\r\n    identificador,\r\n    action,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    width: '100%',\r\n    maxHeight: '60vh',\r\n  },\r\n\r\n  headerTableHide: {\r\n    [theme.breakpoints.down('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  small: {\r\n    width: theme.spacing(6),\r\n    height: theme.spacing(6),\r\n  },\r\n}));\r\n\r\nexport default function TableItensPedidos({ listItens, deleteItemList }) {\r\n  const classes = useStyles();\r\n  const [dataList, setDataList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const listFormat =\r\n      listItens.length > 0\r\n        ? listItens.map((item) => {\r\n            const colorId = IDENTIFICACAO.find(\r\n              (i) => i.id === item.identification\r\n            ).color;\r\n\r\n            return createData(\r\n              item.index,\r\n              item.name,\r\n              <Typography variant='body2' style={{ color: colorId }}>\r\n                {`${item.tamanho}-:-${item.numeracao}`}\r\n              </Typography>,\r\n              item.quantidade,\r\n              <StatusIdentificador identification={item.identification} />,\r\n              action(item)\r\n            );\r\n          })\r\n        : [];\r\n    setDataList(listFormat);\r\n  }, [listItens]);\r\n\r\n  function handleDelete(e, id) {\r\n    deleteItemList(id);\r\n  }\r\n\r\n  const action = (item) => (\r\n    <IconButton color='primary' onClick={(e) => handleDelete(e, item.index)}>\r\n      <Delete />\r\n    </IconButton>\r\n  );\r\n\r\n  const tableList = (\r\n    <TableContainer className={classes.container}>\r\n      <Table stickyHeader aria-label='sticky table'>\r\n        <TableHead>\r\n          <TableRow>\r\n            {columns.map((column, index) => (\r\n              <TableCell\r\n                key={column.id}\r\n                align={column.align}\r\n                variant='head'\r\n                className={index === 3 ? classes.headerTableHide : ''}\r\n                style={{\r\n                  maxWidth: column.maxWidth,\r\n                }}\r\n              >\r\n                {column.label}\r\n              </TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {dataList.map((row, index) => {\r\n            return (\r\n              <TableRow key={index}>\r\n                {columns.map((column, i) => {\r\n                  const value = row[column.id];\r\n\r\n                  return (\r\n                    <TableCell\r\n                      className={i === 3 ? classes.headerTableHide : ''}\r\n                      key={column.id}\r\n                      align={column.align}\r\n                      style={{\r\n                        maxWidth: column.maxWidth,\r\n                      }}\r\n                    >\r\n                      {value}\r\n                    </TableCell>\r\n                  );\r\n                })}\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n  const section = <Paper className={classes.root}>{tableList}</Paper>;\r\n  return section;\r\n}\r\n",["397","398"],"C:\\VsCode\\adad\\frontend\\src\\components\\TimelineComp.js",["399"],"import { makeStyles, Typography } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { COLOR_STATUS_PEDIDO } from './constants';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: 'inline-flex',\r\n    textAlign: 'center',\r\n    width: '100%',\r\n    padding: 10,\r\n    borderRadius: 20,\r\n    backgroundColor: 'whitesmoke',\r\n    [theme.breakpoints.down('xs')]: {\r\n      display: 'block',\r\n      textAlign: 'left',\r\n    },\r\n  },\r\n\r\n  connector: {\r\n    width: 80,\r\n    height: 2,\r\n    marginLeft: 5,\r\n    marginRight: 5,\r\n    marginTop: 7,\r\n    backgroundColor: 'silver',\r\n\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: 2,\r\n      height: 80,\r\n    },\r\n  },\r\n}));\r\n\r\nconst now = new Date();\r\nconst formatDate = `${\r\n  now.getDate() < 9 ? '0' + now.getDate() : now.getDate()\r\n}/${\r\n  now.getMonth() < 9 ? '' + now.getMonth() + 1 : now.getMonth()\r\n}/${now.getFullYear()}`;\r\n\r\nexport default function TimelineComp({ statusPedido }) {\r\n  const classes = useStyles();\r\n  const [statusHistory, setStatusHistory] = useState();\r\n  const [statusNew] = useState([formatDate, '0', '0', '0', '0']);\r\n\r\n  const Connector = <div className={classes.connector} />;\r\n  console.log('chegando o status ', statusPedido);\r\n\r\n  useEffect(() => {\r\n    console.log('status pedido', statusPedido);\r\n    if (statusPedido) {\r\n      setStatusHistory(statusPedido);\r\n    } else {\r\n      setStatusHistory(statusNew);\r\n    }\r\n  }, []);\r\n\r\n  const separator = (numberColunm) => (\r\n    <div>\r\n      <Typography variant='subtitle2' align='left'>\r\n        {statusHistory && statusHistory[numberColunm]}\r\n      </Typography>\r\n\r\n      <div\r\n        id='timeItem'\r\n        style={{\r\n          display: 'inline-flex',\r\n          textAlign: 'center',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n        }}\r\n      >\r\n        <div style={{ display: 'inline-flex' }}>\r\n          <div\r\n            style={{\r\n              width: 15,\r\n              height: 15,\r\n              borderRadius: 30,\r\n              backgroundColor: COLOR_STATUS_PEDIDO[numberColunm],\r\n            }}\r\n          />\r\n          {numberColunm !== 4 && Connector}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n  return (\r\n    <div className={classes.container} id='container'>\r\n      {separator(0)}\r\n      {separator(1)}\r\n      {separator(2)}\r\n      {separator(3)}\r\n      {separator(4)}\r\n    </div>\r\n  );\r\n}\r\n","C:\\VsCode\\adad\\frontend\\src\\pages\\app\\dashboard\\index.js",["400"],"C:\\VsCode\\adad\\frontend\\src\\components\\SkeletonCard.js",[],"C:\\VsCode\\adad\\frontend\\src\\pages\\app\\pedagogia\\index.js",[],"C:\\VsCode\\adad\\frontend\\src\\pages\\app\\pedagogia\\modalVisualizar.js",[],["401","402"],"C:\\VsCode\\adad\\frontend\\src\\components\\CardItem.js",[],"C:\\VsCode\\adad\\frontend\\src\\pages\\app\\pedagogia\\planodeaula\\index.js",["403","404","405","406"],"import { Container, makeStyles, Snackbar, Typography } from '@material-ui/core';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { Add, ArrowForward } from '@material-ui/icons';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport React, { useState } from 'react';\r\nimport { usePlano } from '../../../../context/app/plano';\r\nimport '../style.css';\r\nimport AddPlano from './addPlano';\r\nimport TablePlanos from './table';\r\n\r\nfunction getRandomColor(str) {\r\n  var hash = 0;\r\n  for (var i = 0; i < str.length; i++) {\r\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\r\n  }\r\n  var colour = '#';\r\n  for (var e = 0; e < 3; e++) {\r\n    var value = (hash >> (e * 8)) & 0xff;\r\n    colour += ('00' + value.toString(16)).substr(-2);\r\n  }\r\n  return colour;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    justifyContent: 'flex-start',\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n\r\n    [theme.breakpoints.down('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  fullSm: {\r\n    marginLeft: 10,\r\n    marginTop: 10,\r\n    width: '25%',\r\n    texrtAlign: 'start',\r\n    [theme.breakpoints.down('sm')]: {\r\n      width: '100%',\r\n    },\r\n  },\r\n  iconStyle: {\r\n    color: 'white',\r\n    height: '100%',\r\n  },\r\n  circleIcon: {\r\n    width: 60,\r\n    height: 60,\r\n    borderRadius: 60,\r\n    marginRight: 5,\r\n    textAlign: 'center',\r\n  },\r\n}));\r\n\r\nexport default function PlanoDeAula({ setPageReturn }) {\r\n  const width = { tudo: 'xl', lateral: 'md', pequeno: 'sm' };\r\n  const vertical = 'bottom';\r\n  const horizontal = 'left';\r\n  const [message, setMessage] = useState('');\r\n  const [severity, setSeverity] = useState('success');\r\n\r\n  const [carregar, setCarregar] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [openVisu, setOpenVisu] = useState(false);\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const { setEdit } = usePlano();\r\n\r\n  function handleOpenAdd() {\r\n    setEdit(false);\r\n\r\n    setOpenModal(true);\r\n  }\r\n\r\n  function handleAdd() {\r\n    setEdit(false);\r\n    setOpenModal(true);\r\n  }\r\n\r\n  function callbackAddPlano(status) {\r\n    if (status === 'ok') {\r\n      setSeverity('success');\r\n      setMessage('Operação realizada com sucesso');\r\n      setOpen(true);\r\n    }\r\n    if (status === 'error') {\r\n      setSeverity('warning');\r\n      setMessage(message);\r\n      setOpen(true);\r\n    }\r\n\r\n    setOpenModal(false);\r\n    setCarregar(true);\r\n    setEdit(false);\r\n  }\r\n\r\n  function callbackEdit() {\r\n    setOpenModal(true);\r\n  }\r\n\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant='filled' {...props} />;\r\n  }\r\n\r\n  return (\r\n    <Container\r\n      maxWidth={width.tudo}\r\n      style={{\r\n        minHeight: '80vh',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          display: 'inline-flex',\r\n          textAlign: 'start',\r\n          width: '100%',\r\n          justifyContent: 'space-between',\r\n        }}\r\n      >\r\n        <Typography variant='h6' style={{ color: '#5D6D7E' }}>\r\n          Planos de Aula\r\n        </Typography>\r\n\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n            textAlign: 'start',\r\n            width: 130,\r\n            justifyContent: 'space-evenly',\r\n          }}\r\n        >\r\n          <Fab\r\n            color='primary'\r\n            aria-label='add'\r\n            style={{ marginTop: 15 }}\r\n            onClick={() => handleAdd()}\r\n          >\r\n            <Add />\r\n          </Fab>\r\n          <Fab\r\n            color='primary'\r\n            aria-label='add'\r\n            style={{ marginTop: 15 }}\r\n            onClick={setPageReturn}\r\n          >\r\n            <ArrowForward />\r\n          </Fab>\r\n        </div>\r\n      </div>\r\n      <TablePlanos\r\n        carregar={carregar}\r\n        setCarregar={setCarregar}\r\n        callbackDelete={callbackAddPlano}\r\n        callbackEdit={callbackEdit}\r\n      />\r\n      <AddPlano\r\n        openModal={openModal}\r\n        onClose={() => handleOpenAdd()}\r\n        callback={callbackAddPlano}\r\n      />\r\n\r\n      <Snackbar\r\n        open={open}\r\n        anchorOrigin={{ vertical, horizontal }}\r\n        autoHideDuration={5000}\r\n        onClose={() => setOpen(false)}\r\n      >\r\n        <Alert onClose={() => setOpen(false)} severity={severity}>\r\n          {message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Container>\r\n  );\r\n}\r\n","C:\\VsCode\\adad\\frontend\\src\\pages\\app\\pedagogia\\planodeaula\\addPlano.js",["407"],"C:\\VsCode\\adad\\frontend\\src\\components\\LideresForNucleo.js",["408"],"import Chip from '@material-ui/core/Chip';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { usePlano } from '../context/app/plano';\r\nimport { useAuth } from '../context/auth';\r\nimport api from '../service/api';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    width: '100%',\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: '96%',\r\n    },\r\n  },\r\n\r\n  chips: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  chip: {\r\n    margin: 2,\r\n  },\r\n  noLabel: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nfunction getStyles(id, personName, theme) {\r\n  return {\r\n    fontWeight: personName.find((item) => item.id === id)\r\n      ? theme.typography.fontWeightRegular\r\n      : theme.typography.fontWeightMedium,\r\n    display: personName.find((item) => item.id === id) ? 'none' : 'block',\r\n  };\r\n}\r\n\r\nexport default function LideresForNucleo({ callbackLideres, error, setError }) {\r\n  const { user } = useAuth();\r\n  const { itemSelected, edit } = usePlano();\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const [personName, setPersonName] = useState([]);\r\n  const [lideres, setLideres] = useState([]);\r\n\r\n  function handleDelete(item) {\r\n    setPersonName(personName.filter((i) => Number(item.id) !== Number(i.id)));\r\n    callbackLideres(personName.filter((i) => Number(item.id) !== Number(i.id)));\r\n  }\r\n  const handleChange = (event) => {\r\n    setPersonName(event.target.value);\r\n    callbackLideres(event.target.value);\r\n    setError(false);\r\n  };\r\n\r\n  async function getData() {\r\n    const response = await api.get(`/personal/fornucleo/${user.nucleoid}`);\r\n\r\n    if (response.data) {\r\n      setLideres(response.data);\r\n    }\r\n    // callbackNucleo(user.nucleoid);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (edit) {\r\n      setPersonName(itemSelected.lideresSelected);\r\n    } else {\r\n      setPersonName([]);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [edit]);\r\n\r\n  return (\r\n    <>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id='demo-mutiple-chip-label'>Lideres</InputLabel>\r\n        <Select\r\n          fullWidth\r\n          labelId='demo-mutiple-chip-label'\r\n          id='demo-mutiple-chip'\r\n          multiple\r\n          disabled={lideres.length === personName.length}\r\n          value={personName}\r\n          onChange={handleChange}\r\n          input={<Input id='select-multiple-chip-lideres' />}\r\n          MenuProps={MenuProps}\r\n        >\r\n          {lideres.map((item) => (\r\n            <MenuItem\r\n              key={item.id}\r\n              value={item}\r\n              style={getStyles(item.id, personName, theme)}\r\n            >\r\n              {item.fullName}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n\r\n      {\r\n        <div className={classes.chips}>\r\n          {error ? (\r\n            <div style={{ color: 'red' }}>\r\n              Ao menos um lider deve ser selecionado\r\n            </div>\r\n          ) : (\r\n            personName.map((item) => (\r\n              <Chip\r\n                key={item.id}\r\n                label={item.fullName}\r\n                className={classes.chip}\r\n                onDelete={() => handleDelete(item)}\r\n              />\r\n            ))\r\n          )}\r\n        </div>\r\n      }\r\n    </>\r\n  );\r\n}\r\n/*\r\nimport { Input, MenuItem } from '@material-ui/core/';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useAuth } from '../context/auth';\r\nimport api from '../service/api';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    marginTop: 4,\r\n    width: '41%',\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: '96%',\r\n    },\r\n  },\r\n\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function SimpleSelectLideres({ callbackLideres }) {\r\n  const classes = useStyles();\r\n  const [disabled, setDisabled] = useState(true);\r\n  const { user } = useAuth();\r\n  const [nucleo, setNucleo] = useState(user.nucleoid);\r\n  const [lideres, setLideres] = useState([]);\r\n\r\n  async function getData() {\r\n    console.log('user', user);\r\n\r\n    const response = await api.get(`/personal/fornucleo/${user.nucleoid}`);\r\n\r\n    console.log('veio o response', response.data);\r\n    if (response.data) {\r\n      setLideres(response.data);\r\n    }\r\n    // callbackNucleo(user.nucleoid);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const handleChange = (event) => {\r\n    setNucleo(event.target.value);\r\n    // callbackNucleo(event.target.value);\r\n  };\r\n  const ITEM_HEIGHT = 48;\r\n  const ITEM_PADDING_TOP = 8;\r\n  const MenuProps = {\r\n    PaperProps: {\r\n      style: {\r\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n        width: 250,\r\n      },\r\n    },\r\n  };\r\n  return (\r\n    <FormControl className={classes.formControl}>\r\n      <InputLabel id='select-nucleo'>Lideres</InputLabel>\r\n      <Select\r\n        id='demo-mutiple-chip'\r\n        value={nucleo}\r\n        onChange={handleChange}\r\n        input={<Input id='select-nucleo' />}\r\n        MenuProps={MenuProps}\r\n      >\r\n        {lideres.map((item) => (\r\n          <MenuItem key={item.id} value={item.id}>\r\n            {item.fullName}\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n}\r\n\r\n*/\r\n","C:\\VsCode\\adad\\frontend\\src\\pages\\app\\pedagogia\\planodeaula\\table.js",["409"],"C:\\VsCode\\adad\\frontend\\src\\components\\IconButtonDelete.js",[],"C:\\VsCode\\adad\\frontend\\src\\context\\app\\pedido\\index.js",["410"],"import React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport api from '../../../service/api';\r\nimport { useAuth } from '../../auth/';\r\n\r\nconst now = new Date();\r\nconst formatDate = `${now.getDate()}/${\r\n  now.getMonth() + 1\r\n}/${now.getFullYear()}`;\r\n\r\nconst statusPedido = [formatDate, '0', '0', '0', '0'];\r\n\r\nconst PedidoContextData = {\r\n  setDataListPedido: () => {},\r\n  setLoading: () => {},\r\n  getDataServer: () => {},\r\n  itemSelected: { pedido: { status: 1 }, list: [], statusPedido },\r\n  setItemSelected: () => {},\r\n  dataListPedido: [],\r\n  loading: false,\r\n  total: 0,\r\n  edit: false,\r\n  setEdit: () => {},\r\n  user: {},\r\n};\r\n\r\nconst PedidoContext = createContext(PedidoContextData);\r\n\r\nexport const PedidoProvider = ({ children }) => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [dataListPedido, setDataListPedido] = useState([]);\r\n  const [itemSelected, setItemSelected] = useState('');\r\n  const [total, setTotal] = useState(0);\r\n  const [edit, setEdit] = useState(true);\r\n\r\n  const { user } = useAuth();\r\n\r\n  useEffect(() => {\r\n    if (loading) {\r\n      getDataServer(1);\r\n    }\r\n  }, [loading]);\r\n\r\n  async function getDataServer(page) {\r\n    let response = '';\r\n    if (user.admin) {\r\n      response = await api.get('pedido/all', {\r\n        headers: {\r\n          page: Number(page),\r\n        },\r\n      });\r\n    } else {\r\n      response = await api.get('pedido/allForNucleo', {\r\n        headers: {\r\n          page: Number(page),\r\n          nucleoid: Number(user.nucleoid),\r\n        },\r\n      });\r\n    }\r\n\r\n    if (!response.data.error) {\r\n      setTotal(response.data.total);\r\n      setDataListPedido(response.data.listPedidos);\r\n      await new Promise((resolve) => setTimeout(resolve, 1000));\r\n      setLoading(false);\r\n      return response.data.listPedidos;\r\n    }\r\n    setLoading(false);\r\n    return [];\r\n  }\r\n\r\n  return (\r\n    <PedidoContext.Provider\r\n      value={{\r\n        loading,\r\n        getDataServer,\r\n        setLoading,\r\n        itemSelected,\r\n        setItemSelected,\r\n        edit,\r\n        setEdit,\r\n        dataListPedido,\r\n        total,\r\n        user,\r\n      }}\r\n    >\r\n      {children}\r\n    </PedidoContext.Provider>\r\n  );\r\n};\r\n\r\nexport function usePedido() {\r\n  return useContext(PedidoContext);\r\n}\r\n","C:\\VsCode\\adad\\frontend\\src\\context\\app\\plano\\index.js",["411","412","413","414","415","416"],"import React, { createContext, useContext, useState } from 'react';\r\nimport { useAuth } from '../../auth/';\r\n\r\nconst PlanoContextData = {\r\n  // setDataList: () => {},\r\n  // setLoading: () => {},\r\n  // getDataServer: () => {},\r\n  itemSelected: {},\r\n  setItemSelected: () => {},\r\n  edit: false,\r\n  setEdit: () => {},\r\n  user: {},\r\n  // dataList: [],\r\n  // loading: true,\r\n  //  total: 0,\r\n  // user: {},\r\n};\r\n\r\nconst PlanoContext = createContext(PlanoContextData);\r\n\r\nexport const PlanoProvider = ({ children }) => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [dataList, setDataList] = useState([]);\r\n  const [itemSelected, setItemSelected] = useState('');\r\n  const [edit, setEdit] = useState(false);\r\n\r\n  const [total, setTotal] = useState(0);\r\n  const { user } = useAuth();\r\n  /*\r\n  useEffect(() => {\r\n    async function buscar() {\r\n      await getDataServer(1);\r\n    }\r\n    buscar();\r\n  }, [loading]);\r\n  /*\r\n  async function getDataServer(page) {\r\n    const response = await api.get('pedido/all', {\r\n      headers: {\r\n        page: Number(page),\r\n      },\r\n    });\r\n    console.log('esta vindo no pedido provider', response.data);\r\n\r\n    if (!response.data.error) {\r\n      setTotal(response.data.total);\r\n      setDataList(response.data.listPedidos);\r\n      await new Promise((resolve) => setTimeout(resolve, 1000));\r\n      setLoading(false);\r\n      return response.data.listPedidos;\r\n    }\r\n    setLoading(false);\r\n    return [];\r\n  }\r\n*/\r\n  return (\r\n    <PlanoContext.Provider\r\n      value={{\r\n        //loading,\r\n        //getDataServer,\r\n        //setLoading,\r\n        itemSelected,\r\n        user,\r\n        setItemSelected,\r\n        edit,\r\n        setEdit,\r\n        //dataList,\r\n        //total,\r\n        //user,\r\n      }}\r\n    >\r\n      {children}\r\n    </PlanoContext.Provider>\r\n  );\r\n};\r\n\r\nexport function usePlano() {\r\n  return useContext(PlanoContext);\r\n}\r\n","C:\\VsCode\\adad\\frontend\\src\\components\\AdadsForNucleo.js",[],"C:\\VsCode\\adad\\frontend\\src\\pages\\app\\pedidos\\editPedido.js",[],"C:\\VsCode\\adad\\frontend\\src\\components\\ButtonAnexo.js",[],"C:\\VsCode\\adad\\frontend\\src\\components\\DialogInsertLink.js",[],"C:\\VsCode\\adad\\frontend\\src\\pages\\app\\pedagogia\\docs\\addDoc.js",["417","418","419","420","421"],"import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Divider,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemSecondaryAction,\r\n  ListItemText,\r\n  makeStyles,\r\n  TextField,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport { AttachFile, Close, Language, Visibility } from '@material-ui/icons';\r\nimport React, { useState } from 'react';\r\nimport ButtonAnexo from '../../../../components/ButtonAnexo';\r\nimport { useAuth } from '../../../../context/auth';\r\nimport api from '../../../../service/api';\r\nimport './style.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    textAlign: 'end',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  formControl: {\r\n    width: '46%',\r\n    marginTop: 4,\r\n  },\r\n}));\r\n\r\nexport default function Addpage({\r\n  openModal,\r\n  closeModal,\r\n  callback,\r\n  initialValues,\r\n}) {\r\n  const classes = useStyles();\r\n  const [errorFile, setErrorFile] = useState('');\r\n  const [fileSelect, setFileSelect] = useState('');\r\n  const [url, setUrl] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [inserteAnexos, setAnexos] = useState([]);\r\n  const { user } = useAuth();\r\n\r\n  function clean() {\r\n    setErrorFile('');\r\n    setFileSelect();\r\n    setUrl();\r\n    setName();\r\n  }\r\n  const handleClose = () => {\r\n    clean();\r\n    closeModal();\r\n    setAnexos([]);\r\n  };\r\n\r\n  async function sendDoc() {\r\n    const link = inserteAnexos.find((item) => item.type === 'link');\r\n    const form = {\r\n      name,\r\n      urldoc: await createDoc(),\r\n      link: link ? link.value : '',\r\n      nucleoid: user.nucleoid,\r\n      setor: 1,\r\n    };\r\n\r\n    console.log(form);\r\n    const { data } = await api.post('/doc/add', form);\r\n\r\n    clean();\r\n    callback('ok');\r\n  }\r\n\r\n  async function createDoc() {\r\n    const doc = inserteAnexos.find((item) => item.type === 'file');\r\n    console.log('file', doc);\r\n    if (doc) {\r\n      const fileData = new FormData();\r\n      fileData.append('file', doc.file);\r\n      const { data } = await api.post('/file/add', fileData, {\r\n        headers: {\r\n          'Content-type': 'multipart/form-data',\r\n        },\r\n      });\r\n      return data;\r\n    }\r\n    return '';\r\n  }\r\n\r\n  function handleViewFile(item) {\r\n    if (item.id) {\r\n      return window.open(`${api.defaults.baseURL}/uploads/${item.value}`);\r\n    }\r\n    window.open(item.value);\r\n  }\r\n\r\n  function handleNavigateToLink(item) {\r\n    window.open(item.value);\r\n  }\r\n\r\n  function handleDeletAnexos(item) {\r\n    setAnexos(inserteAnexos.filter((i) => i.value !== item.value));\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={openModal} fullWidth maxWidth='xs'>\r\n        <DialogTitle id='criaradad'>Documento</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id='alert-dialog-description'>\r\n            <div className='login-form'>\r\n              <div\r\n                style={{\r\n                  width: '50%',\r\n                  marginRight: 10,\r\n                }}\r\n              >\r\n                <TextField\r\n                  label='Nome'\r\n                  name='name'\r\n                  size='small'\r\n                  value={name}\r\n                  fullWidth\r\n                  onChange={(e) => setName(e.target.value)}\r\n\r\n                  //error={!!touched.name && !!errors.name}\r\n                  //helperText={touched.name && errors.name && errors.name}\r\n                />\r\n                <ButtonAnexo\r\n                  setAnexos={setAnexos}\r\n                  inserteAnexos={inserteAnexos}\r\n                />\r\n              </div>\r\n              <div\r\n                id='div_atachs'\r\n                style={{\r\n                  marginTop: 10,\r\n                  marginLeft: 20,\r\n                  width: '100%',\r\n                  textAlign: 'start',\r\n                }}\r\n              >\r\n                {inserteAnexos &&\r\n                  inserteAnexos.map((item, index) => (\r\n                    <List component='nav' aria-label='main mailbox folders'>\r\n                      <ListItem key={index}>\r\n                        <ListItemIcon>\r\n                          {item.type === 'file' ? (\r\n                            <AttachFile style={{ color: 'red' }} />\r\n                          ) : (\r\n                            <Language style={{ color: 'blue' }} />\r\n                          )}\r\n                        </ListItemIcon>\r\n                        <ListItemText\r\n                          primary={\r\n                            <Typography variant='body2'>\r\n                              {item.name.slice(0, 20)}...\r\n                            </Typography>\r\n                          }\r\n                        />\r\n                        <ListItemSecondaryAction>\r\n                          <IconButton\r\n                            onClick={() =>\r\n                              item.type === 'file'\r\n                                ? handleViewFile(item)\r\n                                : handleNavigateToLink(item)\r\n                            }\r\n                          >\r\n                            <Visibility />\r\n                          </IconButton>\r\n\r\n                          <IconButton onClick={() => handleDeletAnexos(item)}>\r\n                            <Close />\r\n                          </IconButton>\r\n                        </ListItemSecondaryAction>\r\n                      </ListItem>\r\n                      <Divider />\r\n                    </List>\r\n                  ))}\r\n              </div>\r\n            </div>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            color='primary'\r\n            aria-label='add'\r\n            variant='outlined'\r\n            size='small'\r\n            style={{ marginTop: 15 }}\r\n            onClick={sendDoc}\r\n          >\r\n            Confirmar\r\n          </Button>\r\n          <Button\r\n            size='small'\r\n            color='primary'\r\n            variant='outlined'\r\n            style={{ marginTop: 15 }}\r\n            onClick={handleClose}\r\n          >\r\n            Retornar\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n",["422","423"],"C:\\VsCode\\adad\\frontend\\src\\pages\\app\\pedagogia\\turmas\\table.js",["424"],"import MomentUtils from '@date-io/moment';\r\nimport { IconButton, Typography } from '@material-ui/core/';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { PlayArrow, Search } from '@material-ui/icons/';\r\nimport {\r\n  KeyboardDatePicker,\r\n  MuiPickersUtilsProvider,\r\n} from '@material-ui/pickers';\r\nimport 'date-fns';\r\nimport moment from 'moment';\r\nimport 'moment/locale/pt-br';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { IDENTIFICACAO } from '../../../../components/constants';\r\nimport NucleoSelect from '../../../../components/NucleoSelect';\r\nimport api from '../../../../service/api';\r\nimport ExecutePlano from './executePlano';\r\n\r\nconst columns = [\r\n  { id: 'tema', label: 'Tema', maxWidth: 100, align: 'left' },\r\n  { id: 'divisa', label: 'Divisa', maxWidth: 100, align: 'center' },\r\n  { id: 'date', label: 'Data', maxWidth: 100, align: 'center' },\r\n  { id: 'action', label: '', maxWidth: 50, align: 'right' },\r\n];\r\n\r\nfunction createData(id, tema, divisa, date, identificador, action) {\r\n  return { id, tema, divisa, date, identificador, action };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: 10,\r\n  },\r\n  divSearch: {\r\n    width: '100%',\r\n    padding: 20,\r\n    textAlign: 'center',\r\n    display: 'inline-flex',\r\n    justifyContent: 'center',\r\n\r\n    [theme.breakpoints.down('sm')]: {\r\n      marginTop: 20,\r\n      display: 'block',\r\n    },\r\n  },\r\n\r\n  searchInline: {\r\n    width: '100%',\r\n    justifyContent: 'flex-start',\r\n    flexDirection: 'row',\r\n  },\r\n\r\n  container: {\r\n    maxHeight: '60vh',\r\n  },\r\n  date: {\r\n    marginTop: 5,\r\n    width: '20%',\r\n    [theme.breakpoints.down('sm')]: {\r\n      width: '95%',\r\n    },\r\n  },\r\n  divNucleo: {\r\n    width: '40%',\r\n    [theme.breakpoints.down('sm')]: {\r\n      width: '95%',\r\n    },\r\n  },\r\n  search: {\r\n    backgroundColor: 'white',\r\n    marginTop: 20,\r\n    padding: 20,\r\n    borderRadius: 10,\r\n  },\r\n  btnSearch: {\r\n    marginRight: 20,\r\n    width: '15%',\r\n    [theme.breakpoints.down('sm')]: {\r\n      width: '95%',\r\n    },\r\n  },\r\n  headerTableHide: {\r\n    [theme.breakpoints.down('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  small: {\r\n    width: theme.spacing(6),\r\n    height: theme.spacing(6),\r\n  },\r\n  divWhitesmoke: {\r\n    height: 60,\r\n    width: 2,\r\n    backgroundColor: 'whitesmoke',\r\n    marginRight: 20,\r\n    [theme.breakpoints.down('sm')]: {\r\n      height: 2,\r\n      width: '100%',\r\n      marginTop: 20,\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function StickyHeadTable({\r\n  callbackEdit,\r\n  callbackDelete,\r\n  carregar,\r\n  setCarregar,\r\n}) {\r\n  const classes = useStyles();\r\n  const [page, setPage] = useState(1);\r\n\r\n  const [dataList, setDataList] = useState([]);\r\n\r\n  const [total, setTotal] = useState(0);\r\n  const [nucleoid, setNucleoId] = useState(1);\r\n\r\n  const [selectedDate, setSelectedDate] = useState(moment());\r\n  const [selectedYear, setSelectedYear] = useState(moment());\r\n\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [itemSelecionado, setItemSelecionado] = useState('');\r\n\r\n  function callbackAddPlano(status) {\r\n    if (status === 'ok') {\r\n      setOpenModal(false);\r\n    }\r\n  }\r\n\r\n  async function handleOpenExecute(event, item) {\r\n    const { data } = await api.get(`/turma/${item.id}`);\r\n    let newItem = '';\r\n\r\n    if (!data.result) {\r\n      newItem = { ...item, ...data };\r\n    } else {\r\n      newItem = item;\r\n    }\r\n    setItemSelecionado(newItem);\r\n    setOpenModal(true);\r\n  }\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedYear(moment());\r\n    setSelectedDate(date._d);\r\n  };\r\n\r\n  async function handleYearChange(date) {\r\n    setSelectedYear(date);\r\n    const listFilter = await api.get('planoAula/year', {\r\n      params: {\r\n        date: moment(date).format('YYYY-MM-DD'),\r\n        nucleoid: nucleoid,\r\n      },\r\n    });\r\n\r\n    setTotal(listFilter.data.total);\r\n\r\n    if (listFilter.data.list.length > 0) {\r\n      const listFormat = listFilter.data.list.map((item) =>\r\n        createData(\r\n          item.id,\r\n          item.tema,\r\n          item.divisa,\r\n          moment(item.date).format('DD/MM/YYYY'),\r\n          item.identificador,\r\n          action(item)\r\n        )\r\n      );\r\n      setDataList(listFormat);\r\n    } else {\r\n      setDataList([]);\r\n    }\r\n  }\r\n\r\n  async function handleFilter() {\r\n    const listFilter = await api.get('planoAula/filter', {\r\n      params: {\r\n        date: moment(selectedDate).format('YYYY-MM-DD'),\r\n        nucleoid: nucleoid,\r\n      },\r\n    });\r\n\r\n    setTotal(listFilter.data.total);\r\n\r\n    if (listFilter.data.list.length > 0) {\r\n      const listFormat = listFilter.data.list.map((item) =>\r\n        createData(\r\n          item.id,\r\n          item.tema,\r\n          item.divisa,\r\n          moment(item.date).format('DD/MM/YYYY'),\r\n          item.identificador,\r\n          action(item)\r\n        )\r\n      );\r\n      setDataList(listFormat);\r\n    } else {\r\n      setDataList([]);\r\n    }\r\n  }\r\n  async function handleChangePage(event, newPage) {\r\n    setPage(Number(newPage + 1));\r\n    await getData(newPage + 1);\r\n  }\r\n\r\n  const action = (item) => (\r\n    <IconButton\r\n      color='primary'\r\n      aria-label='upload picture'\r\n      component='span'\r\n      style={{ color: 'white' }}\r\n      onClick={(e) => handleOpenExecute(e, item)}\r\n    >\r\n      <PlayArrow />\r\n    </IconButton>\r\n  );\r\n\r\n  async function getData(newPage) {\r\n    const listFilter = await api.get('planoAula/year', {\r\n      params: {\r\n        page: newPage,\r\n        date: moment(selectedYear).format('YYYY-MM-DD'),\r\n        nucleoid: nucleoid,\r\n      },\r\n    });\r\n\r\n    setTotal(listFilter.data.total);\r\n\r\n    if (listFilter.data.list.length > 0) {\r\n      const listFormat = listFilter.data.list.map((item) =>\r\n        createData(\r\n          item.id,\r\n          item.tema,\r\n          item.divisa,\r\n          moment(item.date).format('DD/MM/YYYY'),\r\n          item.identificador,\r\n          action(item)\r\n        )\r\n      );\r\n      setDataList(listFormat);\r\n    } else {\r\n      setDataList([]);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getData(1);\r\n    // setCarregar(false);\r\n  }, []);\r\n\r\n  function callbackNucleo(nucleo) {\r\n    setNucleoId(nucleo);\r\n  }\r\n  const dateInput = (\r\n    <MuiPickersUtilsProvider\r\n      libInstance={moment}\r\n      utils={MomentUtils}\r\n      locale='pt-br'\r\n    >\r\n      <KeyboardDatePicker\r\n        disableToolbar\r\n        autoOk\r\n        className={classes.date}\r\n        views={['year', 'month']}\r\n        variant='inline'\r\n        id='date-picker'\r\n        label='Data'\r\n        value={selectedDate}\r\n        invalidDateMessage='Data em formato inválido.'\r\n        onChange={handleDateChange}\r\n      />\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n  const yearInput = (\r\n    <MuiPickersUtilsProvider\r\n      libInstance={moment}\r\n      utils={MomentUtils}\r\n      locale='pt-br'\r\n    >\r\n      <KeyboardDatePicker\r\n        autoOk\r\n        disableToolbar\r\n        className={classes.date}\r\n        views={['year']}\r\n        variant='inline'\r\n        id='year-picker'\r\n        label='Ano'\r\n        value={selectedYear}\r\n        invalidDateMessage='Data em formato inválido.'\r\n        onChange={handleYearChange}\r\n      />\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n  const search = (\r\n    <div className={classes.divSearch}>\r\n      <div className={classes.btnSearch}>\r\n        <Fab color='primary' aria-label='add' onClick={handleFilter}>\r\n          <Search />\r\n        </Fab>\r\n      </div>\r\n      {dateInput}\r\n      <div className={classes.divNucleo}>\r\n        <NucleoSelect callbackNucleo={callbackNucleo} />\r\n      </div>\r\n\r\n      <div className={classes.divWhitesmoke} />\r\n      {yearInput}\r\n    </div>\r\n  );\r\n  const tableList = (\r\n    <TableContainer className={classes.container}>\r\n      <Table>\r\n        <TableHead style={{ backgroundColor: '#F3F0F0' }}>\r\n          <TableRow>\r\n            {columns.map((column, index) => (\r\n              <TableCell\r\n                key={column.id}\r\n                align={column.align}\r\n                className={\r\n                  index > 0 && index < 3 ? classes.headerTableHide : ''\r\n                }\r\n                style={{\r\n                  maxWidth: column.maxWidth,\r\n                }}\r\n              >\r\n                {column.label}\r\n              </TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {dataList.map((row, index) => (\r\n            <TableRow\r\n              key={index}\r\n              style={{\r\n                background: IDENTIFICACAO.find(\r\n                  (i) => i.id === row.identificador\r\n                ).color,\r\n              }}\r\n            >\r\n              {columns.map((column, i) => {\r\n                const value = row[column.id];\r\n                return (\r\n                  <TableCell\r\n                    className={i > 0 && i < 3 ? classes.headerTableHide : ''}\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{\r\n                      maxWidth: column.maxWidth,\r\n                    }}\r\n                  >\r\n                    <Typography variant='subtitle1' style={{ color: 'white' }}>\r\n                      {value}\r\n                    </Typography>\r\n                  </TableCell>\r\n                );\r\n              })}\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n  const section = (\r\n    <Paper className={classes.root}>\r\n      {search}\r\n      {/*loadingNucleos ? <LoadingPage /> : tableList*/}\r\n      {tableList}\r\n      <TablePagination\r\n        rowsPerPageOptions={[10]}\r\n        component='div'\r\n        count={total}\r\n        rowsPerPage={10}\r\n        page={page - 1}\r\n        onChangePage={handleChangePage}\r\n        labelDisplayedRows={({ from, to, count }) =>\r\n          `${from}-${to} de ${count}`\r\n        }\r\n      />\r\n      <ExecutePlano\r\n        openModal={openModal}\r\n        onClose={() => setOpenModal(false)}\r\n        itemSelecionado={itemSelecionado}\r\n        callback={callbackAddPlano}\r\n      />\r\n    </Paper>\r\n  );\r\n\r\n  return section;\r\n}\r\n","C:\\VsCode\\adad\\frontend\\src\\pages\\app\\pedagogia\\turmas\\index.js",["425","426","427"],"import { Container, makeStyles, Snackbar, Typography } from '@material-ui/core';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { ArrowForward } from '@material-ui/icons';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport React, { useState } from 'react';\r\nimport '../style.css';\r\nimport TablePlanos from './table';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    justifyContent: 'flex-start',\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n\r\n    [theme.breakpoints.down('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  fullSm: {\r\n    marginLeft: 10,\r\n    marginTop: 10,\r\n    width: '25%',\r\n    texrtAlign: 'start',\r\n    [theme.breakpoints.down('sm')]: {\r\n      width: '100%',\r\n    },\r\n  },\r\n  iconStyle: {\r\n    color: 'white',\r\n    height: '100%',\r\n  },\r\n  circleIcon: {\r\n    width: 60,\r\n    height: 60,\r\n    borderRadius: 60,\r\n    marginRight: 5,\r\n    textAlign: 'center',\r\n  },\r\n}));\r\n\r\nexport default function Turma({ setPageReturn }) {\r\n  const width = { tudo: 'xl', lateral: 'md', pequeno: 'sm' };\r\n  const vertical = 'bottom';\r\n  const horizontal = 'left';\r\n  const [message, setMessage] = useState('');\r\n  const [severity, setSeverity] = useState('success');\r\n\r\n  const [carregar, setCarregar] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant='filled' {...props} />;\r\n  }\r\n\r\n  return (\r\n    <Container\r\n      maxWidth={width.tudo}\r\n      style={{\r\n        minHeight: '80vh',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          display: 'inline-flex',\r\n          textAlign: 'start',\r\n          width: '100%',\r\n          justifyContent: 'space-between',\r\n        }}\r\n      >\r\n        <Typography variant='h6' style={{ color: '#5D6D7E' }}>\r\n          Turmas\r\n        </Typography>\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n            textAlign: 'start',\r\n            width: 130,\r\n            justifyContent: 'space-evenly',\r\n          }}\r\n        >\r\n          <Fab\r\n            color='primary'\r\n            aria-label='add'\r\n            style={{ marginTop: 15 }}\r\n            onClick={setPageReturn}\r\n          >\r\n            <ArrowForward />\r\n          </Fab>\r\n        </div>\r\n      </div>\r\n      <TablePlanos carregar={carregar} setCarregar={setCarregar} />\r\n\r\n      <Snackbar\r\n        open={open}\r\n        anchorOrigin={{ vertical, horizontal }}\r\n        autoHideDuration={5000}\r\n        onClose={() => setOpen(false)}\r\n      >\r\n        <Alert onClose={() => setOpen(false)} severity={severity}>\r\n          {message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Container>\r\n  );\r\n}\r\n",["428","429"],"C:\\VsCode\\adad\\frontend\\src\\pages\\app\\pedagogia\\turmas\\executePlano.js",["430"],"import {\r\n  AppBar,\r\n  Button,\r\n  Checkbox,\r\n  Container,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Divider,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemSecondaryAction,\r\n  ListItemText,\r\n  makeStyles,\r\n  TextField,\r\n  Toolbar,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport { AttachFile, Close, Language, Visibility } from '@material-ui/icons';\r\nimport 'date-fns';\r\nimport { Form, Formik } from 'formik';\r\nimport moment from 'moment';\r\nimport 'moment/locale/pt-br';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { IDENTIFICACAO } from '../../../../components/constants';\r\nimport api from '../../../../service/api';\r\nimport '../style.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    textAlign: 'left',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  fullXS64: {\r\n    width: '64%',\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: '96%',\r\n    },\r\n  },\r\n\r\n  fullXS47: {\r\n    width: '100%',\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: '96%',\r\n    },\r\n  },\r\n\r\n  fullXS20: {\r\n    width: '25%',\r\n    marginTop: 11,\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: '96%',\r\n    },\r\n  },\r\n  fullXS30: {\r\n    width: '30%',\r\n    marginTop: 10,\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: '92%',\r\n    },\r\n  },\r\n  date: {\r\n    marginTop: 8,\r\n    width: '50%',\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: '96%',\r\n    },\r\n  },\r\n  divContainer: {\r\n    display: 'inline-flex',\r\n    width: '100%',\r\n    [theme.breakpoints.down('md')]: {\r\n      display: 'block',\r\n      width: '100%',\r\n    },\r\n  },\r\n  divPrimeira: {\r\n    backgroundColor: 'whitesmoke',\r\n    flexDirection: 'row',\r\n    borderRadius: 10,\r\n    marginTop: 40,\r\n    padding: 5,\r\n    width: '60%',\r\n    [theme.breakpoints.down('md')]: {\r\n      width: '100%',\r\n    },\r\n  },\r\n  divInf: {\r\n    width: '100%',\r\n    display: 'inline-flex',\r\n    [theme.breakpoints.down('md')]: {\r\n      display: 'block',\r\n      width: '100%',\r\n    },\r\n  },\r\n\r\n  ladoAeB: {\r\n    width: '50%',\r\n    textAlign: 'start',\r\n    padding: 10,\r\n    [theme.breakpoints.down('md')]: {\r\n      width: '100%',\r\n    },\r\n  },\r\n  divSegunda: {\r\n    flexDirection: 'row',\r\n    marginTop: 10,\r\n    width: '40%',\r\n    [theme.breakpoints.down('md')]: {\r\n      width: '100%',\r\n    },\r\n  },\r\n  formControl: {\r\n    width: '46%',\r\n    marginTop: 4,\r\n  },\r\n}));\r\n\r\nexport default function ExecutePlano({\r\n  openModal,\r\n  onClose,\r\n  callback,\r\n  itemSelecionado,\r\n}) {\r\n  const classes = useStyles();\r\n  const width = { tudo: 'xl', lateral: 'md', pequeno: 'sm' };\r\n  const [erroSalve, setErroSalve] = useState('');\r\n  const [erroConcluir, setErroConcluir] = useState('');\r\n  const [avaliacao, setAvaliacao] = useState('');\r\n  const [concluir, setConcluir] = useState('');\r\n\r\n  // const { user } = useAuth();\r\n\r\n  const [checked, setChecked] = useState([1]);\r\n\r\n  function handleAvaliacao(value) {\r\n    setErroConcluir('');\r\n    setConcluir(false);\r\n    setAvaliacao(value);\r\n  }\r\n\r\n  const handleToggle = (value) => () => {\r\n    setErroSalve('');\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    setChecked(newChecked);\r\n  };\r\n\r\n  const edit = !!itemSelecionado.idTurma;\r\n\r\n  console.log('como vem o item ', itemSelecionado);\r\n\r\n  useEffect(() => {\r\n    setChecked([]);\r\n    if (itemSelecionado.alunosPresentes) {\r\n      setChecked(itemSelecionado.alunosPresentes.map((item) => item.id));\r\n    }\r\n    if (itemSelecionado.avaliacao) {\r\n      setAvaliacao(itemSelecionado.avaliacao);\r\n    }\r\n  }, [itemSelecionado]);\r\n\r\n  async function sendTurma(form) {\r\n    const alunosPresentes = checked;\r\n\r\n    if (alunosPresentes.length <= 0) {\r\n      setErroSalve('Ao menos um aluno deve ser selecionado');\r\n      return;\r\n    }\r\n\r\n    const alunosFaltantes = [];\r\n    itemSelecionado.adadsSelected.forEach((element) => {\r\n      if (alunosPresentes.indexOf(element.id) === -1)\r\n        alunosFaltantes.push(element.id);\r\n    });\r\n\r\n    const newForm = {\r\n      ...form,\r\n      alunosPresentes,\r\n      alunosFaltantes,\r\n      idPlanoAula: itemSelecionado.id,\r\n    };\r\n    let resp = '';\r\n    if (edit) {\r\n      resp = await api.put('/turma', {\r\n        ...newForm,\r\n        idTurma: itemSelecionado.idTurma,\r\n      });\r\n    } else {\r\n      resp = await api.post('/turma', newForm);\r\n    }\r\n\r\n    if (resp.data.error) {\r\n      callback('error', resp.data.error);\r\n    } else {\r\n      callback('ok');\r\n    }\r\n    setAvaliacao('');\r\n    setConcluir(false);\r\n  }\r\n\r\n  async function handleUpStatus() {\r\n    if (checked.length <= 0) {\r\n      setErroSalve('Ao menos um aluno deve ser selecionado');\r\n      setConcluir(true);\r\n      return;\r\n    }\r\n    if (avaliacao === '') {\r\n      setErroConcluir('Avaliação deve ser preenchida');\r\n      setConcluir(true);\r\n      return;\r\n    }\r\n\r\n    const resp = await api.post('/planoAula/upstatus', {\r\n      status: 2,\r\n      id: itemSelecionado.id,\r\n    });\r\n    console.log('veio o resp ', resp.data);\r\n\r\n    if (resp.data.error) {\r\n      console.log('deu ruim', resp.data);\r\n    } else {\r\n    }\r\n\r\n    callback('ok');\r\n  }\r\n\r\n  const handleClose = () => {\r\n    onClose();\r\n    setChecked([]);\r\n    setErroSalve('');\r\n    setConcluir(false);\r\n  };\r\n\r\n  function handleNavigateToLink(item) {\r\n    window.open(item.value);\r\n  }\r\n\r\n  function handleViewFile(item) {\r\n    if (item.id) {\r\n      return window.open(`${api.defaults.baseURL}/uploads/${item.value}`);\r\n    }\r\n    window.open(item.value);\r\n  }\r\n\r\n  const ladoAInfo = (\r\n    <div className={classes.ladoAeB}>\r\n      <div\r\n        style={{\r\n          alignItems: 'center',\r\n          display: 'inline-flex',\r\n        }}\r\n      >\r\n        <Typography variant='subtitle2' style={{ marginRight: 5 }}>\r\n          Divisa:\r\n        </Typography>\r\n        <Typography variant='body1'>{itemSelecionado.divisa}</Typography>\r\n      </div>\r\n      <div>\r\n        <div\r\n          style={{\r\n            alignItems: 'center',\r\n            display: 'inline-flex',\r\n          }}\r\n        >\r\n          <Typography variant='subtitle2' style={{ marginRight: 5 }}>\r\n            Data:\r\n          </Typography>\r\n          <Typography variant='body1'>\r\n            {moment(itemSelecionado.date).format('LL')}\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div\r\n          style={{\r\n            alignItems: 'center',\r\n            display: 'inline-flex',\r\n          }}\r\n        >\r\n          <Typography variant='subtitle2' style={{ marginRight: 5 }}>\r\n            Lideres:\r\n          </Typography>\r\n          <div>\r\n            {itemSelecionado.lideresSelected &&\r\n              itemSelecionado.lideresSelected.map((lider) => (\r\n                <div>{lider.fullName}</div>\r\n              ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const ladoBInfo = (\r\n    <div className={classes.ladoAeB}>\r\n      <div\r\n        style={{\r\n          alignItems: 'center',\r\n          display: 'inline-flex',\r\n        }}\r\n      >\r\n        <Typography variant='subtitle2' style={{ marginRight: 5 }}>\r\n          Objetivo:\r\n        </Typography>\r\n        <Typography variant='body1'>{itemSelecionado.objetivos}</Typography>\r\n      </div>\r\n      <div>\r\n        <div\r\n          style={{\r\n            alignItems: 'center',\r\n            display: 'inline-flex',\r\n          }}\r\n        >\r\n          <Typography variant='subtitle2' style={{ marginRight: 5 }}>\r\n            Recursos:\r\n          </Typography>\r\n          <Typography variant='body1'>{itemSelecionado.recursos}</Typography>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div\r\n          style={{\r\n            alignItems: 'center',\r\n            display: 'inline-flex',\r\n          }}\r\n        >\r\n          <Typography variant='subtitle2' style={{ marginRight: 5 }}>\r\n            Desenvolvimento:\r\n          </Typography>\r\n          <Typography variant='body1'>\r\n            {itemSelecionado.desenvolvimento}\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={openModal} fullScreen>\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              edge='start'\r\n              color='inherit'\r\n              onClick={handleClose}\r\n              aria-label='close'\r\n            >\r\n              <Close />\r\n            </IconButton>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <DialogContent>\r\n          <DialogTitle id='criaradad'>Plano de Aula</DialogTitle>\r\n          <Container\r\n            maxWidth={width.lateral}\r\n            style={{\r\n              minHeight: '80vh',\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <DialogContentText id='alert-dialog-description'>\r\n              <Formik\r\n                initialValues={{\r\n                  avaliacao: itemSelecionado.avaliacao\r\n                    ? itemSelecionado.avaliacao\r\n                    : '',\r\n                }}\r\n                onSubmit={sendTurma}\r\n              >\r\n                {({\r\n                  errors,\r\n                  touched,\r\n                  values,\r\n                  handleChange,\r\n                  handleBlur,\r\n                  handleSubmit,\r\n                  setFieldValue,\r\n                }) => {\r\n                  return (\r\n                    <Form>\r\n                      <div className='login-form'>\r\n                        <div\r\n                          style={{\r\n                            width: '100%',\r\n                            background: IDENTIFICACAO.find(\r\n                              (i) => i.id === itemSelecionado.identificador\r\n                            ).color,\r\n                            color: '#FAFAFA',\r\n                            borderRadius: 10,\r\n                          }}\r\n                        >\r\n                          <Typography variant='h4'>\r\n                            {itemSelecionado.tema}\r\n                          </Typography>\r\n                          <div className={classes.divInf}>\r\n                            {ladoAInfo}\r\n                            {ladoBInfo}\r\n                          </div>\r\n                        </div>\r\n                        <div style={{ width: '100%' }}>\r\n                          <Typography\r\n                            variant='subtitle1'\r\n                            style={{ marginTop: 15 }}\r\n                          >\r\n                            Turma\r\n                          </Typography>\r\n                          <Divider variant='middle' />\r\n                        </div>\r\n                        <div className={classes.divContainer}>\r\n                          <div className={classes.divPrimeira}>\r\n                            {itemSelecionado.adadsSelected.map((adad) => (\r\n                              <div>\r\n                                <div\r\n                                  style={{\r\n                                    width: '100%',\r\n                                    display: 'inline-flex',\r\n                                    alignItems: 'center',\r\n                                    justifyContent: 'space-between',\r\n                                    padding: 5,\r\n                                  }}\r\n                                >\r\n                                  <div>{adad.fullName}</div>\r\n\r\n                                  <Checkbox\r\n                                    size='small'\r\n                                    color='primary'\r\n                                    onChange={handleToggle(adad.id)}\r\n                                    checked={checked.indexOf(adad.id) !== -1}\r\n                                  />\r\n                                </div>\r\n                                <Divider variant='middle' />\r\n                              </div>\r\n                            ))}\r\n                            {erroSalve !== '' && (\r\n                              <div style={{ color: 'red' }}>{erroSalve}</div>\r\n                            )}\r\n                          </div>\r\n\r\n                          <div className={classes.divSegunda}>\r\n                            <div\r\n                              id='div_atachs'\r\n                              style={{\r\n                                marginTop: 10,\r\n                                marginLeft: 8,\r\n                                width: '96%',\r\n                                textAlign: 'start',\r\n                              }}\r\n                            >\r\n                              {itemSelecionado.inserteAnexos.length > 0 &&\r\n                                itemSelecionado.inserteAnexos.map(\r\n                                  (item, index) => (\r\n                                    <List component='nav'>\r\n                                      <ListItem key={index}>\r\n                                        <ListItemIcon>\r\n                                          {item.type === 'file' ? (\r\n                                            <AttachFile\r\n                                              style={{ color: 'red' }}\r\n                                            />\r\n                                          ) : (\r\n                                            <Language\r\n                                              style={{ color: 'blue' }}\r\n                                            />\r\n                                          )}\r\n                                        </ListItemIcon>\r\n                                        <ListItemText\r\n                                          primary={\r\n                                            <Typography variant='body2'>\r\n                                              {item.name.slice(0, 20)}...\r\n                                            </Typography>\r\n                                          }\r\n                                        />\r\n                                        <ListItemSecondaryAction>\r\n                                          <IconButton\r\n                                            onClick={() =>\r\n                                              item.type === 'file'\r\n                                                ? handleViewFile(item)\r\n                                                : handleNavigateToLink(item)\r\n                                            }\r\n                                          >\r\n                                            <Visibility />\r\n                                          </IconButton>\r\n                                        </ListItemSecondaryAction>\r\n                                      </ListItem>\r\n                                      <Divider />\r\n                                    </List>\r\n                                  )\r\n                                )}\r\n                              <TextField\r\n                                style={{ width: '100%', marginTop: 10 }}\r\n                                label='Avaliação'\r\n                                name='avaliacao'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                multiline\r\n                                rows={3}\r\n                                value={values.avaliacao}\r\n                                fullWidth\r\n                                onChange={(e) => (\r\n                                  setFieldValue('avaliacao', e.target.value),\r\n                                  handleAvaliacao(e.target.value)\r\n                                )}\r\n                                onBlur={handleBlur}\r\n                                error={concluir && !!erroConcluir}\r\n                                helperText={concluir && erroConcluir}\r\n                              />\r\n                              <TextField\r\n                                style={{ width: '100%', marginTop: 10 }}\r\n                                label='Feedback'\r\n                                name='feedback'\r\n                                size='small'\r\n                                variant='outlined'\r\n                                multiline\r\n                                rows={3}\r\n                                defaultValue={itemSelecionado.feedback}\r\n                                //  value={itemSelecionado.feedback}\r\n                                fullWidth\r\n                                disabled={true}\r\n                              />\r\n                            </div>\r\n\r\n                            <div\r\n                              style={{\r\n                                textAlign: 'end',\r\n                                width: '98%',\r\n                              }}\r\n                            >\r\n                              {edit && itemSelecionado.status < 2 && (\r\n                                <Button\r\n                                  color='primary'\r\n                                  aria-label='add'\r\n                                  variant='outlined'\r\n                                  style={{ marginTop: 15 }}\r\n                                  onClick={handleUpStatus}\r\n                                >\r\n                                  Concluir\r\n                                </Button>\r\n                              )}\r\n                              {itemSelecionado.status < 2 && (\r\n                                <Button\r\n                                  color='primary'\r\n                                  aria-label='add'\r\n                                  variant='outlined'\r\n                                  style={{ marginTop: 15, marginLeft: 10 }}\r\n                                  onClick={handleSubmit}\r\n                                >\r\n                                  Salvar\r\n                                </Button>\r\n                              )}\r\n\r\n                              <Button\r\n                                color='primary'\r\n                                aria-label='add'\r\n                                variant='outlined'\r\n                                style={{ marginTop: 15, marginLeft: 10 }}\r\n                                onClick={handleClose}\r\n                              >\r\n                                Retornar\r\n                              </Button>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Form>\r\n                  );\r\n                }}\r\n              </Formik>\r\n              {itemSelecionado.status >= 2 && (\r\n                <div style={{ color: '#E5CD34' }}>\r\n                  Plano de Aula já foi concluído\r\n                </div>\r\n              )}\r\n            </DialogContentText>\r\n          </Container>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n",["431","432"],"C:\\VsCode\\adad\\frontend\\src\\pages\\app\\pedagogia\\docs\\docauxiliar.js",["433","434","435","436","437","438"],"C:\\VsCode\\adad\\frontend\\src\\pages\\app\\secretaria\\addDoc.js",["439","440","441","442","443"],"import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Divider,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemSecondaryAction,\r\n  ListItemText,\r\n  makeStyles,\r\n  TextField,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport { AttachFile, Close, Language, Visibility } from '@material-ui/icons';\r\nimport React, { useState } from 'react';\r\nimport ButtonAnexo from '../../../components/ButtonAnexo';\r\nimport { useAuth } from '../../../context/auth';\r\nimport api from '../../../service/api';\r\nimport './style.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    textAlign: 'end',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  formControl: {\r\n    width: '46%',\r\n    marginTop: 4,\r\n  },\r\n}));\r\n\r\nexport default function Addpage({\r\n  openModal,\r\n  closeModal,\r\n  callback,\r\n  initialValues,\r\n}) {\r\n  const classes = useStyles();\r\n  const [errorFile, setErrorFile] = useState('');\r\n  const [fileSelect, setFileSelect] = useState('');\r\n  const [url, setUrl] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [inserteAnexos, setAnexos] = useState([]);\r\n  const { user } = useAuth();\r\n\r\n  function clean() {\r\n    setErrorFile('');\r\n    setFileSelect();\r\n    setUrl();\r\n    setName();\r\n  }\r\n  const handleClose = () => {\r\n    clean();\r\n    closeModal();\r\n    setAnexos([]);\r\n  };\r\n\r\n  async function sendDoc() {\r\n    const link = inserteAnexos.find((item) => item.type === 'link');\r\n    const form = {\r\n      name,\r\n      urldoc: await createDoc(),\r\n      link: link ? link.value : '',\r\n      nucleoid: user.nucleoid,\r\n      setor: 0,\r\n    };\r\n\r\n    console.log(form);\r\n    const { data } = await api.post('/doc/add', form);\r\n\r\n    clean();\r\n    callback('ok');\r\n  }\r\n\r\n  async function createDoc() {\r\n    const doc = inserteAnexos.find((item) => item.type === 'file');\r\n    console.log('file', doc);\r\n    if (doc) {\r\n      const fileData = new FormData();\r\n      fileData.append('file', doc.file);\r\n      const { data } = await api.post('/file/add', fileData, {\r\n        headers: {\r\n          'Content-type': 'multipart/form-data',\r\n        },\r\n      });\r\n      return data;\r\n    }\r\n    return '';\r\n  }\r\n\r\n  function handleViewFile(item) {\r\n    if (item.id) {\r\n      return window.open(`${api.defaults.baseURL}/uploads/${item.value}`);\r\n    }\r\n    window.open(item.value);\r\n  }\r\n\r\n  function handleNavigateToLink(item) {\r\n    window.open(item.value);\r\n  }\r\n\r\n  function handleDeletAnexos(item) {\r\n    setAnexos(inserteAnexos.filter((i) => i.value !== item.value));\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={openModal} fullWidth maxWidth='xs'>\r\n        <DialogTitle id='criaradad'>Documento</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id='alert-dialog-description'>\r\n            <div className='login-form'>\r\n              <div\r\n                style={{\r\n                  width: '50%',\r\n                  marginRight: 10,\r\n                }}\r\n              >\r\n                <TextField\r\n                  label='Nome'\r\n                  name='name'\r\n                  size='small'\r\n                  value={name}\r\n                  fullWidth\r\n                  onChange={(e) => setName(e.target.value)}\r\n\r\n                  //error={!!touched.name && !!errors.name}\r\n                  //helperText={touched.name && errors.name && errors.name}\r\n                />\r\n                <ButtonAnexo\r\n                  setAnexos={setAnexos}\r\n                  inserteAnexos={inserteAnexos}\r\n                />\r\n              </div>\r\n              <div\r\n                id='div_atachs'\r\n                style={{\r\n                  marginTop: 10,\r\n                  marginLeft: 20,\r\n                  width: '100%',\r\n                  textAlign: 'start',\r\n                }}\r\n              >\r\n                {inserteAnexos &&\r\n                  inserteAnexos.map((item, index) => (\r\n                    <List component='nav' aria-label='main mailbox folders'>\r\n                      <ListItem key={index}>\r\n                        <ListItemIcon>\r\n                          {item.type === 'file' ? (\r\n                            <AttachFile style={{ color: 'red' }} />\r\n                          ) : (\r\n                            <Language style={{ color: 'blue' }} />\r\n                          )}\r\n                        </ListItemIcon>\r\n                        <ListItemText\r\n                          primary={\r\n                            <Typography variant='body2'>\r\n                              {item.name.slice(0, 20)}...\r\n                            </Typography>\r\n                          }\r\n                        />\r\n                        <ListItemSecondaryAction>\r\n                          <IconButton\r\n                            onClick={() =>\r\n                              item.type === 'file'\r\n                                ? handleViewFile(item)\r\n                                : handleNavigateToLink(item)\r\n                            }\r\n                          >\r\n                            <Visibility />\r\n                          </IconButton>\r\n\r\n                          <IconButton onClick={() => handleDeletAnexos(item)}>\r\n                            <Close />\r\n                          </IconButton>\r\n                        </ListItemSecondaryAction>\r\n                      </ListItem>\r\n                      <Divider />\r\n                    </List>\r\n                  ))}\r\n              </div>\r\n            </div>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            color='primary'\r\n            aria-label='add'\r\n            size='small'\r\n            variant='outlined'\r\n            style={{ marginTop: 15 }}\r\n            onClick={sendDoc}\r\n          >\r\n            Confirmar\r\n          </Button>\r\n          <Button\r\n            color='primary'\r\n            aria-label='add'\r\n            size='small'\r\n            variant='outlined'\r\n            style={{ marginTop: 15 }}\r\n            onClick={handleClose}\r\n          >\r\n            Retornar\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","C:\\VsCode\\adad\\frontend\\src\\pages\\app\\secretaria\\index.js",["444","445","446","447","448","449"],"import { Container, makeStyles, Snackbar, Typography } from '@material-ui/core';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { Add, Description } from '@material-ui/icons';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport React, { useEffect, useState } from 'react';\r\nimport CardItem from '../../../components/CardItem';\r\nimport { useAuth } from '../../../context/auth';\r\nimport api from '../../../service/api';\r\nimport AddDoc from './addDoc';\r\nconst vertical = 'bottom';\r\nconst horizontal = 'left';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    justifyContent: 'flex-start',\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n\r\n    [theme.breakpoints.down('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  fullSm: {\r\n    marginLeft: 5,\r\n    marginTop: 5,\r\n    width: 350,\r\n    // texrtAlign: 'start',\r\n    [theme.breakpoints.down('sm')]: {\r\n      width: '100%',\r\n    },\r\n  },\r\n  iconStyle: {\r\n    color: 'white',\r\n    height: '100%',\r\n  },\r\n  cardaction: { marginBottom: 3, alignItems: 'center' },\r\n  circleIcon: {\r\n    width: 60,\r\n    height: 60,\r\n    borderRadius: 60,\r\n    marginRight: 5,\r\n    textAlign: 'center',\r\n  },\r\n}));\r\n\r\nexport default function DocAuxiliar({ setPageReturn }) {\r\n  const width = { tudo: 'xl', lateral: 'md', pequeno: 'sm' };\r\n\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [list, setList] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n  const [severity, setSeverity] = useState('success');\r\n  const [itemSelected, setItemSelected] = useState('');\r\n  const [openVisu, setopenVisu] = useState(false);\r\n  const [openSnack, setOpenSnack] = useState(false);\r\n  const [inserteAnexos, setAnexos] = useState();\r\n  const { user } = useAuth();\r\n\r\n  function handleVisualizar(item) {\r\n    window.open(`${api.defaults.baseURL}/uploads/${item.urldoc}`);\r\n    setItemSelected(item);\r\n    //setopenVisu(true);\r\n  }\r\n\r\n  async function getData() {\r\n    const response = await api.get('/doc/setor', {\r\n      headers: {\r\n        nucleoid: user.nucleoid,\r\n        setor: 0,\r\n      },\r\n    });\r\n    console.log('data como veio', response.data);\r\n    if (response.data) {\r\n      setList(response.data);\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  function callback(call) {\r\n    if (call === 'ok') {\r\n      setSeverity('success');\r\n      setMessage('Registro efetuado com sucesso');\r\n      setOpenSnack(true);\r\n      setOpen(false);\r\n      getData();\r\n    }\r\n  }\r\n\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant='filled' {...props} />;\r\n  }\r\n\r\n  return (\r\n    <Container\r\n      maxWidth={width.tudo}\r\n      style={{\r\n        minHeight: '80vh',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          display: 'inline-flex',\r\n          textAlign: 'start',\r\n          width: '100%',\r\n          justifyContent: 'space-between',\r\n        }}\r\n      >\r\n        <Typography variant='h6' style={{ color: '#5D6D7E' }}>\r\n          Documentos Auxiliares\r\n        </Typography>\r\n\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n            textAlign: 'start',\r\n            width: 130,\r\n            justifyContent: 'space-evenly',\r\n          }}\r\n        >\r\n          <Fab\r\n            color='primary'\r\n            aria-label='add'\r\n            style={{ marginTop: 15 }}\r\n            onClick={() => setOpen(true)}\r\n          >\r\n            <Add />\r\n          </Fab>\r\n        </div>\r\n      </div>\r\n\r\n      <div id='cardContainer' className={classes.root}>\r\n        {list.length > 0 &&\r\n          list.map((item, index) => (\r\n            <CardItem\r\n              key={index}\r\n              icon={<Description className={classes.iconStyle} />}\r\n              item={item}\r\n              callback={callback}\r\n              handleVisualizar={handleVisualizar}\r\n            />\r\n          ))}\r\n      </div>\r\n      <AddDoc\r\n        callback={callback}\r\n        openModal={open}\r\n        setOpenModal={setOpen}\r\n        closeModal={() => setOpen(false)}\r\n      />\r\n\r\n      <Snackbar\r\n        open={openSnack}\r\n        anchorOrigin={{ vertical, horizontal }}\r\n        autoHideDuration={5000}\r\n        onClose={() => setOpenSnack(false)}\r\n        onClick={() => setOpenSnack(false)}\r\n      >\r\n        <Alert onClose={() => setOpen(false)} severity={severity}>\r\n          {message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Container>\r\n  );\r\n}\r\n","C:\\VsCode\\adad\\frontend\\src\\pages\\app\\financeiro\\index.js",["450"],"import { Container, makeStyles, Snackbar } from '@material-ui/core';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { Add } from '@material-ui/icons';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport React, { useState } from 'react';\r\nimport api from '../../../service/api';\r\nimport AddFinanceiro from './addFinanceiro';\r\nimport TableFinanceiro from './table';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    // maxWidth: 360,\r\n    marginTop: 5,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  searchDiv: {\r\n    maxWidth: '100vh',\r\n    marginLeft: 10,\r\n    [theme.breakpoints.down('sm')]: {\r\n      marginTop: 20,\r\n    },\r\n  },\r\n  headerTable: {\r\n    flex: 1,\r\n    textAlign: 'start',\r\n    justifyItems: 'flex-start',\r\n    [theme.breakpoints.down('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  listItemTitle1: {\r\n    flex: 1,\r\n    maxWidth: '33%',\r\n    [theme.breakpoints.down('sm')]: {\r\n      justifyContent: 'center',\r\n      width: '100%',\r\n    },\r\n  },\r\n  small: {\r\n    width: theme.spacing(6),\r\n    height: theme.spacing(6),\r\n  },\r\n\r\n  rootHeader: {\r\n    width: '100%',\r\n    // maxWidth: 360,\r\n    marginTop: 10,\r\n    paddingLeft: 5,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function Nucleo() {\r\n  const width = { tudo: 'xl', lateral: 'md', pequeno: 'sm' };\r\n  const classes = useStyles();\r\n  const [openModal, setOpenModal] = useState(false);\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n  const [severity, setSeverity] = useState('success');\r\n  const [carregar, setCarregar] = useState(false);\r\n  const [initialValues, setInitialValues] = useState('');\r\n  const vertical = 'bottom';\r\n  const horizontal = 'left';\r\n\r\n  function callbackAdd(status, message) {\r\n    if (status === 'ok') {\r\n      setSeverity('success');\r\n      setMessage('Ação realizada com sucesso');\r\n      setOpen(true);\r\n    }\r\n    if (status === 'error') {\r\n      setSeverity('warning');\r\n      setMessage(message);\r\n      setOpen(true);\r\n    }\r\n\r\n    setInitialValues('');\r\n    setCarregar(true);\r\n  }\r\n\r\n  function callbackEdit(item) {\r\n    setInitialValues(item);\r\n    setOpenModal(true);\r\n  }\r\n\r\n  async function callbackDelete(item) {\r\n    const resp = await api.delete(`/financeiro/${item.id}`);\r\n    if (resp.data) {\r\n      setCarregar(true);\r\n    }\r\n  }\r\n\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant='filled' {...props} />;\r\n  }\r\n\r\n  const section = (\r\n    <Container\r\n      maxWidth={width.tudo}\r\n      style={{\r\n        minHeight: '80vh',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n      }}\r\n    >\r\n      <div style={{ textAlign: 'end' }}>\r\n        <Fab\r\n          color='primary'\r\n          aria-label='add'\r\n          onClick={() => setOpenModal(true)}\r\n        >\r\n          <Add />\r\n        </Fab>\r\n      </div>\r\n      <AddFinanceiro\r\n        openModal={openModal}\r\n        setOpenModal={setOpenModal}\r\n        callback={callbackAdd}\r\n        initialValues={initialValues}\r\n      />\r\n\r\n      <TableFinanceiro\r\n        carregar={carregar}\r\n        setCarregar={setCarregar}\r\n        callbackEdit={callbackEdit}\r\n        callbackDelete={callbackDelete}\r\n      />\r\n      <Snackbar\r\n        open={open}\r\n        anchorOrigin={{ vertical, horizontal }}\r\n        autoHideDuration={5000}\r\n        onClose={() => setOpen(false)}\r\n      >\r\n        <Alert onClose={() => setOpen(false)} severity={severity}>\r\n          {message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Container>\r\n  );\r\n  return section;\r\n}\r\n","C:\\VsCode\\adad\\frontend\\src\\pages\\app\\financeiro\\addFinanceiro.js",[],"C:\\VsCode\\adad\\frontend\\src\\pages\\app\\financeiro\\table.js",["451"],"import {\r\n  IconButton,\r\n  Menu,\r\n  MenuItem,\r\n  TextField,\r\n  Typography,\r\n} from '@material-ui/core/';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport {\r\n  AddCircleOutline,\r\n  DeleteOutlined,\r\n  EditOutlined,\r\n  RemoveCircleOutline,\r\n  Search,\r\n} from '@material-ui/icons/';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport React, { useEffect, useState } from 'react';\r\nimport DailogConfirmation from '../../../components/DailogConfirmation';\r\nimport LoadingPage from '../../../components/LoadingPage';\r\nimport { useAuth } from '../../../context/auth';\r\nimport api from '../../../service/api';\r\n\r\nconst columns = [\r\n  { id: 'descricao', label: 'Descricao', maxWidth: 100, align: 'center' },\r\n  { id: 'type', label: 'Tipo', maxWidth: 80, align: 'center' },\r\n  { id: 'valor', label: 'Valor', maxWidth: 80, align: 'center' },\r\n  { id: 'nucleo', label: 'Nucleo', maxWidth: 50, align: 'center' },\r\n  { id: 'action', label: '', maxWidth: 50, align: 'right' },\r\n];\r\n\r\nfunction createData(id, descricao, type, valor, nucleo, action) {\r\n  return { id, descricao, type, valor, nucleo, action };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  searchDiv: {\r\n    maxWidth: '100vh',\r\n    marginLeft: 10,\r\n    [theme.breakpoints.down('sm')]: {\r\n      marginTop: 20,\r\n    },\r\n  },\r\n  container: {\r\n    maxHeight: '60vh',\r\n  },\r\n  search: {\r\n    backgroundColor: 'white',\r\n    marginTop: 20,\r\n    padding: 20,\r\n    borderRadius: 10,\r\n  },\r\n  headerTableHide: {\r\n    [theme.breakpoints.down('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  small: {\r\n    width: theme.spacing(6),\r\n    height: theme.spacing(6),\r\n  },\r\n}));\r\n\r\nexport default function StickyHeadTable({\r\n  callbackEdit,\r\n  callbackDelete,\r\n  carregar,\r\n  setCarregar,\r\n}) {\r\n  const classes = useStyles();\r\n  const [page, setPage] = useState(1);\r\n  const [total, setTotal] = useState(0);\r\n  const [anchorEl, setAnchorEl] = useState(false);\r\n  const [dataList, setDataList] = useState([]);\r\n  const [itemSelected, setItemSelected] = useState(null);\r\n  const [openConfirmation, setOpenConfirmation] = useState(false);\r\n  const { user } = useAuth();\r\n  const [loading, setLoading] = useState(false);\r\n  const [filterValue, setFilterValue] = useState('');\r\n\r\n  const handleClick = (event, item) => {\r\n    setItemSelected(item);\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  async function callbackConfirm(status) {\r\n    if (status === 'ok') {\r\n      await callbackDelete(itemSelected);\r\n      handleClose();\r\n    }\r\n    if (status === 'cancel') {\r\n      handleClose();\r\n    }\r\n    getData(1);\r\n  }\r\n\r\n  function handleDelete() {\r\n    setOpenConfirmation(true);\r\n  }\r\n\r\n  function handleEdit() {\r\n    callbackEdit(itemSelected);\r\n    handleClose();\r\n  }\r\n\r\n  function handleFilter() {\r\n    /*\r\n    const list = nucleosList.filter((valor) =>\r\n      valor.name.includes(filterValue)\r\n    );\r\n    setDataList(list);\r\n    */\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  async function handleChangePage(event, newPage) {\r\n    setPage(Number(newPage + 1));\r\n    await getData(newPage + 1);\r\n  }\r\n\r\n  const action = (item) => (\r\n    <IconButton\r\n      color='primary'\r\n      aria-label='upload picture'\r\n      component='span'\r\n      onClick={(e) => handleClick(e, item)}\r\n    >\r\n      <MenuIcon />\r\n    </IconButton>\r\n  );\r\n\r\n  async function getData(newPage) {\r\n    let resp = [];\r\n    if (user.admin) {\r\n      resp = await api.get('/financeiro/all', {\r\n        headers: {\r\n          page: newPage,\r\n        },\r\n      });\r\n    } else {\r\n      resp = await api.get('/financeiro', {\r\n        headers: {\r\n          page: newPage,\r\n          nucleoid: user.nucleoid,\r\n        },\r\n      });\r\n    }\r\n\r\n    console.log('resp.data', resp.data);\r\n    if (resp.data) {\r\n      const listFormat = resp.data.list.map((item) =>\r\n        createData(\r\n          item.id,\r\n          <Typography\r\n            style={{ color: item.type === 'saida' ? 'red' : 'green' }}\r\n          >\r\n            {item.descricao}\r\n          </Typography>,\r\n\r\n          item.type === 'saida' ? (\r\n            <RemoveCircleOutline htmlColor='red' />\r\n          ) : (\r\n            <AddCircleOutline htmlColor='green' />\r\n          ),\r\n          item.type === 'saida' ? `-${item.valor}` : item.valor,\r\n          item.nucleo.name,\r\n          action(item)\r\n        )\r\n      );\r\n      await new Promise((resolve) => setTimeout(resolve, 1000));\r\n      setDataList(listFormat);\r\n      setTotal(resp.data.total);\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getData(1);\r\n    setCarregar(false);\r\n  }, [carregar]);\r\n\r\n  const menuButton = (\r\n    <Menu\r\n      id='menu-nucleo'\r\n      anchorEl={anchorEl}\r\n      keepMounted\r\n      open={Boolean(anchorEl)}\r\n      onClose={handleClose}\r\n    >\r\n      <MenuItem onClick={() => handleEdit()}>\r\n        <EditOutlined style={{ marginRight: 10 }} />\r\n        Editar\r\n      </MenuItem>\r\n      <MenuItem onClick={() => handleDelete()}>\r\n        <DeleteOutlined style={{ marginRight: 10 }} />\r\n        Excluir\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n  const search = (\r\n    <div className={classes.search}>\r\n      <Fab color='primary' aria-label='add' onClick={handleFilter}>\r\n        <Search />\r\n      </Fab>\r\n      <TextField\r\n        className={classes.searchDiv}\r\n        fullWidth\r\n        label='Pesquisar'\r\n        placeholder='Digite um nome para a pesquisa'\r\n        variant='outlined'\r\n        value={filterValue}\r\n        onChange={(e) => setFilterValue(e.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n  const tableList = (\r\n    <TableContainer className={classes.container}>\r\n      <Table>\r\n        <TableHead style={{ backgroundColor: '#F3F0F0' }}>\r\n          <TableRow>\r\n            {columns.map((column, index) => (\r\n              <TableCell\r\n                key={column.id}\r\n                align={column.align}\r\n                className={\r\n                  index > 0 && index < 2 ? classes.headerTableHide : ''\r\n                }\r\n                style={{\r\n                  maxWidth: column.maxWidth,\r\n                }}\r\n              >\r\n                {column.label}\r\n              </TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {dataList.map((row, index) => {\r\n            return (\r\n              <TableRow key={index}>\r\n                {columns.map((column, i) => {\r\n                  const value = row[column.id];\r\n                  return (\r\n                    <TableCell\r\n                      className={i > 0 && i < 2 ? classes.headerTableHide : ''}\r\n                      key={column.id}\r\n                      align={column.align}\r\n                      style={{\r\n                        maxWidth: column.maxWidth,\r\n                      }}\r\n                    >\r\n                      {value}\r\n                    </TableCell>\r\n                  );\r\n                })}\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n  const section = (\r\n    <Paper className={classes.root}>\r\n      {search}\r\n      {loading ? <LoadingPage /> : tableList}\r\n\r\n      <TablePagination\r\n        rowsPerPageOptions={[10]}\r\n        component='div'\r\n        count={total}\r\n        rowsPerPage={10}\r\n        page={page - 1}\r\n        onChangePage={handleChangePage}\r\n        labelDisplayedRows={({ from, to, count }) =>\r\n          `${from}-${to} de ${count}`\r\n        }\r\n      />\r\n\r\n      {menuButton}\r\n\r\n      <DailogConfirmation\r\n        callback={callbackConfirm}\r\n        open={openConfirmation}\r\n        setOpen={setOpenConfirmation}\r\n      />\r\n    </Paper>\r\n  );\r\n\r\n  return section;\r\n}\r\n","C:\\VsCode\\adad\\frontend\\src\\pages\\app\\profile\\index.js",["452"],"C:\\VsCode\\adad\\frontend\\src\\pages\\app\\profile\\email.js",[],"C:\\VsCode\\adad\\frontend\\src\\pages\\app\\profile\\senha.js",[],"C:\\VsCode\\adad\\frontend\\src\\pages\\app\\profile\\avatar.js",["453"],"import {\r\n  Avatar,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  makeStyles,\r\n  Snackbar,\r\n} from '@material-ui/core';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { CameraAlt, Computer } from '@material-ui/icons';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport React, { useState } from 'react';\r\nimport Webcam from '../../../components/Webcam';\r\nimport { useAuth } from '../../../context/auth';\r\nimport api from '../../../service/api';\r\nimport './style.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    textAlign: 'end',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  formControl: {\r\n    width: '46%',\r\n    marginTop: 4,\r\n  },\r\n}));\r\n\r\nexport default function Addpage({ open, close, callback }) {\r\n  const classes = useStyles();\r\n  const { profile, alterStorageAndUser } = useAuth();\r\n  const [openaAlert, setOpenAlert] = useState(false);\r\n  const [fileSelect, setFileSelect] = useState('');\r\n  const [errorFile, setErrorFile] = useState('');\r\n  const [openWeb, setOpenWeb] = useState(false);\r\n  const [urlPhoto, setUrlPhoto] = useState('');\r\n\r\n  const [message, setMessage] = useState('');\r\n  const [severity, setSeverity] = useState('success');\r\n  const vertical = 'bottom';\r\n  const horizontal = 'center';\r\n\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant='filled' {...props} />;\r\n  }\r\n\r\n  function handleClose() {\r\n    setUrlPhoto('');\r\n    setFileSelect('');\r\n    setErrorFile('');\r\n    close();\r\n  }\r\n\r\n  function callbackWeb(file) {\r\n    const url = URL.createObjectURL(file);\r\n    setUrlPhoto(url);\r\n    setFileSelect(file);\r\n    setErrorFile('');\r\n  }\r\n\r\n  const handleUploadFile = (e) => {\r\n    if (e.target.files[0]) {\r\n      const url = URL.createObjectURL(e.target.files[0]);\r\n      setFileSelect(e.target.files[0]);\r\n      setUrlPhoto(url);\r\n    }\r\n\r\n    setErrorFile('');\r\n  };\r\n\r\n  async function createAvatar() {\r\n    const fileData = new FormData();\r\n    fileData.append('file', fileSelect);\r\n\r\n    const { data } = await api.post('/file/add', fileData, {\r\n      headers: {\r\n        'Content-type': 'multipart/form-data',\r\n      },\r\n    });\r\n    return data;\r\n  }\r\n\r\n  async function sendAvatar() {\r\n    if (!fileSelect) {\r\n      setErrorFile('Escolha uma nova foto');\r\n      return;\r\n    }\r\n\r\n    await api.post('/file/delete', { file: profile.avatar });\r\n    const newAvatar = await createAvatar();\r\n\r\n    const newForm = { newAvatar, idPersonal: profile.id };\r\n    console.log(newForm);\r\n\r\n    const resp = await api.post('/changeAvatar', newForm);\r\n    console.log('passou', resp.data);\r\n\r\n    if (resp.data.error) {\r\n      setMessage(resp.data.error);\r\n      setSeverity('warning');\r\n      setOpenAlert(true);\r\n    } else {\r\n      setMessage(resp.data.ok);\r\n      setSeverity('success');\r\n      setOpenAlert(true);\r\n    }\r\n    await alterStorageAndUser(profile.id);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={open} fullWidth maxWidth={'xs'}>\r\n        <DialogTitle id='criaradad'>Alterar Avatar</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id='alert-dialog-description'>\r\n            <div\r\n              style={{\r\n                flexDirection: 'row',\r\n                textAlign: '-webkit-center',\r\n              }}\r\n            >\r\n              <Avatar\r\n                src={urlPhoto}\r\n                alt='request'\r\n                style={{\r\n                  width: 100,\r\n                  height: 100,\r\n                }}\r\n              />\r\n              <label htmlFor='upload-photo'>\r\n                <input\r\n                  style={{ display: 'none' }}\r\n                  id='upload-photo'\r\n                  name='upload-photo'\r\n                  type='file'\r\n                  onChange={(e) => handleUploadFile(e)}\r\n                />\r\n                {errorFile && (\r\n                  <div style={{ color: 'red', marginTop: 10 }}>{errorFile}</div>\r\n                )}\r\n                <Fab component='span' size='small'>\r\n                  <Computer />\r\n                </Fab>\r\n              </label>\r\n              <Fab\r\n                component='span'\r\n                size='small'\r\n                onClick={() => setOpenWeb(true)}\r\n              >\r\n                <CameraAlt />\r\n              </Fab>\r\n            </div>\r\n\r\n            <Webcam\r\n              open={openWeb}\r\n              setOpen={setOpenWeb}\r\n              callbackWeb={callbackWeb}\r\n            />\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            variant='outlined'\r\n            color='primary'\r\n            size='small'\r\n            onClick={sendAvatar}\r\n          >\r\n            Confirmar\r\n          </Button>\r\n          <Button\r\n            variant='outlined'\r\n            color='primary'\r\n            size='small'\r\n            onClick={handleClose}\r\n          >\r\n            Retornar\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Snackbar\r\n        open={openaAlert}\r\n        anchorOrigin={{ vertical, horizontal }}\r\n        autoHideDuration={5000}\r\n        onClose={() => setOpenAlert(false)}\r\n      >\r\n        <Alert onClose={() => setOpenAlert(false)} severity={severity}>\r\n          {message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}\r\n","C:\\VsCode\\adad\\frontend\\src\\pages\\app\\usuarios\\addPeople.js",["454"],"import {\r\n  Avatar,\r\n  Button,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormLabel,\r\n  InputLabel,\r\n  makeStyles,\r\n  MenuItem,\r\n  Radio,\r\n  RadioGroup,\r\n  Select,\r\n  Snackbar,\r\n  TextField,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { CameraAlt, Computer, Search } from '@material-ui/icons';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { Form, Formik } from 'formik';\r\nimport MuiPhoneNumber from 'material-ui-phone-number';\r\nimport React, { useEffect, useState } from 'react';\r\nimport * as yup from 'yup';\r\nimport { PERFIL_LIST } from '../../../components/constants';\r\nimport NucleoSelect from '../../../components/NucleoSelect';\r\nimport Webcam from '../../../components/Webcam';\r\nimport { usePeople } from '../../../context/app/people';\r\nimport { useAuth } from '../../../context/auth';\r\nimport api from '../../../service/api';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    textAlign: 'end',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  fullSm47: {\r\n    width: '47%',\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: '96%',\r\n    },\r\n  },\r\n  fullSm46: {\r\n    width: '46%',\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: '96%',\r\n    },\r\n  },\r\n  fullSm37: {\r\n    width: '37%',\r\n    marginTop: 12,\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: '96%',\r\n    },\r\n  },\r\n  fullSm55: {\r\n    width: '55%',\r\n    marginTop: 12,\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: '96%',\r\n    },\r\n  },\r\n\r\n  fullSm: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: '96%',\r\n    },\r\n  },\r\n\r\n  formControl: {\r\n    width: '46%',\r\n    marginTop: 4,\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: '96%',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function AddPeople({\r\n  openModal,\r\n  handleClose,\r\n  callbackPersonal,\r\n  initialValues,\r\n  edition,\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  const [urlPhoto, setUrlPhoto] = useState('');\r\n  const { setLoadingData, setCarregar } = usePeople();\r\n  const [openWeb, setOpenWeb] = useState(false);\r\n  const [fileSelect, setFileSelect] = useState('');\r\n  const [nucleoid, setNucleoid] = useState(0);\r\n  const [perfilid, setPerfilid] = useState(7);\r\n  const [errorFile, setErrorFile] = useState('');\r\n  const { user } = useAuth();\r\n  const [message, setMessage] = useState('');\r\n  const [severity, setSeverity] = useState('success');\r\n  const horizontal = 'center';\r\n  const vertical = 'top';\r\n  const [openaAlert, setOpenAlert] = useState(false);\r\n\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant='filled' {...props} />;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (edition) {\r\n      setUrlPhoto(`${api.defaults.baseURL}/uploads/${initialValues.avatar}`);\r\n      setFileSelect('avatar');\r\n      setPerfilid(initialValues.perfilid);\r\n      setNucleoid(initialValues.nucleoid);\r\n    } else {\r\n      setUrlPhoto('');\r\n    }\r\n  }, [edition]);\r\n\r\n  function validandoCPF(cpf) {\r\n    // Elimina CPFs invalidos conhecidos\r\n    if (\r\n      cpf === '00000000000' ||\r\n      cpf === '11111111111' ||\r\n      cpf === '22222222222' ||\r\n      cpf === '33333333333' ||\r\n      cpf === '44444444444' ||\r\n      cpf === '55555555555' ||\r\n      cpf === '66666666666' ||\r\n      cpf === '77777777777' ||\r\n      cpf === '88888888888' ||\r\n      cpf === '99999999999'\r\n    )\r\n      return false;\r\n    // Valida 1o digito\r\n    let add = 0;\r\n    for (let i = 0; i < 9; i++) add += parseInt(cpf.charAt(i)) * (10 - i);\r\n    let rev = 11 - (add % 11);\r\n    if (rev === 10 || rev === 11) rev = 0;\r\n    if (rev !== parseInt(cpf.charAt(9))) return false;\r\n    // Valida 2o digito\r\n    add = 0;\r\n    for (let i = 0; i < 10; i++) add += parseInt(cpf.charAt(i)) * (11 - i);\r\n    rev = 11 - (add % 11);\r\n    if (rev === 10 || rev === 11) rev = 0;\r\n    if (rev !== parseInt(cpf.charAt(10))) return false;\r\n    return true;\r\n  }\r\n\r\n  function closeModal() {\r\n    setFileSelect('');\r\n    setUrlPhoto('');\r\n    handleClose();\r\n  }\r\n  function callbackWeb(file) {\r\n    const url = URL.createObjectURL(file);\r\n    setUrlPhoto(url);\r\n    setFileSelect(file);\r\n    setErrorFile('');\r\n  }\r\n\r\n  const handleUploadFile = (e) => {\r\n    if (e.target.files[0]) {\r\n      const url = URL.createObjectURL(e.target.files[0]);\r\n      setFileSelect(e.target.files[0]);\r\n      setUrlPhoto(url);\r\n    }\r\n\r\n    setErrorFile('');\r\n  };\r\n\r\n  function callbackNucleo(id) {\r\n    setNucleoid(id);\r\n  }\r\n  const handlePerfil = (event) => {\r\n    setPerfilid(event.target.value);\r\n  };\r\n\r\n  async function createAvatar() {\r\n    const fileData = new FormData();\r\n    fileData.append('file', fileSelect);\r\n\r\n    const { data } = await api.post('/file/add', fileData, {\r\n      headers: {\r\n        'Content-type': 'multipart/form-data',\r\n      },\r\n    });\r\n    return data;\r\n  }\r\n\r\n  async function sendMatricula(form) {\r\n    if (!validandoCPF(form.cpf)) {\r\n      setMessage('O cpf esta inválido');\r\n      setSeverity('warning');\r\n      setOpenAlert(true);\r\n\r\n      return;\r\n    }\r\n    let avatar = '';\r\n\r\n    if (!fileSelect) {\r\n      setErrorFile('Escolha uma foto');\r\n      return;\r\n    }\r\n\r\n    if (edition) {\r\n      if (fileSelect !== 'avatar') {\r\n        await api.post('/file/delete', { file: initialValues.avatar });\r\n        avatar = await createAvatar();\r\n      } else {\r\n        avatar = initialValues.avatar;\r\n      }\r\n    } else {\r\n      avatar = await createAvatar();\r\n    }\r\n\r\n    let data = [];\r\n    const formEnv = {\r\n      ...form,\r\n      cep: Number(form.cep),\r\n      nucleoid,\r\n      perfilid,\r\n      avatar,\r\n    };\r\n\r\n    if (edition) {\r\n      const resp = await api.put('/personaldata/update', formEnv);\r\n      data = resp.data;\r\n    }\r\n\r\n    if (!edition) {\r\n      const resp = await api.post('/personaldata/add', formEnv);\r\n      data = resp.data;\r\n    }\r\n\r\n    if (data.error) {\r\n      callbackPersonal(false, data.error);\r\n    } else {\r\n      callbackPersonal(true);\r\n      setLoadingData(true);\r\n      setCarregar(true);\r\n      closeModal();\r\n    }\r\n  }\r\n\r\n  const validation = yup.object().shape({\r\n    fullName: yup.string().required('Campo obrigatório'),\r\n    cpf: yup.string().min(11, 'Número inválido').required('Campo obrigatório'),\r\n    email: yup.string().email('E-mail inválido').required('Campo obrigatório'),\r\n    phone: yup\r\n      .string()\r\n      .min(18, 'Número inválido')\r\n      .required('Campo obrigatório'),\r\n    street: yup.string().required('Campo obrigatório'),\r\n    number: yup.string().required('Campo obrigatório'),\r\n    city: yup.string().required('Campo obrigatório'),\r\n    state: yup.string().required('Campo obrigatório'),\r\n    personalDocument: yup.string().required('Campo obrigatório'),\r\n    neighborhood: yup.string().required('Campo obrigatório'),\r\n  });\r\n\r\n  async function buscarCep(cep) {\r\n    const response = await fetch(\r\n      'https://viacep.com.br/ws/' + cep + '/json/?callback'\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        return data;\r\n      });\r\n    return response;\r\n  }\r\n\r\n  const formikForm = (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      enableReinitialize\r\n      onSubmit={sendMatricula}\r\n      validationSchema={validation}\r\n    >\r\n      {({\r\n        errors,\r\n        touched,\r\n        values,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        setFieldValue,\r\n        setValues,\r\n        setFieldError,\r\n        setFieldTouched,\r\n      }) => {\r\n        return (\r\n          <Form onChange={() => console.log(values)}>\r\n            <div>\r\n              <Typography variant='subtitle1'>Dados Pessoais</Typography>\r\n              <div\r\n                style={{\r\n                  flexDirection: 'row',\r\n                  textAlign: '-webkit-center',\r\n                }}\r\n              >\r\n                <Avatar\r\n                  src={urlPhoto}\r\n                  alt='request'\r\n                  style={{\r\n                    width: 100,\r\n                    height: 100,\r\n                  }}\r\n                />\r\n                <label htmlFor='upload-photo'>\r\n                  <input\r\n                    style={{ display: 'none' }}\r\n                    id='upload-photo'\r\n                    name='upload-photo'\r\n                    type='file'\r\n                    onChange={(e) => handleUploadFile(e)}\r\n                  />\r\n                  {errorFile && (\r\n                    <div style={{ color: 'red', marginTop: 10 }}>\r\n                      {errorFile}\r\n                    </div>\r\n                  )}\r\n                  <Fab component='span' size='small'>\r\n                    <Computer />\r\n                  </Fab>\r\n                </label>\r\n                <Fab\r\n                  component='span'\r\n                  size='small'\r\n                  onClick={() => setOpenWeb(true)}\r\n                >\r\n                  <CameraAlt />\r\n                </Fab>\r\n              </div>\r\n\r\n              <Webcam\r\n                open={openWeb}\r\n                setOpen={setOpenWeb}\r\n                callbackWeb={callbackWeb}\r\n              />\r\n\r\n              <div\r\n                id='dadosPessoais'\r\n                className={classes.root}\r\n                style={{\r\n                  flexDirection: 'row',\r\n                  marginTop: 30,\r\n                  textAlign: 'left',\r\n                  width: '100%',\r\n                }}\r\n              >\r\n                <TextField\r\n                  style={{ width: '96%' }}\r\n                  label='Nome completo'\r\n                  name='fullName'\r\n                  size='small'\r\n                  value={values.fullName}\r\n                  fullWidth\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  error={!!touched.fullName && !!errors.fullName}\r\n                  helperText={\r\n                    touched.fullName && errors.fullName && errors.fullName\r\n                  }\r\n                />\r\n\r\n                <TextField\r\n                  style={{ width: '96%' }}\r\n                  label='E-mail'\r\n                  name='email'\r\n                  size='small'\r\n                  value={values.email}\r\n                  fullWidth\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  error={!!touched.email && !!errors.email}\r\n                  helperText={touched.email && errors.email && errors.email}\r\n                />\r\n\r\n                <MuiPhoneNumber\r\n                  style={{ width: '96%', marginTop: 30 }}\r\n                  defaultCountry={'br'}\r\n                  onlyCountries={['br', 'es', 'ar']}\r\n                  label='Telefone'\r\n                  name='phone'\r\n                  size='small'\r\n                  value={values.phone}\r\n                  fullWidth\r\n                  onChange={(resp) => {\r\n                    setFieldValue('phone', resp);\r\n                  }}\r\n                  onBlur={handleBlur}\r\n                  error={!!touched.phone && !!errors.phone}\r\n                  helperText={touched.phone && errors.phone && errors.phone}\r\n                />\r\n              </div>\r\n              <div\r\n                className={classes.root}\r\n                style={{\r\n                  flexDirection: 'row',\r\n                  marginTop: 30,\r\n                  textAlign: 'left',\r\n                  width: '100%',\r\n                }}\r\n              >\r\n                <FormControl className={classes.formControl}>\r\n                  <FormLabel component='legend'>Sexo</FormLabel>\r\n                  <RadioGroup\r\n                    row\r\n                    value={values.sexo}\r\n                    onChange={(e) => {\r\n                      setFieldValue('sexo', e.target.value);\r\n                    }}\r\n                    onBlur={handleBlur}\r\n                  >\r\n                    <FormControlLabel value='m' control={<Radio />} label='M' />\r\n                    <FormControlLabel value='f' control={<Radio />} label='F' />\r\n                  </RadioGroup>\r\n                </FormControl>\r\n\r\n                <FormControl className={classes.formControl}>\r\n                  <FormLabel component='legend'>Estado civil</FormLabel>\r\n                  <RadioGroup\r\n                    row\r\n                    value={values.maritalStatus}\r\n                    onChange={(e) => {\r\n                      setFieldValue('maritalStatus', e.target.value);\r\n                    }}\r\n                  >\r\n                    <FormControlLabel\r\n                      value='casado'\r\n                      control={<Radio />}\r\n                      label='Casado'\r\n                    />\r\n                    <FormControlLabel\r\n                      value='solteiro'\r\n                      control={<Radio />}\r\n                      label='Solteiro'\r\n                    />\r\n                    <FormControlLabel\r\n                      value='outros'\r\n                      control={<Radio />}\r\n                      label='Outros'\r\n                    />\r\n                  </RadioGroup>\r\n                </FormControl>\r\n              </div>\r\n              <div\r\n                className={classes.root}\r\n                style={{\r\n                  flexDirection: 'row',\r\n                  marginTop: 10,\r\n                  textAlign: 'left',\r\n                  width: '100%',\r\n                }}\r\n              >\r\n                <TextField\r\n                  className={classes.fullSm47}\r\n                  label='Nascimento'\r\n                  name='birthDate'\r\n                  size='small'\r\n                  type='date'\r\n                  defaultValue={initialValues.birthDate}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  value={values.birthDate}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  error={!!touched.birthDate && !!errors.birthDate}\r\n                />\r\n\r\n                <FormControl className={classes.formControl}>\r\n                  <InputLabel id='select-perfil-label-input'>Perfil</InputLabel>\r\n                  <Select\r\n                    labelId='select-perfil-label-id'\r\n                    id='select-perfil-id'\r\n                    value={perfilid}\r\n                    onChange={handlePerfil}\r\n                    disabled={!user.admin}\r\n                  >\r\n                    {PERFIL_LIST.map((item) => (\r\n                      <MenuItem key={item.id} value={item.id}>\r\n                        {item.name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </div>\r\n\r\n              <div\r\n                className={classes.root}\r\n                style={{\r\n                  flexDirection: 'row',\r\n                  marginTop: 10,\r\n                  textAlign: 'left',\r\n                  width: '100%',\r\n                }}\r\n              >\r\n                <TextField\r\n                  className={classes.fullSm47}\r\n                  label='Rg ou Certidão'\r\n                  name='personalDocument'\r\n                  size='small'\r\n                  type='number'\r\n                  value={values.personalDocument}\r\n                  onChange={(event) => {\r\n                    setFieldValue('personalDocument', event.target.value);\r\n                  }}\r\n                  onBlur={handleBlur}\r\n                  error={!!touched.personalDocument && errors.personalDocument}\r\n                  helperText={\r\n                    touched.personalDocument &&\r\n                    errors.personalDocument &&\r\n                    errors.personalDocument\r\n                  }\r\n                />\r\n\r\n                <TextField\r\n                  className={classes.fullSm46}\r\n                  label='CPF'\r\n                  name='cpf'\r\n                  size='small'\r\n                  type='number'\r\n                  value={values.cpf}\r\n                  onChange={(event) => {\r\n                    setFieldValue('cpf', event.target.value);\r\n                  }}\r\n                  onBlur={handleBlur}\r\n                  error={!!touched.cpf && !!errors.cpf}\r\n                  helperText={touched.cpf && errors.cpf && errors.cpf}\r\n                />\r\n              </div>\r\n\r\n              {perfilid === 7 && (\r\n                <TextField\r\n                  style={{ width: '96%', marginTop: 10 }}\r\n                  label='Nome do pai'\r\n                  name='fathersName'\r\n                  size='small'\r\n                  value={values.fathersName}\r\n                  fullWidth\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  error={!!touched.fathersName && !!errors.fathersName}\r\n                  helperText={\r\n                    touched.fathersName &&\r\n                    errors.fathersName &&\r\n                    errors.fathersName\r\n                  }\r\n                />\r\n              )}\r\n              {perfilid === 7 && (\r\n                <TextField\r\n                  style={{ width: '96%', marginTop: 20 }}\r\n                  label='Nome da mãe'\r\n                  name='mothersName'\r\n                  size='small'\r\n                  value={values.mothersName}\r\n                  fullWidth\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  error={!!touched.mothersName && !!errors.mothersName}\r\n                  helperText={\r\n                    touched.mothersName &&\r\n                    errors.mothersName &&\r\n                    errors.mothersName\r\n                  }\r\n                />\r\n              )}\r\n\r\n              <Typography variant='subtitle1' style={{ marginTop: 20 }}>\r\n                Endereço\r\n              </Typography>\r\n              <div\r\n                className={classes.root}\r\n                style={{\r\n                  flexDirection: 'row',\r\n                  marginTop: 10,\r\n                  textAlign: 'left',\r\n                  width: '100%',\r\n                }}\r\n              >\r\n                <TextField\r\n                  style={{ marginTop: 12, width: '55%' }}\r\n                  label='CEP'\r\n                  name='cep'\r\n                  size='small'\r\n                  value={values.cep}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  error={!!touched.cep && !!errors.cep}\r\n                  helperText={touched.cep && errors.cep && errors.cep}\r\n                />\r\n\r\n                <Fab\r\n                  color='primary'\r\n                  aria-label='add'\r\n                  size='small'\r\n                  onClick={async () => {\r\n                    const {\r\n                      bairro,\r\n                      localidade,\r\n                      logradouro,\r\n                      uf,\r\n                    } = await buscarCep(values.cep);\r\n\r\n                    if (logradouro === '' || logradouro === undefined) {\r\n                      setFieldTouched('cep', true);\r\n                      setFieldError('cep', 'Localização não encontrada');\r\n                    } else {\r\n                      setValues({\r\n                        ...values,\r\n                        neighborhood: bairro,\r\n                        street: logradouro,\r\n                        city: localidade,\r\n                        state: uf,\r\n                      });\r\n                    }\r\n                  }}\r\n                >\r\n                  <Search />\r\n                </Fab>\r\n              </div>\r\n              <div\r\n                className={classes.root}\r\n                style={{\r\n                  flexDirection: 'row',\r\n                  marginTop: 10,\r\n                  textAlign: 'left',\r\n                  width: '100%',\r\n                }}\r\n              >\r\n                <TextField\r\n                  className={classes.fullSm55}\r\n                  label='Rua'\r\n                  name='street'\r\n                  size='small'\r\n                  value={values.street}\r\n                  fullWidth\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  error={!!touched.street && !!errors.street}\r\n                  helperText={touched.street && errors.street && errors.street}\r\n                />\r\n                <TextField\r\n                  className={classes.fullSm37}\r\n                  label='Número'\r\n                  name='number'\r\n                  size='small'\r\n                  value={values.number}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  error={!!touched.number && !!errors.number}\r\n                  helperText={touched.number && errors.number && errors.number}\r\n                />\r\n              </div>\r\n              <div\r\n                className={classes.root}\r\n                style={{\r\n                  flexDirection: 'row',\r\n                  marginTop: 10,\r\n                  textAlign: 'left',\r\n                  width: '100%',\r\n                }}\r\n              >\r\n                <TextField\r\n                  className={classes.fullSm55}\r\n                  label='Cidade'\r\n                  name='city'\r\n                  size='small'\r\n                  value={values.city}\r\n                  fullWidth\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  error={!!touched.city && !!errors.city}\r\n                  helperText={touched.city && errors.city && errors.city}\r\n                />\r\n                <TextField\r\n                  className={classes.fullSm37}\r\n                  label='Estado'\r\n                  name='state'\r\n                  size='small'\r\n                  value={values.state}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  error={!!touched.state && !!errors.state}\r\n                  helperText={touched.state && errors.state && errors.state}\r\n                />\r\n              </div>\r\n\r\n              <div\r\n                className={classes.root}\r\n                style={{\r\n                  flexDirection: 'row',\r\n                  marginTop: 10,\r\n                  textAlign: 'left',\r\n                  width: '100%',\r\n                }}\r\n              >\r\n                <TextField\r\n                  className={classes.fullSm55}\r\n                  label='Bairro'\r\n                  name='neighborhood'\r\n                  size='small'\r\n                  value={values.neighborhood}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  error={!!touched.neighborhood && !!errors.neighborhood}\r\n                  helperText={\r\n                    touched.neighborhood &&\r\n                    errors.neighborhood &&\r\n                    errors.neighborhood\r\n                  }\r\n                />\r\n                <TextField\r\n                  className={classes.fullSm37}\r\n                  label='Complemento'\r\n                  name='complement'\r\n                  size='small'\r\n                  value={values.complement}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                />\r\n              </div>\r\n              <Typography variant='subtitle1' style={{ marginTop: 20 }}>\r\n                Igreja\r\n              </Typography>\r\n              <div\r\n                className={classes.root}\r\n                style={{\r\n                  flexDirection: 'row',\r\n                  marginTop: 10,\r\n                  textAlign: 'left',\r\n                  width: '100%',\r\n                }}\r\n              >\r\n                <TextField\r\n                  className={classes.fullSm46}\r\n                  label='Denominação'\r\n                  name='denomination'\r\n                  size='small'\r\n                  value={values.denomination}\r\n                  fullWidth\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  error={!!touched.denomination && !!errors.denomination}\r\n                  helperText={\r\n                    touched.denomination &&\r\n                    errors.denomination &&\r\n                    errors.denomination\r\n                  }\r\n                />\r\n\r\n                <FormControl\r\n                  className={classes.fullSm37}\r\n                  component='fieldset'\r\n                  style={{ marginLeft: 20 }}\r\n                >\r\n                  <FormLabel component='legend'>Batizado em aguas?</FormLabel>\r\n                  <RadioGroup\r\n                    name='batizadoemaguas'\r\n                    row\r\n                    value={values.batizadoemaguas}\r\n                    onChange={(event) => {\r\n                      setFieldValue('batizadoemaguas', event.target.value);\r\n                    }}\r\n                  >\r\n                    <FormControlLabel value='s' control={<Radio />} label='S' />\r\n                    <FormControlLabel value='n' control={<Radio />} label='N' />\r\n                  </RadioGroup>\r\n                </FormControl>\r\n              </div>\r\n              <div\r\n                className={classes.root}\r\n                style={{\r\n                  flexDirection: 'row',\r\n                  marginTop: 10,\r\n                  textAlign: 'left',\r\n                  width: '100%',\r\n                }}\r\n              >\r\n                <TextField\r\n                  className={classes.fullSm46}\r\n                  label='Atividade na igreja?'\r\n                  name='atividadenaigreja'\r\n                  size='small'\r\n                  value={values.atividadenaigreja}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                />\r\n                <NucleoSelect\r\n                  callbackNucleo={callbackNucleo}\r\n                  initialValues={initialValues}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className={classes.root}>\r\n              <Button\r\n                color='primary'\r\n                aria-label='add'\r\n                variant='outlined'\r\n                style={{ marginTop: 15 }}\r\n                onClick={handleSubmit}\r\n              >\r\n                Confirmar\r\n              </Button>\r\n\r\n              <Button\r\n                color='primary'\r\n                aria-label='add'\r\n                variant='outlined'\r\n                style={{ marginTop: 15 }}\r\n                onClick={closeModal}\r\n              >\r\n                Retornar\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n  return (\r\n    <div>\r\n      <Dialog open={openModal}>\r\n        <DialogTitle id='criaradad'>Nova Matrícula</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id='alert-dialog-description'>\r\n            {formikForm}\r\n            <Snackbar\r\n              open={openaAlert}\r\n              anchorOrigin={{ vertical, horizontal }}\r\n              autoHideDuration={5000}\r\n              onClose={() => setOpenAlert(false)}\r\n            >\r\n              <Alert onClose={() => setOpenAlert(false)} severity={severity}>\r\n                {message}\r\n              </Alert>\r\n            </Snackbar>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","C:\\VsCode\\adad\\frontend\\src\\pages\\app\\usuarios\\table.js",["455","456","457"],"import {\r\n  IconButton,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Menu,\r\n  MenuItem,\r\n  Table,\r\n  TextField,\r\n} from '@material-ui/core/';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { Search } from '@material-ui/icons';\r\nimport { DeleteOutlined, EditOutlined } from '@material-ui/icons/';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport React, { useEffect, useState } from 'react';\r\nimport DailogConfirmation from '../../../components/DailogConfirmation';\r\nimport LoadingPage from '../../../components/LoadingPage';\r\nimport { usePeople } from '../../../context/app/people';\r\nimport api from '../../../service/api';\r\nimport BigPhoto from './bigPhoto';\r\n\r\nconst columns = [\r\n  { id: 'avatar', label: 'Nome', maxWidth: 100, align: 'center' },\r\n  { id: 'phone', label: 'Telefone', maxWidth: 80, align: 'center' },\r\n  { id: 'nucleo', label: 'Núcleo', maxWidth: 100, align: 'center' },\r\n  { id: 'action', label: '', maxWidth: 50, align: 'right' },\r\n];\r\n\r\nfunction createData(id, avatar, phone, nucleo, action) {\r\n  return { id, avatar, phone, nucleo, action };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    maxHeight: '60vh',\r\n  },\r\n  search: {\r\n    backgroundColor: 'white',\r\n    marginTop: 20,\r\n    padding: 20,\r\n    borderRadius: 10,\r\n  },\r\n\r\n  searchDiv: {\r\n    maxWidth: '100vh',\r\n    marginLeft: 10,\r\n    [theme.breakpoints.down('sm')]: {\r\n      marginTop: 20,\r\n    },\r\n  },\r\n  headerTableHide: {\r\n    [theme.breakpoints.down('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function StickyHeadTable({ callbackEdit, callbackDelete }) {\r\n  const classes = useStyles();\r\n  const [page, setPage] = useState(1);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [dataList, setDataList] = useState([]);\r\n  const [openBig, setOpenBig] = useState(false);\r\n  const [urlBig, setUrlBig] = useState('');\r\n  const [itemSelected, setItemSelected] = useState(null);\r\n  const [openConfirmation, setOpenConfirmation] = useState(false);\r\n  const [filterValue, setFilterValue] = useState('');\r\n\r\n  const {\r\n    totalUser,\r\n    getDataUser,\r\n    setLoadingData,\r\n    loadingData,\r\n    getUserFilter,\r\n    carregar,\r\n  } = usePeople();\r\n\r\n  function handleUrlBig(url) {\r\n    setUrlBig(url);\r\n    setOpenBig(true);\r\n  }\r\n\r\n  async function getData(newPage) {\r\n    const list = await getDataUser(newPage);\r\n\r\n    if (list) {\r\n      const listFormat = list.map((item) =>\r\n        createData(\r\n          item.personal.id,\r\n          <ListItem\r\n            button\r\n            alignItems='flex-start'\r\n            onClick={() =>\r\n              handleUrlBig(\r\n                `${api.defaults.baseURL}/uploads/${item.personal.avatar}`\r\n              )\r\n            }\r\n          >\r\n            <ListItemAvatar>\r\n              <Avatar\r\n                src={`${api.defaults.baseURL}/uploads/${item.personal.avatar}`}\r\n                alt='request'\r\n              />\r\n            </ListItemAvatar>\r\n            <ListItemText\r\n              primary={item.personal.fullName}\r\n              secondary={dateFormat(item.personal.birthDate)}\r\n            />\r\n          </ListItem>,\r\n          item.personal.phone,\r\n          item.nucleo.name,\r\n          action(item)\r\n        )\r\n      );\r\n      setDataList(listFormat);\r\n    }\r\n  }\r\n\r\n  async function handleFilter() {\r\n    if (filterValue === '') return;\r\n    setLoadingData(true);\r\n    const list = await getUserFilter(filterValue);\r\n\r\n    if (list) {\r\n      const listFormat = list.map((item) =>\r\n        createData(\r\n          item.personal.id,\r\n          <ListItem alignItems='flex-start'>\r\n            <ListItemAvatar>\r\n              <Avatar\r\n                src={`${api.defaults.baseURL}/uploads/${item.personal.avatar}`}\r\n                alt='request'\r\n              />\r\n            </ListItemAvatar>\r\n            <ListItemText\r\n              primary={item.personal.fullName}\r\n              secondary={dateFormat(item.personal.birthDate)}\r\n            />\r\n          </ListItem>,\r\n          item.personal.phone,\r\n          item.nucleo.name,\r\n          action(item)\r\n        )\r\n      );\r\n      setDataList(listFormat);\r\n    }\r\n  }\r\n\r\n  const handleClick = (event, item) => {\r\n    setItemSelected(item);\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  async function callbackConfirm(status) {\r\n    if (status === 'ok') {\r\n      await callbackDelete(itemSelected);\r\n      handleClose();\r\n    }\r\n    if (status === 'cancel') {\r\n      callbackDelete();\r\n      handleClose();\r\n    }\r\n    getData();\r\n  }\r\n\r\n  function handleDelete() {\r\n    setOpenConfirmation(true);\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  async function handleChangePage(event, newPage) {\r\n    setLoadingData(true);\r\n    setPage(Number(newPage + 1));\r\n    await getData(newPage + 1);\r\n  }\r\n\r\n  function handleEdit() {\r\n    callbackEdit(itemSelected);\r\n    handleClose();\r\n  }\r\n\r\n  function dateFormat(date) {\r\n    const year = date.split('-')[0];\r\n    const month = date.split('-')[1];\r\n    const day = date.split('-')[2];\r\n    return `${day}/${month}/${year}`;\r\n  }\r\n\r\n  const action = (item) => (\r\n    <IconButton\r\n      color='primary'\r\n      aria-label='upload picture'\r\n      component='span'\r\n      onClick={(e) => handleClick(e, item)}\r\n    >\r\n      <MenuIcon />\r\n    </IconButton>\r\n  );\r\n\r\n  const search = (\r\n    <div className={classes.search}>\r\n      <Fab color='primary' aria-label='add' onClick={handleFilter}>\r\n        <Search />\r\n      </Fab>\r\n      <TextField\r\n        className={classes.searchDiv}\r\n        fullWidth\r\n        label='Pesquisar'\r\n        placeholder='Digite um nome para a pesquisa'\r\n        variant='outlined'\r\n        value={filterValue}\r\n        onChange={(e) => setFilterValue(e.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (filterValue === '') {\r\n      setLoadingData(true);\r\n      getData(1);\r\n    }\r\n  }, [filterValue]);\r\n\r\n  useEffect(() => {\r\n    getData(1);\r\n  }, [carregar]);\r\n\r\n  const menuButton = (\r\n    <Menu\r\n      id='menu-nucleo'\r\n      anchorEl={anchorEl}\r\n      keepMounted\r\n      open={Boolean(anchorEl)}\r\n      onClose={handleClose}\r\n    >\r\n      <MenuItem onClick={() => handleEdit()}>\r\n        <EditOutlined style={{ marginRight: 10 }} />\r\n        Editar\r\n      </MenuItem>\r\n      <MenuItem onClick={() => handleDelete()}>\r\n        <DeleteOutlined style={{ marginRight: 10 }} />\r\n        Excluir\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const tableList = (\r\n    <TableContainer className={classes.container}>\r\n      <Table>\r\n        <TableHead style={{ backgroundColor: '#F3F0F0' }}>\r\n          <TableRow>\r\n            {columns.map((column, index) => (\r\n              <TableCell\r\n                key={column.id}\r\n                align={column.align}\r\n                variant='head'\r\n                className={\r\n                  index > 1 && index < 3 ? classes.headerTableHide : ''\r\n                }\r\n                style={{\r\n                  maxWidth: column.maxWidth,\r\n                }}\r\n              >\r\n                {column.label}\r\n              </TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {dataList.map((row, index) => {\r\n            return (\r\n              <TableRow key={index}>\r\n                {columns.map((column, i) => {\r\n                  const value = row[column.id];\r\n                  return (\r\n                    <TableCell\r\n                      className={i > 1 && i < 3 ? classes.headerTableHide : ''}\r\n                      key={column.id}\r\n                      align={column.align}\r\n                      style={{\r\n                        maxWidth: column.maxWidth,\r\n                      }}\r\n                    >\r\n                      {value}\r\n                    </TableCell>\r\n                  );\r\n                })}\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n  const section = (\r\n    <Paper className={classes.root}>\r\n      {search}\r\n      {loadingData ? <LoadingPage /> : tableList}\r\n      <TablePagination\r\n        rowsPerPageOptions={[10]}\r\n        component='div'\r\n        count={totalUser}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page - 1}\r\n        onChangePage={handleChangePage}\r\n        labelDisplayedRows={({ from, to, count }) =>\r\n          `${from}-${to} de ${count}`\r\n        }\r\n      />\r\n      {menuButton}\r\n      <DailogConfirmation\r\n        callback={callbackConfirm}\r\n        open={openConfirmation}\r\n        setOpen={setOpenConfirmation}\r\n      />\r\n      <BigPhoto open={openBig} setOpen={setOpenBig} url={urlBig} />\r\n    </Paper>\r\n  );\r\n  return section;\r\n}\r\n","C:\\VsCode\\adad\\frontend\\src\\pages\\app\\usuarios\\index.js",["458"],"import { Container, makeStyles, Snackbar } from '@material-ui/core';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { Add } from '@material-ui/icons';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport React, { useState } from 'react';\r\nimport { PeopleProvider } from '../../../context/app/people';\r\nimport api from '../../../service/api';\r\nimport AddPepople from './addPeople';\r\nimport TablePeople from './table';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    // maxWidth: 360,\r\n    marginTop: 5,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  searchDiv: {\r\n    maxWidth: '100vh',\r\n    marginLeft: 10,\r\n    [theme.breakpoints.down('sm')]: {\r\n      marginTop: 20,\r\n    },\r\n  },\r\n  nameAvatar: {\r\n    maxWidth: '27%',\r\n    [theme.breakpoints.down('sm')]: {\r\n      width: '90%',\r\n    },\r\n  },\r\n  avatarData: {\r\n    flex: 1,\r\n    [theme.breakpoints.down('sm')]: {\r\n      justifyContent: 'space-between',\r\n    },\r\n  },\r\n\r\n  headerTable: {\r\n    flex: 1,\r\n    textAlign: 'start',\r\n    justifyItems: 'flex-start',\r\n    [theme.breakpoints.down('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n\r\n  small: {\r\n    width: theme.spacing(6),\r\n    height: theme.spacing(6),\r\n  },\r\n\r\n  rootHeader: {\r\n    width: '100%',\r\n    // maxWidth: 360,\r\n    marginTop: 10,\r\n    paddingLeft: 5,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\nconst now = new Date();\r\nconst nowFormat = `${now.getFullYear() - 6}-${\r\n  now.getMonth() < 10 ? '' + now.getMonth() + 1 : now.getMonth() + 1\r\n}-${now.getDate() < 10 ? '0' + now.getDate() : now.getDate()}`;\r\n\r\nconst init = {\r\n  fullName: '',\r\n  cpf: '',\r\n  maritalStatus: 'solteiro',\r\n  personalDocument: '',\r\n  sexo: 'f',\r\n  phone: '',\r\n  street: '',\r\n  email: '',\r\n  number: '',\r\n  city: '',\r\n  state: '',\r\n  neighborhood: '',\r\n  complement: '',\r\n  denomination: '',\r\n  mothersName: '',\r\n  fathersName: '',\r\n  atividadenaigreja: '',\r\n  birthDate: nowFormat,\r\n  cep: '',\r\n  batizadoemaguas: 'n',\r\n};\r\n\r\nexport default function Nucleo() {\r\n  const width = { tudo: 'xl', lateral: 'md', pequeno: 'sm' };\r\n  const classes = useStyles();\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n  const [edition, setEdition] = useState(false);\r\n\r\n  const [initialValues, setInitialValues] = useState(init);\r\n\r\n  const [message, setMessage] = useState('');\r\n  const [severity, setSeverity] = useState('success');\r\n\r\n  const vertical = 'bottom';\r\n  const horizontal = 'left';\r\n\r\n  function handleClose() {\r\n    setOpenModal(false);\r\n    setInitialValues(init);\r\n    setEdition(false);\r\n  }\r\n\r\n  function callbackEdit(item) {\r\n    const { denomination, batizadoemaguas, atividadenaigreja } = item.church;\r\n    const {\r\n      street,\r\n      number,\r\n      cep,\r\n      city,\r\n      state,\r\n      complement,\r\n      neighborhood,\r\n    } = item.address;\r\n\r\n    const personal = item.personal;\r\n\r\n    setInitialValues({\r\n      ...personal,\r\n      street,\r\n      number,\r\n      cep,\r\n      city,\r\n      state,\r\n      complement,\r\n      neighborhood,\r\n      denomination,\r\n      batizadoemaguas,\r\n      atividadenaigreja,\r\n    });\r\n    setEdition(true);\r\n    setOpenModal(true);\r\n  }\r\n\r\n  function callbackPersonal(status, message) {\r\n    if (!status) {\r\n      setSeverity('warning');\r\n      setMessage(message);\r\n    } else {\r\n      setSeverity('success');\r\n      setMessage('Ação realizada com sucesso');\r\n    }\r\n    setOpen(true);\r\n  }\r\n\r\n  async function callbackDelete(item) {\r\n    if (item) {\r\n      const response = await api.put(\r\n        `/personaldata/deactivate/${item.personal.id}`\r\n      );\r\n\r\n      if (response.error) {\r\n        setSeverity('warning');\r\n        setMessage(response.error);\r\n      } else {\r\n        setSeverity('success');\r\n        setMessage('Ação realizada com sucesso');\r\n      }\r\n      setOpen(true);\r\n    }\r\n  }\r\n\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant='filled' {...props} />;\r\n  }\r\n\r\n  const section = (\r\n    <PeopleProvider>\r\n      <Container\r\n        maxWidth={width.tudo}\r\n        style={{\r\n          minHeight: '80vh',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n        }}\r\n      >\r\n        <div style={{ textAlign: 'end' }}>\r\n          <Fab\r\n            color='primary'\r\n            aria-label='add'\r\n            onClick={() => setOpenModal(true)}\r\n          >\r\n            <Add />\r\n          </Fab>\r\n        </div>\r\n\r\n        <TablePeople\r\n          callbackEdit={callbackEdit}\r\n          callbackDelete={callbackDelete}\r\n        />\r\n        <AddPepople\r\n          openModal={openModal}\r\n          handleClose={handleClose}\r\n          callbackPersonal={callbackPersonal}\r\n          initialValues={initialValues}\r\n          edition={edition}\r\n        />\r\n\r\n        <Snackbar\r\n          open={open}\r\n          anchorOrigin={{ vertical, horizontal }}\r\n          autoHideDuration={5000}\r\n          onClose={() => setOpen(false)}\r\n        >\r\n          <Alert onClose={() => setOpen(false)} severity={severity}>\r\n            {message}\r\n          </Alert>\r\n        </Snackbar>\r\n      </Container>\r\n    </PeopleProvider>\r\n  );\r\n\r\n  return section;\r\n}\r\n","C:\\VsCode\\adad\\frontend\\src\\pages\\app\\usuarios\\bigPhoto.js",[],"C:\\VsCode\\adad\\frontend\\src\\pages\\app\\pedidos\\viewPedido.js",["459"],"C:\\VsCode\\adad\\frontend\\src\\pages\\app\\pedidos\\tableItensPedidosStatico.js",[],{"ruleId":"460","replacedBy":"461"},{"ruleId":"462","replacedBy":"463"},{"ruleId":"460","replacedBy":"464"},{"ruleId":"462","replacedBy":"465"},{"ruleId":"460","replacedBy":"466"},{"ruleId":"462","replacedBy":"467"},{"ruleId":"460","replacedBy":"468"},{"ruleId":"462","replacedBy":"469"},{"ruleId":"460","replacedBy":"470"},{"ruleId":"462","replacedBy":"471"},{"ruleId":"460","replacedBy":"472"},{"ruleId":"462","replacedBy":"473"},{"ruleId":"474","severity":1,"message":"475","line":57,"column":9,"nodeType":"476","messageId":"477","endLine":57,"endColumn":16},{"ruleId":"474","severity":1,"message":"475","line":92,"column":9,"nodeType":"476","messageId":"477","endLine":92,"endColumn":16},{"ruleId":"474","severity":1,"message":"478","line":73,"column":23,"nodeType":"476","messageId":"477","endLine":73,"endColumn":37},{"ruleId":"479","severity":1,"message":"480","line":239,"column":6,"nodeType":"481","endLine":239,"endColumn":19,"suggestions":"482"},{"ruleId":"479","severity":1,"message":"483","line":244,"column":6,"nodeType":"481","endLine":244,"endColumn":16,"suggestions":"484"},{"ruleId":"460","replacedBy":"485"},{"ruleId":"462","replacedBy":"486"},{"ruleId":"479","severity":1,"message":"487","line":155,"column":6,"nodeType":"481","endLine":155,"endColumn":19,"suggestions":"488"},{"ruleId":"479","severity":1,"message":"489","line":159,"column":6,"nodeType":"481","endLine":159,"endColumn":22,"suggestions":"490"},{"ruleId":"460","replacedBy":"491"},{"ruleId":"462","replacedBy":"492"},{"ruleId":"479","severity":1,"message":"493","line":113,"column":6,"nodeType":"481","endLine":113,"endColumn":15,"suggestions":"494"},{"ruleId":"460","replacedBy":"495"},{"ruleId":"462","replacedBy":"496"},{"ruleId":"474","severity":1,"message":"497","line":22,"column":11,"nodeType":"476","messageId":"477","endLine":22,"endColumn":15},{"ruleId":"460","replacedBy":"498"},{"ruleId":"462","replacedBy":"499"},{"ruleId":"500","severity":1,"message":"501","line":16,"column":3,"nodeType":"502","messageId":"503","endLine":16,"endColumn":14},{"ruleId":"474","severity":1,"message":"504","line":29,"column":10,"nodeType":"476","messageId":"477","endLine":29,"endColumn":22},{"ruleId":"479","severity":1,"message":"505","line":40,"column":6,"nodeType":"481","endLine":40,"endColumn":8,"suggestions":"506"},{"ruleId":"460","replacedBy":"507"},{"ruleId":"462","replacedBy":"508"},{"ruleId":"479","severity":1,"message":"483","line":51,"column":6,"nodeType":"481","endLine":51,"endColumn":8,"suggestions":"509"},{"ruleId":"510","severity":1,"message":"511","line":63,"column":15,"nodeType":"512","endLine":63,"endColumn":76},{"ruleId":"500","severity":1,"message":"513","line":63,"column":57,"nodeType":"502","messageId":"503","endLine":63,"endColumn":65},{"ruleId":"460","replacedBy":"514"},{"ruleId":"462","replacedBy":"515"},{"ruleId":"479","severity":1,"message":"483","line":171,"column":6,"nodeType":"481","endLine":171,"endColumn":8,"suggestions":"516"},{"ruleId":"479","severity":1,"message":"483","line":175,"column":6,"nodeType":"481","endLine":175,"endColumn":16,"suggestions":"517"},{"ruleId":"460","replacedBy":"518"},{"ruleId":"462","replacedBy":"519"},{"ruleId":"479","severity":1,"message":"520","line":161,"column":6,"nodeType":"481","endLine":161,"endColumn":22,"suggestions":"521"},{"ruleId":"474","severity":1,"message":"497","line":29,"column":11,"nodeType":"476","messageId":"477","endLine":29,"endColumn":15},{"ruleId":"479","severity":1,"message":"483","line":46,"column":6,"nodeType":"481","endLine":46,"endColumn":8,"suggestions":"522"},{"ruleId":"479","severity":1,"message":"523","line":68,"column":6,"nodeType":"481","endLine":68,"endColumn":16,"suggestions":"524"},{"ruleId":"479","severity":1,"message":"525","line":78,"column":6,"nodeType":"481","endLine":78,"endColumn":12,"suggestions":"526"},{"ruleId":"479","severity":1,"message":"527","line":34,"column":6,"nodeType":"481","endLine":34,"endColumn":16,"suggestions":"528"},{"ruleId":"479","severity":1,"message":"520","line":87,"column":6,"nodeType":"481","endLine":87,"endColumn":17,"suggestions":"529"},{"ruleId":"460","replacedBy":"530"},{"ruleId":"462","replacedBy":"531"},{"ruleId":"479","severity":1,"message":"532","line":56,"column":6,"nodeType":"481","endLine":56,"endColumn":8,"suggestions":"533"},{"ruleId":"479","severity":1,"message":"534","line":198,"column":6,"nodeType":"481","endLine":198,"endColumn":8,"suggestions":"535"},{"ruleId":"460","replacedBy":"536"},{"ruleId":"462","replacedBy":"537"},{"ruleId":"474","severity":1,"message":"538","line":11,"column":10,"nodeType":"476","messageId":"477","endLine":11,"endColumn":24},{"ruleId":"474","severity":1,"message":"539","line":24,"column":7,"nodeType":"476","messageId":"477","endLine":24,"endColumn":16},{"ruleId":"474","severity":1,"message":"540","line":67,"column":10,"nodeType":"476","messageId":"477","endLine":67,"endColumn":18},{"ruleId":"474","severity":1,"message":"541","line":67,"column":20,"nodeType":"476","messageId":"477","endLine":67,"endColumn":31},{"ruleId":"479","severity":1,"message":"542","line":271,"column":6,"nodeType":"481","endLine":271,"endColumn":12,"suggestions":"543"},{"ruleId":"479","severity":1,"message":"483","line":84,"column":6,"nodeType":"481","endLine":84,"endColumn":8,"suggestions":"544"},{"ruleId":"479","severity":1,"message":"545","line":295,"column":6,"nodeType":"481","endLine":295,"endColumn":16,"suggestions":"546"},{"ruleId":"479","severity":1,"message":"505","line":41,"column":6,"nodeType":"481","endLine":41,"endColumn":15,"suggestions":"547"},{"ruleId":"474","severity":1,"message":"548","line":22,"column":10,"nodeType":"476","messageId":"477","endLine":22,"endColumn":17},{"ruleId":"474","severity":1,"message":"549","line":22,"column":19,"nodeType":"476","messageId":"477","endLine":22,"endColumn":29},{"ruleId":"474","severity":1,"message":"550","line":23,"column":10,"nodeType":"476","messageId":"477","endLine":23,"endColumn":18},{"ruleId":"474","severity":1,"message":"551","line":23,"column":20,"nodeType":"476","messageId":"477","endLine":23,"endColumn":31},{"ruleId":"474","severity":1,"message":"552","line":27,"column":10,"nodeType":"476","messageId":"477","endLine":27,"endColumn":15},{"ruleId":"474","severity":1,"message":"553","line":27,"column":17,"nodeType":"476","messageId":"477","endLine":27,"endColumn":25},{"ruleId":"474","severity":1,"message":"475","line":45,"column":9,"nodeType":"476","messageId":"477","endLine":45,"endColumn":16},{"ruleId":"474","severity":1,"message":"554","line":46,"column":10,"nodeType":"476","messageId":"477","endLine":46,"endColumn":19},{"ruleId":"474","severity":1,"message":"555","line":47,"column":10,"nodeType":"476","messageId":"477","endLine":47,"endColumn":20},{"ruleId":"474","severity":1,"message":"556","line":48,"column":10,"nodeType":"476","messageId":"477","endLine":48,"endColumn":13},{"ruleId":"474","severity":1,"message":"557","line":76,"column":13,"nodeType":"476","messageId":"477","endLine":76,"endColumn":17},{"ruleId":"460","replacedBy":"558"},{"ruleId":"462","replacedBy":"559"},{"ruleId":"479","severity":1,"message":"483","line":259,"column":6,"nodeType":"481","endLine":259,"endColumn":8,"suggestions":"560"},{"ruleId":"474","severity":1,"message":"539","line":9,"column":7,"nodeType":"476","messageId":"477","endLine":9,"endColumn":16},{"ruleId":"474","severity":1,"message":"561","line":46,"column":19,"nodeType":"476","messageId":"477","endLine":46,"endColumn":29},{"ruleId":"474","severity":1,"message":"562","line":47,"column":20,"nodeType":"476","messageId":"477","endLine":47,"endColumn":31},{"ruleId":"460","replacedBy":"563"},{"ruleId":"462","replacedBy":"564"},{"ruleId":"565","severity":1,"message":"566","line":514,"column":77,"nodeType":"567","messageId":"568","endLine":514,"endColumn":78},{"ruleId":"460","replacedBy":"569"},{"ruleId":"462","replacedBy":"570"},{"ruleId":"474","severity":1,"message":"571","line":56,"column":10,"nodeType":"476","messageId":"477","endLine":56,"endColumn":22},{"ruleId":"474","severity":1,"message":"540","line":57,"column":10,"nodeType":"476","messageId":"477","endLine":57,"endColumn":18},{"ruleId":"474","severity":1,"message":"572","line":57,"column":20,"nodeType":"476","messageId":"477","endLine":57,"endColumn":31},{"ruleId":"474","severity":1,"message":"573","line":59,"column":10,"nodeType":"476","messageId":"477","endLine":59,"endColumn":23},{"ruleId":"474","severity":1,"message":"574","line":59,"column":25,"nodeType":"476","messageId":"477","endLine":59,"endColumn":34},{"ruleId":"479","severity":1,"message":"483","line":88,"column":6,"nodeType":"481","endLine":88,"endColumn":8,"suggestions":"575"},{"ruleId":"474","severity":1,"message":"475","line":45,"column":9,"nodeType":"476","messageId":"477","endLine":45,"endColumn":16},{"ruleId":"474","severity":1,"message":"554","line":46,"column":10,"nodeType":"476","messageId":"477","endLine":46,"endColumn":19},{"ruleId":"474","severity":1,"message":"555","line":47,"column":10,"nodeType":"476","messageId":"477","endLine":47,"endColumn":20},{"ruleId":"474","severity":1,"message":"556","line":48,"column":10,"nodeType":"476","messageId":"477","endLine":48,"endColumn":13},{"ruleId":"474","severity":1,"message":"557","line":76,"column":13,"nodeType":"476","messageId":"477","endLine":76,"endColumn":17},{"ruleId":"474","severity":1,"message":"571","line":55,"column":10,"nodeType":"476","messageId":"477","endLine":55,"endColumn":22},{"ruleId":"474","severity":1,"message":"540","line":56,"column":10,"nodeType":"476","messageId":"477","endLine":56,"endColumn":18},{"ruleId":"474","severity":1,"message":"572","line":56,"column":20,"nodeType":"476","messageId":"477","endLine":56,"endColumn":31},{"ruleId":"474","severity":1,"message":"573","line":58,"column":10,"nodeType":"476","messageId":"477","endLine":58,"endColumn":23},{"ruleId":"474","severity":1,"message":"574","line":58,"column":25,"nodeType":"476","messageId":"477","endLine":58,"endColumn":34},{"ruleId":"479","severity":1,"message":"483","line":81,"column":6,"nodeType":"481","endLine":81,"endColumn":8,"suggestions":"576"},{"ruleId":"474","severity":1,"message":"475","line":56,"column":9,"nodeType":"476","messageId":"477","endLine":56,"endColumn":16},{"ruleId":"479","severity":1,"message":"545","line":195,"column":6,"nodeType":"481","endLine":195,"endColumn":16,"suggestions":"577"},{"ruleId":"474","severity":1,"message":"578","line":118,"column":22,"nodeType":"476","messageId":"477","endLine":118,"endColumn":35},{"ruleId":"474","severity":1,"message":"475","line":35,"column":9,"nodeType":"476","messageId":"477","endLine":35,"endColumn":16},{"ruleId":"479","severity":1,"message":"493","line":120,"column":6,"nodeType":"481","endLine":120,"endColumn":15,"suggestions":"579"},{"ruleId":"474","severity":1,"message":"478","line":73,"column":23,"nodeType":"476","messageId":"477","endLine":73,"endColumn":37},{"ruleId":"479","severity":1,"message":"480","line":238,"column":6,"nodeType":"481","endLine":238,"endColumn":19,"suggestions":"580"},{"ruleId":"479","severity":1,"message":"483","line":242,"column":6,"nodeType":"481","endLine":242,"endColumn":16,"suggestions":"581"},{"ruleId":"474","severity":1,"message":"475","line":90,"column":9,"nodeType":"476","messageId":"477","endLine":90,"endColumn":16},{"ruleId":"474","severity":1,"message":"582","line":16,"column":10,"nodeType":"476","messageId":"477","endLine":16,"endColumn":20},"no-native-reassign",["583"],"no-negated-in-lhs",["584"],["583"],["584"],["583"],["584"],["583"],["584"],["583"],["584"],["583"],["584"],"no-unused-vars","'classes' is assigned a value but never used.","Identifier","unusedVar","'setRowsPerPage' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getData' and 'setLoadingData'. Either include them or remove the dependency array.","ArrayExpression",["585"],"React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["586"],["583"],["584"],"React Hook useEffect has missing dependencies: 'getData' and 'setLoadingNucleos'. Either include them or remove the dependency array.",["587"],"React Hook useEffect has missing dependencies: 'getData' and 'page'. Either include them or remove the dependency array.",["588"],["583"],["584"],"React Hook useEffect has missing dependencies: 'initialValues.avatar', 'initialValues.nucleoid', and 'initialValues.perfilid'. Either include them or remove the dependency array. If 'setUrlPhoto' needs the current value of 'initialValues.avatar', you can also switch to useReducer instead of useState and read 'initialValues.avatar' in the reducer.",["589"],["583"],["584"],"'user' is assigned a value but never used.",["583"],["584"],"no-dupe-keys","Duplicate key 'getDataUser'.","ObjectExpression","unexpected","'dataListUser' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getDataServer'. Either include it or remove the dependency array.",["590"],["583"],["584"],["591"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Duplicate key 'maxWidth'.",["583"],["584"],["592"],["593"],["583"],["584"],"React Hook useEffect has a missing dependency: 'action'. Either include it or remove the dependency array.",["594"],["595"],"React Hook useEffect has missing dependencies: 'adultoIdentificacao', 'infantilIdentificacao', and 'onChange'. Either include them or remove the dependency array. If 'onChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["596"],"React Hook useEffect has a missing dependency: 'itemSelected.identificador'. Either include it or remove the dependency array.",["597"],"React Hook useEffect has a missing dependency: 'onChange'. Either include it or remove the dependency array. If 'onChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["598"],["599"],["583"],["584"],"React Hook useEffect has missing dependencies: 'statusNew' and 'statusPedido'. Either include them or remove the dependency array. If 'setStatusHistory' needs the current value of 'statusPedido', you can also switch to useReducer instead of useState and read 'statusPedido' in the reducer.",["600"],"React Hook useEffect has missing dependencies: 'getMatriculasEfetuadas', 'getStatuPedido', and 'getValortotal'. Either include them or remove the dependency array.",["601"],["583"],["584"],"'getRandomColor' is defined but never used.","'useStyles' is assigned a value but never used.","'openVisu' is assigned a value but never used.","'setOpenVisu' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'itemSelected'. Either include it or remove the dependency array.",["602"],["603"],"React Hook useEffect has missing dependencies: 'getData' and 'setCarregar'. Either include them or remove the dependency array. If 'setCarregar' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["604"],["605"],"'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'dataList' is assigned a value but never used.","'setDataList' is assigned a value but never used.","'total' is assigned a value but never used.","'setTotal' is assigned a value but never used.","'errorFile' is assigned a value but never used.","'fileSelect' is assigned a value but never used.","'url' is assigned a value but never used.","'data' is assigned a value but never used.",["583"],["584"],["606"],"'setMessage' is assigned a value but never used.","'setSeverity' is assigned a value but never used.",["583"],["584"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression",["583"],["584"],"'itemSelected' is assigned a value but never used.","'setopenVisu' is assigned a value but never used.","'inserteAnexos' is assigned a value but never used.","'setAnexos' is assigned a value but never used.",["607"],["608"],["609"],"'setUserSelect' is assigned a value but never used.",["610"],["611"],["612"],"'numberItem' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"613","fix":"614"},{"desc":"615","fix":"616"},{"desc":"617","fix":"618"},{"desc":"619","fix":"620"},{"desc":"621","fix":"622"},{"desc":"623","fix":"624"},{"desc":"625","fix":"626"},{"desc":"625","fix":"627"},{"desc":"615","fix":"628"},{"desc":"629","fix":"630"},{"desc":"625","fix":"631"},{"desc":"632","fix":"633"},{"desc":"634","fix":"635"},{"desc":"636","fix":"637"},{"desc":"638","fix":"639"},{"desc":"640","fix":"641"},{"desc":"642","fix":"643"},{"desc":"644","fix":"645"},{"desc":"625","fix":"646"},{"desc":"647","fix":"648"},{"desc":"649","fix":"650"},{"desc":"625","fix":"651"},{"desc":"625","fix":"652"},{"desc":"625","fix":"653"},{"desc":"647","fix":"654"},{"desc":"621","fix":"655"},{"desc":"613","fix":"656"},{"desc":"615","fix":"657"},"Update the dependencies array to be: [filterValue, getData, setLoadingData]",{"range":"658","text":"659"},"Update the dependencies array to be: [carregar, getData]",{"range":"660","text":"661"},"Update the dependencies array to be: [filterValue, getData, setLoadingNucleos]",{"range":"662","text":"663"},"Update the dependencies array to be: [getData, loadingNucleos, page]",{"range":"664","text":"665"},"Update the dependencies array to be: [edition, initialValues.avatar, initialValues.nucleoid, initialValues.perfilid]",{"range":"666","text":"667"},"Update the dependencies array to be: [getDataServer]",{"range":"668","text":"669"},"Update the dependencies array to be: [getData]",{"range":"670","text":"671"},{"range":"672","text":"671"},{"range":"673","text":"661"},"Update the dependencies array to be: [action, dataListPedido]",{"range":"674","text":"675"},{"range":"676","text":"671"},"Update the dependencies array to be: [adultoIdentificacao, infantil, infantilIdentificacao, onChange]",{"range":"677","text":"678"},"Update the dependencies array to be: [edit, itemSelected.identificador]",{"range":"679","text":"680"},"Update the dependencies array to be: [infantil, onChange]",{"range":"681","text":"682"},"Update the dependencies array to be: [action, listItens]",{"range":"683","text":"684"},"Update the dependencies array to be: [statusNew, statusPedido]",{"range":"685","text":"686"},"Update the dependencies array to be: [getMatriculasEfetuadas, getStatuPedido, getValortotal]",{"range":"687","text":"688"},"Update the dependencies array to be: [edit, itemSelected]",{"range":"689","text":"690"},{"range":"691","text":"671"},"Update the dependencies array to be: [carregar, getData, setCarregar]",{"range":"692","text":"693"},"Update the dependencies array to be: [getDataServer, loading]",{"range":"694","text":"695"},{"range":"696","text":"671"},{"range":"697","text":"671"},{"range":"698","text":"671"},{"range":"699","text":"693"},{"range":"700","text":"667"},{"range":"701","text":"659"},{"range":"702","text":"661"},[6500,6513],"[filterValue, getData, setLoadingData]",[6603,6613],"[carregar, getData]",[4115,4128],"[filterValue, getData, setLoadingNucleos]",[4180,4196],"[getData, loadingNucleos, page]",[2697,2706],"[edition, initialValues.avatar, initialValues.nucleoid, initialValues.perfilid]",[1184,1186],"[getDataServer]",[1491,1493],"[getData]",[4095,4097],[4145,4155],[4446,4462],"[action, dataListPedido]",[1259,1261],[2010,2020],"[adultoIdentificacao, infantil, infantilIdentificacao, onChange]",[2199,2205],"[edit, itemSelected.identificador]",[1109,1119],"[infantil, onChange]",[2463,2474],"[action, listItens]",[1458,1460],"[statusNew, statusPedido]",[5061,5063],"[getMatriculasEfetuadas, getStatuPedido, getValortotal]",[6701,6707],"[edit, itemSelected]",[2330,2332],[7849,7859],"[carregar, getData, setCarregar]",[1136,1145],"[getDataServer, loading]",[6566,6568],[2557,2559],[2269,2271],[5115,5125],[2957,2966],[6459,6472],[6521,6531]]